// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.0.0
//     Template Version: 1.0
//     Generation Date: 2017-07-08 4:28:12 PM
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SPPC.Framework.Model.Workflow.Tracking;

namespace SPPC.Workflow.Persistence.Mapping
{
    /// <summary>
    /// Defines fluent mappings for the <see cref="CustomTrackingEvent"/> entity class.
    /// </summary>
    internal sealed class CustomTrackingEventMap
    {
        private CustomTrackingEventMap()
        {
        }

        internal static void BuildMapping(EntityTypeBuilder<CustomTrackingEvent> builder)
        {
            builder.ToTable("CustomTrackingEvent", "WFTracking");
            builder.HasKey(e => e.Id);
            builder.Property(e => e.Id)
                .HasColumnName("EventID");
            builder.Property(e => e.ActivityId)
                .HasMaxLength(256);
            builder.Property(e => e.ActivityInstanceId)
                .HasMaxLength(256);
            builder.Property(e => e.ActivityName)
                .HasMaxLength(1024);
            builder.Property(e => e.ActivityType)
                .HasMaxLength(2048);
            builder.Property(e => e.CustomRecordName)
                .HasMaxLength(2048);
            builder.Property(e => e.ModifiedDate)
                .HasColumnType("datetime")
                .HasDefaultValueSql("(getdate())");
            builder.Property(e => e.RowGuid)
                .HasColumnName("rowguid")
                .HasDefaultValueSql("(newid())");
            builder.Property(e => e.SerializedData)
                .HasColumnType("nvarchar(MAX)");
            builder.Property(e => e.SerializedAnnotations)
                .HasColumnType("nvarchar(MAX)");
            builder.Property(e => e.TimeCreated)
                .HasColumnType("datetime");
        }
    }
}
