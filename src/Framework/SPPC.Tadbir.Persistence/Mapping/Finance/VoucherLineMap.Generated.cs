// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.584
//     Template Version: 1.0
//     Generation Date: 02/30/1398 03:58:27 ب.ظ
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using SPPC.Tadbir.Model.Finance;

namespace SPPC.Tadbir.Persistence.Mapping
{
    internal static class VoucherLineMap
    {
        internal static void BuildMapping(EntityTypeBuilder<VoucherLine> builder)
        {
            builder.ToTable("VoucherLine", "Finance");
            builder.HasKey(e => e.Id);
            builder.Property(e => e.Id)
                .HasColumnName("LineID");
            builder.Property(e => e.RowNo)
                .IsRequired();
            builder.Property(e => e.Debit)
                .HasColumnType("money")
                .IsRequired();
            builder.Property(e => e.Credit)
                .HasColumnType("money")
                .IsRequired();
            builder.Property(e => e.Description)
                .HasMaxLength(512);
            builder.Property(e => e.Amount);
            builder.Property(e => e.FollowupNo)
                .HasMaxLength(64);
            builder.Property(e => e.CurrencyValue)
                .HasColumnType("money");
            builder.Property(e => e.Mark)
                .HasMaxLength(64);
            builder.Property(e => e.TypeId)
                .IsRequired();
            builder.Property(e => e.SourceId);
            builder.Property(e => e.CurrencyId);
            builder.Property(e => e.RowGuid)
                .HasColumnName("rowguid")
                .HasDefaultValueSql("(newid())");
            builder.Property(e => e.ModifiedDate)
                .HasColumnType("datetime")
                .HasDefaultValueSql("(getdate())");

            builder.HasOne(e => e.Voucher)
                .WithMany()
                .HasForeignKey("VoucherID")
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_Voucher");
            builder.HasOne(e => e.Currency)
                .WithMany()
                .HasForeignKey(e => e.CurrencyId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_Currency");
            builder.HasOne(e => e.Branch)
                .WithMany()
                .HasForeignKey(e => e.BranchId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Corporate_Branch");
            builder.HasOne(e => e.FiscalPeriod)
                .WithMany()
                .HasForeignKey(e => e.FiscalPeriodId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_FiscalPeriod");
            builder.HasOne(e => e.Account)
                .WithMany()
                .HasForeignKey(e => e.AccountId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_Account");
            builder.HasOne(e => e.DetailAccount)
                .WithMany()
                .HasForeignKey(e => e.DetailId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_DetailAccount");
            builder.HasOne(e => e.CostCenter)
                .WithMany()
                .HasForeignKey(e => e.CostCenterId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_CostCenter");
            builder.HasOne(e => e.Project)
                .WithMany()
                .HasForeignKey(e => e.ProjectId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Finance_Project");
            builder.HasOne(e => e.CreatedBy)
                .WithMany()
                .HasForeignKey("CreatedByID")
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Finance_VoucherLine_Auth_CreatedBy");
        }
    }
}
