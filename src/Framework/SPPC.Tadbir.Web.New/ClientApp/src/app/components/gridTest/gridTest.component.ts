import { Component, OnInit, Renderer2, ChangeDetectorRef } from '@angular/core';
import { SettingService, GridService } from '../../service/index';
import { ToastrService } from 'ngx-toastr';
import "rxjs/Rx";
import { TranslateService } from '@ngx-translate/core';
import { Layout} from "../../../environments/environment";
import { RTL } from '@progress/kendo-angular-l10n';
import { MetaDataService } from '../../service/metadata/metadata.service';
import { VoucherApi, AccountApi } from '../../service/api/index';
import { DialogService } from '@progress/kendo-angular-dialog';
import { AutoGeneratedGridComponent } from '../../class/autoGeneratedGrid.component';
import { Filter } from '../../class/filter';
import { FilterExpressionOperator } from '../../class/filterExpressionOperator';



export function getLayoutModule(layout: Layout) {
  return layout.getLayout();
}


@Component({
  selector: 'gridTest',
  templateUrl: './gridTest.component.html',
  providers: [{
    provide: RTL,
    useFactory: getLayoutModule,
    deps: [Layout]
  }]
})

export class GridTestComponent extends AutoGeneratedGridComponent implements OnInit {

  constructor(public toastrService: ToastrService, public translate: TranslateService, public dialogService: DialogService, public gridService: GridService,
    public cdref: ChangeDetectorRef, public renderer: Renderer2, public metadata: MetaDataService, public settingService: SettingService) {
    super(toastrService, translate, gridService, renderer, metadata, settingService, cdref);
  }

  ngOnInit() {
    this.entityTypeName = 'Voucher';
    this.metadataType = 'vouchers';
    this.getDataUrl = VoucherApi.EnvironmentVouchers;

    this.reloadGrid();
  }

  changeEntity() {
    this.currentFilter = this.addFilterToFilterExpression(this.currentFilter,
      new Filter("ParentId", "null", "== {0}", "System.Int32"),
      FilterExpressionOperator.And);

    this.entityTypeName = 'Account';
    this.metadataType = 'accounts';
    this.getDataUrl = AccountApi.EnvironmentAccounts;
    this.reloadGrid();
  }

}


