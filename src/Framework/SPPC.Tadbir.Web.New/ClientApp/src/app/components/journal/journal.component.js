"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
require("rxjs/Rx");
var environment_1 = require("../../../environments/environment");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
var autoGeneratedGrid_component_1 = require("../../class/autoGeneratedGrid.component");
var filter_1 = require("../../class/filter");
var filterExpressionOperator_1 = require("../../class/filterExpressionOperator");
var reportApi_1 = require("../../service/api/reportApi");
var journalType_1 = require("../../enum/journalType");
var journalDisplayType_1 = require("../../enum/journalDisplayType");
function getLayoutModule(layout) {
    return layout.getLayout();
}
exports.getLayoutModule = getLayoutModule;
var JournalComponent = /** @class */ (function (_super) {
    __extends(JournalComponent, _super);
    function JournalComponent(toastrService, translate, dialogService, gridService, cdref, renderer, metadata, settingService) {
        var _this = _super.call(this, toastrService, translate, gridService, renderer, metadata, settingService, cdref) || this;
        _this.toastrService = toastrService;
        _this.translate = translate;
        _this.dialogService = dialogService;
        _this.gridService = gridService;
        _this.cdref = cdref;
        _this.renderer = renderer;
        _this.metadata = metadata;
        _this.settingService = settingService;
        _this.displayType = [
            { value: "مطابق ردیف های سند", key: "1" },
            { value: "مطابق ردیف های سند با سطوح شناور", key: "2" },
            { value: "در سطح کل", key: "3" },
            { value: "در سطح معین", key: "4" },
            { value: "سند خلاصه", key: "5" },
            { value: "سند خلاصه به تفکیک تاریخ", key: "6" },
            { value: "سند خلاصه به تفکیک ماه", key: "7" },
        ];
        _this.voucherStatus = [
            { value: "ثبت شده", key: "2" },
            { value: "ثبت قطعی شده", key: "3" },
            { value: "تایید شده", key: "4" },
            { value: "تصویب شده", key: "5" },
        ];
        _this.branchScope = [
            { value: "شعبه جاری", key: "1" },
            { value: "شعبه جاری و زیرمجموعه ها", key: "2" },
        ];
        _this.articleType = [
            { value: "کلیه آرتیکل ها", key: "1" },
            { value: "آرتیکل های علامت گذاری شده", key: "2" },
            { value: "آرتیکل های علامت گذاری نشده", key: "3" },
        ];
        _this.displayTypeSelected = '1';
        _this.branchScopeSelected = '1';
        _this.voucherStatusSelected = '2';
        _this.articleTypeSelected = '1';
        _this.journalType = '1';
        _this.creditSum = 0;
        _this.debitSum = 0;
        return _this;
    }
    JournalComponent.prototype.ngOnInit = function () {
        this.entityTypeName = environment_1.Entities.JournalByDateByRow;
        this.metadataType = environment_1.Metadatas.JournalByDateByRow;
        this.showloadingMessage = false;
        this.cdref.detectChanges();
    };
    JournalComponent.prototype.getReportData = function () {
        if (this.journalType) {
            this.creditSum = 0;
            this.debitSum = 0;
            this.defaultFilter.push(new filter_1.Filter("VoucherStatusId", this.voucherStatusSelected, "== {0}", "System.Int32"));
            this.pageIndex = 0;
            if (this.journalType == journalType_1.JournalType.ByDate && this.fromDate && this.toDate) {
                switch (parseInt(this.displayTypeSelected)) {
                    case journalDisplayType_1.JournalDisplayType.ByDateByRow:
                        {
                            this.entityTypeName = environment_1.Entities.JournalByDateByRow;
                            this.metadataType = environment_1.Metadatas.JournalByDateByRow;
                            this.getDataUrl = reportApi_1.ReportApi.JournalByDateByRow;
                            break;
                        }
                    case journalDisplayType_1.JournalDisplayType.ByDateByRowDetail:
                        {
                            this.entityTypeName = environment_1.Entities.JournalByDateByRowDetail;
                            this.metadataType = environment_1.Metadatas.JournalByDateByRowDetail;
                            this.getDataUrl = reportApi_1.ReportApi.JournalByDateByRowDetail;
                            break;
                        }
                    case journalDisplayType_1.JournalDisplayType.ByDateByLedger:
                        {
                            this.entityTypeName = environment_1.Entities.JournalByDateByLedger;
                            this.metadataType = environment_1.Metadatas.JournalByDateByLedger;
                            this.getDataUrl = reportApi_1.ReportApi.JournalByDateByLedger;
                            break;
                        }
                    case journalDisplayType_1.JournalDisplayType.ByDateBySubsidiary:
                        {
                            this.entityTypeName = environment_1.Entities.JournalByDateBySubsidiary;
                            this.metadataType = environment_1.Metadatas.JournalByDateBySubsidiary;
                            this.getDataUrl = reportApi_1.ReportApi.JournalByDateBySubsidiary;
                            break;
                        }
                    case journalDisplayType_1.JournalDisplayType.ByDateLedgerSummary:
                        {
                            this.entityTypeName = environment_1.Entities.JournalByDateSummary;
                            this.metadataType = environment_1.Metadatas.JournalByDateSummary;
                            this.getDataUrl = reportApi_1.ReportApi.JournalByDateLedgerSummary;
                            break;
                        }
                    case journalDisplayType_1.JournalDisplayType.ByDateLedgerSummaryByDate:
                        {
                            this.entityTypeName = environment_1.Entities.JournalByDateSummaryByDate;
                            this.metadataType = environment_1.Metadatas.JournalByDateSummaryByDate;
                            this.getDataUrl = reportApi_1.ReportApi.JournalByDateLedgerSummaryByDate;
                            break;
                        }
                    case journalDisplayType_1.JournalDisplayType.ByDateLedgerSummaryByMonth:
                        {
                            this.getDataUrl = "";
                            break;
                        }
                    default:
                }
                this.getDataUrl += "?from=" + this.fromDate + "&to=" + this.toDate;
                this.reloadGrid();
            }
            if (this.journalType == journalType_1.JournalType.ByVoucher) {
                switch (this.displayTypeSelected) {
                    case '1':
                        this.getDataUrl = "";
                        break;
                    case '1':
                        this.getDataUrl = "";
                        break;
                    case '1':
                        this.getDataUrl = "";
                        break;
                    case '1':
                        this.getDataUrl = "";
                        break;
                    case '1':
                        this.getDataUrl = "";
                        break;
                    case '1':
                        this.getDataUrl = "";
                        break;
                    case '1':
                        this.getDataUrl = "";
                        break;
                    default:
                }
            }
        }
    };
    JournalComponent.prototype.reloadGrid = function (insertedModel) {
        var _this = this;
        if (this.getDataUrl) {
            //if (this.viewAccess) {
            this.grid.loading = true;
            if (this.totalRecords == this.skip && this.totalRecords != 0) {
                this.skip = this.skip - this.pageSize;
            }
            if (insertedModel)
                this.goToLastPage(this.totalRecords);
            var filter = this.currentFilter;
            this.defaultFilter.forEach(function (item) {
                filter = _this.addFilterToFilterExpression(_this.currentFilter, item, filterExpressionOperator_1.FilterExpressionOperator.And);
            });
            this.gridService.getAll(this.getDataUrl, this.pageIndex, this.pageSize, this.sort, filter).subscribe(function (res) {
                var resData = res.body;
                var totalCount = 0;
                if (res.headers != null) {
                    var headers = res.headers != undefined ? res.headers : null;
                    if (headers != null) {
                        var retheader = headers.get('X-Total-Count');
                        if (retheader != null)
                            totalCount = parseInt(retheader.toString());
                    }
                }
                _this.rowData = {
                    data: resData.items,
                    total: totalCount
                };
                _this.creditSum = resData.creditSum;
                _this.debitSum = resData.debitSum;
                _this.showloadingMessage = !(resData.items.length == 0);
                _this.totalRecords = totalCount;
                _this.grid.loading = false;
            });
            //}
            //else {
            //  this.rowData = {
            //    data: [],
            //    total: 0
            //  }
            //}
        }
        this.cdref.detectChanges();
    };
    JournalComponent = __decorate([
        core_1.Component({
            selector: 'spps-journal',
            templateUrl: './journal.component.html',
            styles: ["\n.section-option { margin-top: 15px; background-color: #f6f6f6; border: solid 1px #dadde2; padding: 15px 15px 0; }\n.section-option label,input[type=text] { width:100% } /deep/.section-option kendo-dropdownlist { width:100% }\n/deep/ .k-switch-on .k-switch-handle { left: -8px !important; }\n/deep/ .k-switch-off .k-switch-handle { left: -4px !important; }\n/deep/ .k-switch[dir=\"rtl\"] .k-switch-label-on { right: -22px; }\n/deep/ .k-switch[dir=\"rtl\"] .k-switch-label-off { left: 0; }\n/deep/ .k-switch-label-on,/deep/ .k-switch-label-off { overflow: initial; }\n.journal-type { margin:0 15px 10px; } .journal-type label { margin-top:10px; }\n/deep/.k-footer-template { background-color: #b3b3b3; }\n"],
            providers: [{
                    provide: kendo_angular_l10n_1.RTL,
                    useFactory: getLayoutModule,
                    deps: [environment_1.Layout]
                }]
        })
    ], JournalComponent);
    return JournalComponent;
}(autoGeneratedGrid_component_1.AutoGeneratedGridComponent));
exports.JournalComponent = JournalComponent;
//# sourceMappingURL=journal.component.js.map