@using SPPC.Framework.Values
@using SPPC.Tadbir.Values
@model SPPC.Tadbir.ViewModel.Auth.UserProfileViewModel

@{
    string title = Strings.ChangePassword;
    ViewBag.Title = title;
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(LocalStrings.HomePage, "index", "home", new { area = String.Empty }, null)</li>
    <li class="active">@title</li>
</ol>

<div class="col-sm-8 col-sm-offset-2 form-centered">
    <div class="page-header">
        <h2>@title</h2>
    </div>
    <div class="form-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserName)

            <div class="form-group">
                @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label" })
                @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label" })
                @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.RepeatPassword, htmlAttributes: new { @class = "control-label" })
                @Html.PasswordFor(model => model.RepeatPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RepeatPassword, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit" value="@LocalStrings.Save" class="btn btn-primary" />
                @Html.ActionLink(LocalStrings.Cancel, "index", "home", new { area = String.Empty }, new { @class = "btn btn-primary" })
            </div>
        }
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
