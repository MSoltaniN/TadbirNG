@using SPPC.Tadbir.Values
@using SPPC.Tadbir.Web.Extensions
@model SPPC.Tadbir.ViewModel.Auth.LoginViewModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="fa">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Strings.AppLogin | @Strings.AppName</title>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="icon" href="@Url.Content("~/favicon.ico")">
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
</head>
<body dir="rtl">
    <div class="container">
        <div class="row">
            <div class="col-md-4 col-md-offset-4">
                <div id="login-form" class="panel panel-primary">
                    <div class="panel-heading">
                        @String.Format("{0} {1}", Strings.AppLogin, Strings.AppBrandName)
                    </div>
                    <div class="panel-body">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, labelText: FieldNames.UserName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, labelText: FieldNames.Password, htmlAttributes: new { @class = "control-label" })
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required" })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            @Html.Captcha()

                            <div class="form-group">
                                <input type="submit" value="@Strings.AppLogin" class="btn btn-primary" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/bundles/site")
</body>
</html>
