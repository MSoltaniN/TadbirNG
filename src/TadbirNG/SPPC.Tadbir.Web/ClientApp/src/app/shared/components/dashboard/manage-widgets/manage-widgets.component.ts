import {
    ChangeDetectorRef,
    Component,
    ElementRef,
    HostListener,
    NgZone,
    OnInit,
    Renderer2,
    ViewChild,
  } from "@angular/core";
  import { ActivatedRoute } from "@angular/router";
  import { TranslateService } from "@ngx-translate/core";
  import {
    DialogCloseResult,
    DialogService,
  } from "@progress/kendo-angular-dialog";
  import { RTL } from "@progress/kendo-angular-l10n";
  import { SettingService } from "@sppc/config/service";
  import { AuthenticationService } from "@sppc/core";
  import { BranchScopeResource, DocumentStatusValue } from "@sppc/finance/enum";
  import { Voucher } from "@sppc/finance/models";
  import { VoucherService } from "@sppc/finance/service";
  import { VoucherApi } from "@sppc/finance/service/api";
  import { AutoGeneratedGridComponent, Filter, String } from "@sppc/shared/class";
  import { ReloadOption } from "@sppc/shared/class/reload-option";
  import { ErrorListComponent } from "@sppc/shared/components/errorList/errorList.component";
  import { QuickReportSettingComponent } from "@sppc/shared/components/reportManagement/QuickReport-Setting.component";
  import { ReportManagementComponent } from "@sppc/shared/components/reportManagement/reportManagement.component";
  import { ReportViewerComponent } from "@sppc/shared/components/reportViewer/reportViewer.component";
  import { ViewIdentifierComponent } from "@sppc/shared/components/viewIdentifier/view-identifier.component";
  import { ReloadStatusType } from "@sppc/shared/enum";
  import {
    Entities,
    Layout,
    MessageType,
    Metadatas,
  } from "@sppc/shared/enum/metadata";
  import { Item } from "@sppc/shared/models";
  import {
    DraftVoucherPermissions,
    GlobalPermissions,
    ManageDraftVouchersPermissions,
    ManageVouchersPermissions,
    ViewName,
    VoucherPermissions,
  } from "@sppc/shared/security";
  import {
    BrowserStorageService,
    ErrorHandlingService,
    GridService,
    LookupService,
    MetaDataService,
    ReportingService,
  } from "@sppc/shared/services";
  import { DashboardApi, LookupApi } from "@sppc/shared/services/api";
  import { ToastrService } from "ngx-toastr";
  import "rxjs/Rx";
  export function getLayoutModule(layout: Layout) {
    return layout.getLayout();
  }
  
  @Component({
    selector: "manage-widgets",
    templateUrl: "./manage-widgets.component.html",
    styles: [``],
    providers: [
      {
        provide: RTL,
        useFactory: getLayoutModule,
        deps: [Layout],
      },
    ],
  })
  export class ManageWidgetsComponent
    extends AutoGeneratedGridComponent
    implements OnInit
  {  
    constructor(
      public toastrService: ToastrService,
      public translate: TranslateService,
      public dialogService: DialogService,
      public gridService: GridService,
      public cdref: ChangeDetectorRef,
      public renderer: Renderer2,
      public metadata: MetaDataService,
      private authenticationService: AuthenticationService,
      public settingService: SettingService,
      public reporingService: ReportingService,
      public ngZone: NgZone,
      public bStorageService: BrowserStorageService,
      private lookupService: LookupService,
      private activeRoute: ActivatedRoute,
      public errorHandlingService: ErrorHandlingService,
      public elem: ElementRef
    ) {
      super(
        toastrService,
        translate,
        gridService,
        renderer,
        metadata,
        settingService,
        bStorageService,
        cdref,
        ngZone,
        elem
      );
    }
  
    ngOnInit() {
      this.entityName = Entities.Widget;
      this.viewId = ViewName[this.entityTypeName];

      this.getDataUrl = DashboardApi.AllWidgets;
      this.reloadGrid();
      this.cdref.detectChanges();
      console.log(this.rowData);
      
    }

    addNew() {}

    onSave(event) {}
  
    editHandler() {}

    removeHandler() {}
  }
  