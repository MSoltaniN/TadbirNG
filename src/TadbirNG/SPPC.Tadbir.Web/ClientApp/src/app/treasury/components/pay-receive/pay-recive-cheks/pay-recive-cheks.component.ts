import { ChangeDetectorRef, Component, ElementRef, Input, NgZone, OnInit, Renderer2, ViewChild } from '@angular/core';
import { TranslateService } from '@ngx-translate/core';
import { DialogService } from '@progress/kendo-angular-dialog';
import { GridComponent } from '@progress/kendo-angular-grid';
import { RTL } from '@progress/kendo-angular-l10n';
import { SettingService } from '@sppc/config/service';
import { AutoGeneratedGridComponent } from '@sppc/shared/class';
import { Entities, Layout } from '@sppc/shared/enum/metadata';
import { ViewName } from '@sppc/shared/security';
import { BrowserStorageService, GridService, MetaDataService } from '@sppc/shared/services';
import { urlPathType } from '@sppc/treasury/enums/payReceive';
import { PayReceiveApi } from '@sppc/treasury/service/api';
import { PayReceiveService } from '@sppc/treasury/service/pay-receive.service';
import { ToastrService } from 'ngx-toastr';

export function getLayoutModule(layout: Layout) {
  return layout.getLayout();
}

@Component({
  selector: 'pay-recive-cheks',
  templateUrl: './pay-recive-cheks.component.html',
  styleUrls: ['./pay-recive-cheks.component.css'],
  providers: [
    {
      provide: RTL,
      useFactory: getLayoutModule,
      deps: [Layout],
    },
  ],
})
export class PayReciveCheksComponent
 extends AutoGeneratedGridComponent
 implements OnInit {

  @ViewChild(GridComponent, {static: true}) grid: GridComponent;

  constructor(
    public toastrService: ToastrService,
    public translate: TranslateService,
    public gridService: GridService,
    public bStorageService: BrowserStorageService,
    public cdref: ChangeDetectorRef,
    public renderer: Renderer2,
    public metadata: MetaDataService,
    private payReceiveService: PayReceiveService,
    public dialogService: DialogService,
    public settingService: SettingService,
    public ngZone: NgZone,
    public elem: ElementRef
  ) {
    super(
      toastrService,
      translate,
      gridService,
      renderer,
      metadata,
      settingService,
      bStorageService,
      cdref,
      ngZone,
      elem,
      PayReceiveApi.Payments,
      PayReceiveApi.Payment
    );
  }

  @Input() set urlPath(type:string) {
    if (type == urlPathType.receivals) {
      this.entityName = Entities.Receival;
      this.environmentModelsUrl = PayReceiveApi.Receivals
      this.modelUrl = PayReceiveApi.Receival;
    } else {
      this.entityName = Entities.Payment;
    }
    this.viewId = ViewName[this.entityTypeName];
  }

  ngOnInit(): void {
  }

}
