// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.0.0
//     Template Version: 1.0
//     Generation Date: 2017-03-08 5:59:40 PM
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using SPPC.Tadbir.Model.Contact;

namespace SPPC.Tadbir.Model.Auth
{
    /// <summary>
    /// Represents an application user recognized by the security subsystem
    /// </summary>
    public partial class User : CoreEntity
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        public User()
        {
            this.UserName = String.Empty;
            this.PasswordHash = String.Empty;
            this.ModifiedDate = DateTime.Now;
            InitReferences();
        }

        /// <summary>
        /// Gets or sets the login name of this user
        /// </summary>
        public virtual string UserName { get; set; }

        /// <summary>
        /// Gets or sets the calculated hash value of this user's password as a hexadecimal string
        /// </summary>
        public virtual string PasswordHash { get; set; }

        /// <summary>
        /// Gets or sets the date and time when this user last logged into the application
        /// </summary>
        public virtual DateTime? LastLoginDate { get; set; }

        /// <summary>
        /// Gets or sets the value that indicates if this user is enabled inside the application's security system
        /// </summary>
        public virtual bool IsEnabled { get; set; }

        /// <summary>
        /// Gets or sets the business person that this user represents
        /// </summary>
        public virtual Person Person { get; set; }

        // Temporarily disabled, due to EF Core's lack of support for direct many-to-many relationships.
        ///// <summary>
        ///// Gets or sets the collection of all application-defined roles that are assigned to this user
        ///// </summary>
        ////public virtual IList<Role> Roles { get; protected set; }

        private void InitReferences()
        {
            Person = new Person();
            UserRoles = new List<UserRole>();
        }
    }
}
