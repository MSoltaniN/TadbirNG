// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPPC.Tadbir.Persistence;

namespace SPPC.Tadbir.Web.Api.Migrations
{
    [DbContext(typeof(TadbirContext))]
    [Migration("20231021095550_test2")]
    partial class test2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleBranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "BranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("RoleBranch", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleFiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "FiscalPeriodId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("RoleFiscalPeriod", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WidgetId");

                    b.ToTable("RoleWidget", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("IssuedById")
                        .HasColumnType("int");

                    b.Property<string>("IssuedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("PayReceive", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PayReceiveAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveCashAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankOrderNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBank")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.ToTable("PayReceiveCashAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveVoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("VoucherLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PayReceiveId", "VoucherLineId");

                    b.HasIndex("VoucherLineId")
                        .IsUnique();

                    b.ToTable("PayReceiveVoucherLine", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SourceAppID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("SourceApp", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserCashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashRegisterId");

                    b.ToTable("UserCashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<string>("EndNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadStartNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("SeriesNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StartNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.ToTable("CheckBook", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookPageID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckBookId")
                        .HasColumnType("int");

                    b.Property<int?>("CheckId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CheckBookId");

                    b.ToTable("CheckBookPage", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LabelSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomFormID")
                        .HasColumnType("int");

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SettingID")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomFormID");

                    b.HasIndex("SettingID");

                    b.ToTable("LabelSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int")
                        .HasColumnName("OperationID");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("SourceID");

                    b.Property<int>("SourceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SourceTypeID");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceTypeId");

                    b.HasIndex("SubsystemId");

                    b.ToTable("LogSetting", "Config");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(3608),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 2,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9466),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 3,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9497),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 4,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9504),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 5,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9508),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 6,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9527),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 7,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9531),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 8,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9536),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 9,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9540),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 10,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9547),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 11,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9552),
                            OperationId = 7,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 12,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9717),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 13,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9722),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 14,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9733),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 15,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9739),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 16,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9744),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 17,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9748),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 18,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9756),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 19,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9760),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 20,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9765),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 21,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9769),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 22,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9774),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 23,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9778),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 24,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9783),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 25,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9787),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 26,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9793),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 27,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9797),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 28,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9801),
                            OperationId = 35,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 29,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9806),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 30,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9962),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 31,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9969),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 32,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9974),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 33,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9978),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 34,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9989),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 35,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9993),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 36,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 645, DateTimeKind.Local).AddTicks(9999),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 37,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(3),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 38,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(11),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 39,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(15),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 40,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(20),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 41,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(24),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 42,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(28),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 43,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(33),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 44,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(38),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 45,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(42),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 46,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(47),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 47,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(52),
                            OperationId = 40,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 48,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(56),
                            OperationId = 41,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 49,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(61),
                            OperationId = 42,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 50,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(65),
                            OperationId = 43,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 51,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(70),
                            OperationId = 44,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 52,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(74),
                            OperationId = 45,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 53,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(79),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 54,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(83),
                            OperationId = 55,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 55,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(87),
                            OperationId = 56,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 56,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(92),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 57,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(96),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 58,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(104),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 59,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(108),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 60,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(112),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 61,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(116),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 62,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(121),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 63,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(175),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 64,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(180),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 65,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(184),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 66,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(190),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 67,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(194),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 68,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(199),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 69,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(206),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 70,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(210),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 71,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(214),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 72,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(219),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 73,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(223),
                            OperationId = 35,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 74,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(227),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 75,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(232),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 76,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(236),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 77,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(383),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 78,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(388),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 79,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(395),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 80,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(399),
                            OperationId = 8,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 81,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(403),
                            OperationId = 30,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 82,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(407),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 83,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(411),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 84,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(415),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 85,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(419),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 86,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(423),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 87,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(427),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 88,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(431),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 89,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(435),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 90,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(440),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 91,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(444),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 92,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(448),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 93,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(687),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 94,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(693),
                            OperationId = 7,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 95,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(698),
                            OperationId = 31,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 96,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(702),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 97,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(707),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 98,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(711),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 99,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(716),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(720),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 101,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(726),
                            OperationId = 11,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 102,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(730),
                            OperationId = 12,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 103,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(735),
                            OperationId = 13,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 104,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(740),
                            OperationId = 14,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 105,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(744),
                            OperationId = 15,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 106,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(749),
                            OperationId = 16,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 107,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(753),
                            OperationId = 17,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 108,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(757),
                            OperationId = 18,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 109,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(762),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 110,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(766),
                            OperationId = 36,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 111,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(770),
                            OperationId = 37,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 112,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(776),
                            OperationId = 38,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 113,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(780),
                            OperationId = 39,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 114,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(785),
                            OperationId = 46,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 115,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(789),
                            OperationId = 47,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 116,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(793),
                            OperationId = 48,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 117,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(798),
                            OperationId = 49,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 118,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(803),
                            OperationId = 50,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 119,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(807),
                            OperationId = 51,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 120,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(811),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 121,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(816),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 122,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(821),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 123,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(826),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 124,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(830),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 125,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(834),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 126,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(839),
                            OperationId = 11,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 127,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(843),
                            OperationId = 12,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 128,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(848),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 129,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(902),
                            OperationId = 36,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 130,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(909),
                            OperationId = 37,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 131,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(914),
                            OperationId = 38,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 132,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(918),
                            OperationId = 39,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 133,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(924),
                            OperationId = 46,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 134,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(928),
                            OperationId = 47,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 135,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(933),
                            OperationId = 52,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 136,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(937),
                            OperationId = 53,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 137,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(941),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 138,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(946),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 139,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(950),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 140,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(954),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 141,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(959),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 142,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(964),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 143,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(968),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 144,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(973),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 145,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(977),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 146,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(982),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 147,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(986),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 148,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(991),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 149,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(995),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 150,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1000),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 151,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1004),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 152,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1008),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 153,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1013),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 154,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1024),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 155,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1088),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 156,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1094),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 157,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1098),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 158,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1103),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 159,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1107),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 160,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1112),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 161,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1116),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 162,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1125),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 163,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1132),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 164,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1137),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 165,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1155),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 166,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1167),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 167,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1172),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 168,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1186),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 169,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1190),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 170,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1194),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 171,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1199),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 172,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1203),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 173,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1207),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 174,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1212),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 175,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1216),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 176,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1222),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 177,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1226),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 178,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1232),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 179,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1237),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 180,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1241),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 181,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1246),
                            OperationId = 32,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 182,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1251),
                            OperationId = 33,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 183,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1255),
                            OperationId = 34,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 184,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1260),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 185,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1264),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 186,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1269),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 187,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1274),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 188,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1279),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 189,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1283),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 190,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1334),
                            OperationId = 7,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 191,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1340),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 192,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1344),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 193,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1349),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 194,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1353),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 195,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1358),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 196,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1362),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 197,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1366),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 198,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1373),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 199,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1377),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 200,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1382),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 201,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1386),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 202,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1391),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 203,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1395),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 204,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1400),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 205,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1404),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 206,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1408),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 207,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1413),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 208,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1418),
                            OperationId = 60,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 209,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1423),
                            OperationId = 61,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 210,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1427),
                            OperationId = 62,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 211,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1431),
                            OperationId = 63,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 212,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1436),
                            OperationId = 64,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 213,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1440),
                            OperationId = 65,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 214,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1445),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 215,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1449),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 216,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1453),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 217,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1458),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 218,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1462),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 219,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1468),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 220,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1472),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 221,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1477),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 222,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1481),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 223,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1485),
                            OperationId = 66,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 224,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1490),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 225,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1542),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 226,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1547),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 227,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1551),
                            OperationId = 8,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 228,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1556),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 229,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1560),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 230,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1570),
                            OperationId = 67,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 231,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1575),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 232,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1579),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 233,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1583),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 234,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1588),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 235,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1593),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 236,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1597),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 237,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1601),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 238,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1606),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 239,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1610),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 240,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1615),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 241,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1621),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 242,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1625),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 243,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1629),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 244,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1634),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 245,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1638),
                            OperationId = 13,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 246,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1643),
                            OperationId = 14,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 247,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1647),
                            OperationId = 15,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 248,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1651),
                            OperationId = 16,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 249,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1656),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 250,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1660),
                            OperationId = 68,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 251,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1666),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 252,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1670),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 253,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1675),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 254,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1679),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 255,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1687),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 256,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1691),
                            OperationId = 13,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 257,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1696),
                            OperationId = 14,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 258,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1795),
                            OperationId = 15,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 259,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1801),
                            OperationId = 16,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 260,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1806),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 261,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1810),
                            OperationId = 68,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 262,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1817),
                            OperationId = 69,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 263,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1822),
                            OperationId = 70,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 264,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1830),
                            OperationId = 71,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 265,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1834),
                            OperationId = 72,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 266,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1839),
                            OperationId = 73,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 267,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1843),
                            OperationId = 74,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 268,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1848),
                            OperationId = 69,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 269,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1852),
                            OperationId = 70,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 270,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1856),
                            OperationId = 71,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 271,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1861),
                            OperationId = 72,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 272,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1865),
                            OperationId = 73,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 273,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1870),
                            OperationId = 74,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 274,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1875),
                            OperationId = 75,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 275,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1879),
                            OperationId = 76,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 276,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1883),
                            OperationId = 77,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 277,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(1888),
                            OperationId = 78,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 278,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2038),
                            OperationId = 75,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 279,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2050),
                            OperationId = 76,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 280,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2055),
                            OperationId = 77,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 281,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2060),
                            OperationId = 78,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 282,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2064),
                            OperationId = 79,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 283,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2068),
                            OperationId = 80,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 284,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2080),
                            OperationId = 81,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 285,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2085),
                            OperationId = 82,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 286,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2089),
                            OperationId = 83,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 287,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2093),
                            OperationId = 84,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 288,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2098),
                            OperationId = 85,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 289,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2104),
                            OperationId = 86,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 290,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2110),
                            OperationId = 79,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 291,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2114),
                            OperationId = 80,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 292,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2118),
                            OperationId = 81,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 293,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2123),
                            OperationId = 82,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 294,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2127),
                            OperationId = 83,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 295,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2132),
                            OperationId = 84,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 296,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2137),
                            OperationId = 85,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 297,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2141),
                            OperationId = 86,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 298,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2145),
                            OperationId = 87,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 299,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2150),
                            OperationId = 88,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 300,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2155),
                            OperationId = 87,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 301,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2159),
                            OperationId = 88,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 302,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2167),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 303,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2172),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 304,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2176),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 305,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2182),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 306,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2187),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 307,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2191),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 308,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2196),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 309,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2200),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 310,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2204),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 311,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2209),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 312,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2213),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 313,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2266),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 314,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2272),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 315,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2276),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 316,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2282),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 317,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2286),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 318,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2291),
                            OperationId = 91,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 319,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2295),
                            OperationId = 92,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 320,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2299),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 321,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2304),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 322,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2308),
                            OperationId = 91,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 323,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2313),
                            OperationId = 92,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 324,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2320),
                            OperationId = 93,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 325,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2324),
                            OperationId = 93,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 326,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2329),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100000,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2333),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100001,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2337),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100002,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2345),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100003,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2350),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100004,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2354),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100005,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2359),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100006,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2363),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100007,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2367),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100008,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 646, DateTimeKind.Local).AddTicks(2379),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("DescriptionKey")
                        .HasMaxLength(1028)
                        .HasColumnType("nvarchar(1028)");

                    b.Property<bool>("IsStandalone")
                        .HasColumnType("bit");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("ScopeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsystem")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Setting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("Values");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("UserSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ValueID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("UserValue", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NameKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("UserValueCategory", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.ViewSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViewSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ViewSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentStatus", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentType", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FilterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Filter", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InactiveEntityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("InactiveEntity", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLog", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogArchiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLogArchive", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Branch", "Corporate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Level = 0,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 554, DateTimeKind.Local).AddTicks(4701),
                            Name = "دفتر مرکزی",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Level = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 554, DateTimeKind.Local).AddTicks(5679),
                            Name = "نمایشگاه شمال تهران",
                            ParentId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrencyAdjustable")
                        .HasColumnType("bit");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TurnoverMode")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Account", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CollectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("MultiSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TypeLevel")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("AccountCollection", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCollectionAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("AccountCollectionAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountCollectionCategory", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "CostCenterId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("AccountCostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("AccountCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountDetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "DetailAccountId");

                    b.HasIndex("DetailAccountId");

                    b.ToTable("AccountDetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountGroup", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountHolderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasSignature")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountOwnerId");

                    b.ToTable("AccountHolder", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountOwnerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<string>("BankBranchName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BranchIndex")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ShabaNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("AccountOwner", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AccountProject", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("CostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("DecimalCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefaultCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("MinorUnit")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("TaxCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("Currency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyRateID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Multiplier")
                        .HasColumnType("float");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CurrencyRate", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerTaxInfoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("BuyerType")
                        .HasColumnType("int");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CustomerFirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EconomicCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PerCityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("CustomerTaxInfo", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("DetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FiscalPeriod", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("Project", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.TaxCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaxCurrencyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("TaxCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedByID");

                    b.Property<string>("ApproverName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Association")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int")
                        .HasColumnName("ConfirmedByID");

                    b.Property<string>("ConfirmerName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("IssuedByID");

                    b.Property<int>("DailyNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBalanced")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("ModifiedByID");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifierName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SaveCount")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<short>("SubjectType")
                        .HasColumnType("smallint");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OriginId");

                    b.HasIndex("StatusId");

                    b.ToTable("Voucher", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyValue")
                        .HasColumnType("money");

                    b.Property<decimal>("Debit")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FollowupNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Mark")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.Property<short>("TypeId")
                        .HasColumnType("smallint");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherLine", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OriginID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("VoucherOrigin", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.CustomForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomFormID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("CustomForm", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("EntityType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(4665),
                            Name = "Account",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5090),
                            Name = "AccountCollectionAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5106),
                            Name = "AccountGroup",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5112),
                            Name = "Branch",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5118),
                            Name = "CostCenter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5132),
                            Name = "Currency",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5138),
                            Name = "DetailAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5144),
                            Name = "FiscalPeriod",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5150),
                            Name = "OperationLog",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5159),
                            Name = "Project",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5165),
                            Name = "Setting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5170),
                            Name = "Voucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5176),
                            Name = "DraftVoucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5182),
                            Name = "DashboardTab",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5189),
                            Name = "Widget",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5195),
                            Name = "CheckBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5201),
                            Name = "CashRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5209),
                            Name = "SourceApp",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 24,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5215),
                            Name = "Receipt",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5221),
                            Name = "Payment",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100001,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5227),
                            Name = "Brand",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100002,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5233),
                            Name = "Unit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100003,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5238),
                            Name = "Property",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100004,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 357, DateTimeKind.Local).AddTicks(5244),
                            Name = "Attribute",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Operation", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(2645),
                            Name = "View",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3304),
                            Name = "Create",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3322),
                            Name = "Edit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3328),
                            Name = "Delete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3334),
                            Name = "Filter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3358),
                            Name = "Print",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3364),
                            Name = "Save",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3370),
                            Name = "Archive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3377),
                            Name = "SetDefault",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3386),
                            Name = "Design",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3391),
                            Name = "Check",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3397),
                            Name = "UndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3403),
                            Name = "Confirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3408),
                            Name = "UndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3413),
                            Name = "Approve",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3419),
                            Name = "UndoApprove",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3425),
                            Name = "Finalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3435),
                            Name = "UndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3442),
                            Name = "Mark",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3449),
                            Name = "QuickReportDesign",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3455),
                            Name = "GroupDelete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3460),
                            Name = "ViewArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3466),
                            Name = "CalendarChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3471),
                            Name = "CurrencyChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3476),
                            Name = "DecimalCountChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3482),
                            Name = "DefaultCodingChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3487),
                            Name = "RoleAccess",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3493),
                            Name = "CreateLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3499),
                            Name = "EditLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3504),
                            Name = "DeleteLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3510),
                            Name = "GroupDeleteLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3516),
                            Name = "CreateRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3521),
                            Name = "EditRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3529),
                            Name = "DeleteRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3535),
                            Name = "PrintRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3541),
                            Name = "GroupDeleteRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 45,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3547),
                            Name = "ViewRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3553),
                            Name = "GroupCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3559),
                            Name = "GroupUndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 48,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3565),
                            Name = "GroupFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 49,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3678),
                            Name = "GroupUndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 50,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3688),
                            Name = "GroupConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 51,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3694),
                            Name = "GroupUndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 52,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3700),
                            Name = "Normalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 53,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3705),
                            Name = "GroupNormalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 54,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3711),
                            Name = "Export",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 55,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3717),
                            Name = "ExportRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 56,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3722),
                            Name = "FilterRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 58,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3727),
                            Name = "PrintPreview",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 60,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3733),
                            Name = "CreatePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 61,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3739),
                            Name = "DeletePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 62,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3744),
                            Name = "CancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 63,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3751),
                            Name = "UndoCancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 64,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3757),
                            Name = "ConnectToCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 65,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3763),
                            Name = "DisconnectFromCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 66,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3768),
                            Name = "AssignCashRegisterUser",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 67,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3774),
                            Name = "UndoArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 68,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3781),
                            Name = "Register",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 69,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3787),
                            Name = "RemoveInvalidAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 70,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3794),
                            Name = "AggregateAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 71,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3800),
                            Name = "CreateAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 72,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3806),
                            Name = "EditAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 73,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3843),
                            Name = "DeleteAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 74,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3849),
                            Name = "GroupDeleteAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 75,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3855),
                            Name = "PrintAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 76,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3865),
                            Name = "PrintPreviewAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 77,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3871),
                            Name = "FilterAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 78,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3877),
                            Name = "ExportAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 79,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3882),
                            Name = "CreateCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 80,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3888),
                            Name = "EditCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 81,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3894),
                            Name = "DeleteCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 82,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3900),
                            Name = "GroupDeleteCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 83,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3906),
                            Name = "PrintCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 84,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3911),
                            Name = "PrintPreviewCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 85,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3917),
                            Name = "FilterCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 86,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3922),
                            Name = "ExportCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 87,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3928),
                            Name = "RemoveInvalidCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 88,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3934),
                            Name = "AggregateCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 89,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3940),
                            Name = "Deactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 90,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3945),
                            Name = "Reactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 91,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(3950),
                            Name = "PrintForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 92,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(4026),
                            Name = "PrintPreviewForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 93,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 367, DateTimeKind.Local).AddTicks(4040),
                            Name = "UndoRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSource", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8769),
                            Name = "Journal",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8931),
                            Name = "AccountBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8938),
                            Name = "CurrencyBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8942),
                            Name = "TestBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8946),
                            Name = "ItemBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8953),
                            Name = "BalanceByAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(8957),
                            Name = "EnvironmentParams",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(9024),
                            Name = "ProfitLoss",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(9030),
                            Name = "AccountRelations",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(9036),
                            Name = "BalanceSheet",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(9040),
                            Name = "SystemIssue",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 343, DateTimeKind.Local).AddTicks(9044),
                            Name = "CheckBookReport",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceListID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceList", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 342, DateTimeKind.Local).AddTicks(1703),
                            Name = "BaseData",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 342, DateTimeKind.Local).AddTicks(1856),
                            Name = "OperationalForms",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 342, DateTimeKind.Local).AddTicks(1864),
                            Name = "Reports",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProvinceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Province", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Subsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Subsystem", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 337, DateTimeKind.Local).AddTicks(45),
                            Name = "Administration",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 339, DateTimeKind.Local).AddTicks(5367),
                            Name = "Accounting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 339, DateTimeKind.Local).AddTicks(5488),
                            Name = "Treasury",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100000,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 25, 47, 339, DateTimeKind.Local).AddTicks(5495),
                            Name = "ProductScope",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttributeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Attribute", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("SocialLink")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Website")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Brand", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FileID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UniqeName")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("File", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PropertyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Suffix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Property", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnitID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Symbol")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Unit", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VersionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.HasKey("Id");

                    b.ToTable("Version", "Core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2022, 8, 27, 13, 56, 52, 150, DateTimeKind.Unspecified),
                            Number = "2.2.0",
                            RowGuid = new Guid("26452115-8352-42fe-a7b8-4bd3d32f50f6")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dashboard", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardTabID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("DashboardId");

                    b.ToTable("DashboardTab", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.FunctionParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FunctionParameterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("FunctionParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TabWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TabId");

                    b.HasIndex("WidgetId");

                    b.ToTable("TabWidget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsedParameterId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ParameterId");

                    b.ToTable("UsedParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Widget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WidgetId");

                    b.ToTable("WidgetAccount", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetFunctionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetFunction", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetType", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany("RoleBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany("RoleFiscalPeriods")
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("RoleWidgets")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Auth_RoleWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("Accounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("CashAccounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_SourceApp");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("PayReceiveVoucherLines")
                        .HasForeignKey("PayReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherLine", "VoucherLine")
                        .WithOne()
                        .HasForeignKey("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", "VoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayReceive");

                    b.Navigation("VoucherLine");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.CashRegister", "CashRegister")
                        .WithMany()
                        .HasForeignKey("CashRegisterId")
                        .HasConstraintName("FK_CashFlow_UserCashRegister_CashFlow_CashRegister")
                        .IsRequired();

                    b.Navigation("CashRegister");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Check_CheckBook_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Check.CheckBook", "CheckBook")
                        .WithMany("Pages")
                        .HasForeignKey("CheckBookId")
                        .HasConstraintName("FK_Check_CheckBookPage_Check_CheckBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckBook");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.CustomForm", "CustomForm")
                        .WithMany()
                        .HasForeignKey("CustomFormID")
                        .HasConstraintName("FK_Config_LabelSetting_Metadata_CustomForm");

                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingID")
                        .HasConstraintName("FK_Config_LabelSetting_Config_Setting");

                    b.Navigation("CustomForm");

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceType", "SourceType")
                        .WithMany()
                        .HasForeignKey("SourceTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_SourceType")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Subsystem", "Subsystem")
                        .WithMany()
                        .HasForeignKey("SubsystemId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Subsystem")
                        .IsRequired();

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceType");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .HasConstraintName("FK_Config_Setting_Config_Parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .HasConstraintName("FK_Config_UserSetting_Config_Setting")
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.UserValueCategory", "Category")
                        .WithMany("Values")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Config_UserValue_Config_Category")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_InactiveEntity_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_InactiveEntity_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLog_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLog_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Account_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Account_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Finance_Account_Finance_Group");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Account_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Group");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", "Category")
                        .WithMany("AccountCollections")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_Finance_AccountCollection_Finance_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Collection")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Collection");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCurrencies")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("DetailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("DetailAccount");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountOwner")
                        .WithMany("AccountHolders")
                        .HasForeignKey("AccountOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountOwner");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("AccountOwner")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountID")
                        .HasConstraintName("FK_Finance_AccountOwner_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountProjects")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany("AccountProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CostCenter_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Currency_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CurrencyRate_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany("Rates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("CustomerTaxInfo")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", "AccountID")
                        .HasConstraintName("FK_Finance_CustomerTaxInfo_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_DetailAccount_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Project_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Project_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Project_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Voucher_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherOrigin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_VoucherOrigin")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Core.DocumentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Finance_Voucher_Core_Status")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Origin");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_VoucherLine_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_Finance_VoucherLine_CashFlow_SourceApp");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Voucher", "Voucher")
                        .WithMany("Lines")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Voucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("Currency");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Metadata_City_Metadata_Province")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Dashboard", "Dashboard")
                        .WithMany("Tabs")
                        .HasForeignKey("DashboardId")
                        .HasConstraintName("FK_Reporting_DashboardTab_Reporting_Dashboard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dashboard");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.DashboardTab", "Tab")
                        .WithMany("Widgets")
                        .HasForeignKey("TabId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_DashboardTab")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany("Parameters")
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.FunctionParameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Parameter")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Type")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("Accounts")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("Project");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CashAccounts");

                    b.Navigation("PayReceiveVoucherLines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("RoleBranches");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("AccountCurrencies");

                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("AccountOwner");

                    b.Navigation("AccountProjects");

                    b.Navigation("Children");

                    b.Navigation("CustomerTaxInfo");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Navigation("AccountCollections");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Navigation("AccountHolders");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Navigation("RoleFiscalPeriods");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Navigation("AccountProjects");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Navigation("Tabs");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("RoleWidgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
