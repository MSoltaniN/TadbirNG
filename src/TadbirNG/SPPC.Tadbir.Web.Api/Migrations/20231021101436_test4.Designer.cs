// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPPC.Tadbir.Persistence;

namespace SPPC.Tadbir.Web.Api.Migrations
{
    [DbContext(typeof(TadbirContext))]
    [Migration("20231021101436_test4")]
    partial class test4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleBranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "BranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("RoleBranch", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleFiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "FiscalPeriodId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("RoleFiscalPeriod", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WidgetId");

                    b.ToTable("RoleWidget", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("IssuedById")
                        .HasColumnType("int");

                    b.Property<string>("IssuedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("PayReceive", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PayReceiveAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveCashAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankOrderNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBank")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.ToTable("PayReceiveCashAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveVoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("VoucherLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PayReceiveId", "VoucherLineId");

                    b.HasIndex("VoucherLineId")
                        .IsUnique();

                    b.ToTable("PayReceiveVoucherLine", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SourceAppID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("SourceApp", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserCashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashRegisterId");

                    b.ToTable("UserCashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<string>("EndNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadStartNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("SeriesNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StartNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.ToTable("CheckBook", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookPageID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckBookId")
                        .HasColumnType("int");

                    b.Property<int?>("CheckId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CheckBookId");

                    b.ToTable("CheckBookPage", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LabelSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomFormID")
                        .HasColumnType("int");

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SettingID")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomFormID");

                    b.HasIndex("SettingID");

                    b.ToTable("LabelSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int")
                        .HasColumnName("OperationID");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("SourceID");

                    b.Property<int>("SourceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SourceTypeID");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceTypeId");

                    b.HasIndex("SubsystemId");

                    b.ToTable("LogSetting", "Config");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 489, DateTimeKind.Local).AddTicks(7629),
                            OperationId = 1,
                            RowGuid = new Guid("44bdc302-cea2-4528-a3a6-f8b4ecc8d54b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 2,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(570),
                            OperationId = 2,
                            RowGuid = new Guid("7b72d8d6-007b-4b2e-a927-1441a11cfcd0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 3,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(582),
                            OperationId = 3,
                            RowGuid = new Guid("c9f7c5c9-0d93-4d4e-88f9-45dcbfbc7853"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 4,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(590),
                            OperationId = 4,
                            RowGuid = new Guid("c3deece6-c650-4cf3-b422-baad6b544fe3"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 5,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(597),
                            OperationId = 5,
                            RowGuid = new Guid("267c4226-d3a8-47c9-9263-98c773b7bbf7"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 6,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(618),
                            OperationId = 6,
                            RowGuid = new Guid("ee40cb08-d38a-44d1-a6f3-635fc16e5569"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 7,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(624),
                            OperationId = 21,
                            RowGuid = new Guid("a981d54c-af85-4464-a268-e1096de321f8"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 8,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(631),
                            OperationId = 54,
                            RowGuid = new Guid("525b4a0d-5709-40a9-932c-1d264598e26b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 9,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(645),
                            OperationId = 58,
                            RowGuid = new Guid("ee41a0c4-694c-4219-818b-7971cd195ba3"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 10,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(653),
                            OperationId = 1,
                            RowGuid = new Guid("7056057a-ef74-4d73-9df7-8f8d06775cd0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 11,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(660),
                            OperationId = 7,
                            RowGuid = new Guid("82e13981-004e-4a0e-8a58-b43e5acd0cea"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 12,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(666),
                            OperationId = 1,
                            RowGuid = new Guid("6145464a-0583-43fa-86a9-9dcea34e7c17"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 13,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(672),
                            OperationId = 2,
                            RowGuid = new Guid("dbf9cfde-05dc-4708-877b-42df3d2a4408"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 14,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(679),
                            OperationId = 3,
                            RowGuid = new Guid("7fb84ee7-4cc0-4e71-87a5-3621b964209f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 15,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(687),
                            OperationId = 4,
                            RowGuid = new Guid("d9246a65-c061-493e-a205-cf91dbbf7766"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 16,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(693),
                            OperationId = 5,
                            RowGuid = new Guid("b2243357-4c11-427e-ba38-a864c7dc7409"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 17,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(702),
                            OperationId = 6,
                            RowGuid = new Guid("69b89c3d-5fae-4448-98d2-b84160996b51"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 18,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(710),
                            OperationId = 21,
                            RowGuid = new Guid("eab06b75-533f-4cb9-9cf8-b8a88df8d6cb"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 19,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(716),
                            OperationId = 54,
                            RowGuid = new Guid("045ed453-8f92-428b-b6dd-833353b928d0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 20,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(819),
                            OperationId = 58,
                            RowGuid = new Guid("3b9b9847-b913-441e-9939-b85d6f4739b9"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 21,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(827),
                            OperationId = 1,
                            RowGuid = new Guid("46a22bd6-5bec-443c-a59f-d6ad2668683b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 22,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(833),
                            OperationId = 2,
                            RowGuid = new Guid("1ccfb073-3ff0-4827-9a6a-0d14b33542e6"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 23,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(839),
                            OperationId = 3,
                            RowGuid = new Guid("457e66da-a88f-4e83-968a-64dc4acf2ba5"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 24,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(845),
                            OperationId = 4,
                            RowGuid = new Guid("7e039844-d95c-42da-8a8f-536280b85157"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 25,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(855),
                            OperationId = 5,
                            RowGuid = new Guid("666a5c67-2133-4d19-a0a1-a60bebd59672"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 26,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(862),
                            OperationId = 6,
                            RowGuid = new Guid("6c02ac19-5057-4c52-be4e-4c073fd707bf"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 27,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(868),
                            OperationId = 21,
                            RowGuid = new Guid("4c1693b3-ffdd-4276-9fa3-85ce549872c3"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 28,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(875),
                            OperationId = 35,
                            RowGuid = new Guid("38fd10dc-ebd9-41ee-b4d6-5afbb63269eb"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 29,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(881),
                            OperationId = 54,
                            RowGuid = new Guid("d4cd37f7-a0eb-4199-9f6c-6bd6b2ef514b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 30,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(888),
                            OperationId = 58,
                            RowGuid = new Guid("63000d38-ff0b-4d5f-8f3d-b92a1a220e19"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 31,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(894),
                            OperationId = 1,
                            RowGuid = new Guid("9dd49262-b62d-4841-8886-e26be306b9ae"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 32,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(902),
                            OperationId = 2,
                            RowGuid = new Guid("443343e2-03af-4eef-9c4e-543b3c51d611"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 33,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(915),
                            OperationId = 3,
                            RowGuid = new Guid("7558d109-ee5b-4fb0-ac00-3f9cc8a467a6"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 34,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(926),
                            OperationId = 4,
                            RowGuid = new Guid("b22311dd-2864-4000-91ee-92adb7c285a8"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 35,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(931),
                            OperationId = 5,
                            RowGuid = new Guid("13e51091-024b-4500-a79b-dd972c276a1c"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 36,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(938),
                            OperationId = 6,
                            RowGuid = new Guid("b51f4b5b-5b3a-482e-a4e7-31b9c5502490"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 37,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(945),
                            OperationId = 21,
                            RowGuid = new Guid("f6016e05-73a4-4376-a8d2-dba91633ea75"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 38,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(951),
                            OperationId = 54,
                            RowGuid = new Guid("21ef3e99-8dc3-4a25-8745-bfe627ebd2fe"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 39,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(957),
                            OperationId = 58,
                            RowGuid = new Guid("0afa1ee9-2d86-4dd0-a20c-c4050c85dad9"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 40,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(963),
                            OperationId = 1,
                            RowGuid = new Guid("ee0401f2-f423-4055-8c47-01dfdeb6ffb8"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 41,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(973),
                            OperationId = 2,
                            RowGuid = new Guid("4ab59888-a0ae-40db-b3b3-95e455355f11"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 42,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(979),
                            OperationId = 3,
                            RowGuid = new Guid("9fcb8718-96e3-4fbe-8d65-6f806a8761fa"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 43,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(985),
                            OperationId = 4,
                            RowGuid = new Guid("92717df5-00e1-4551-81e1-175665aeb4e9"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 44,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(990),
                            OperationId = 5,
                            RowGuid = new Guid("a14a6833-c856-4aa2-aa10-b127e239237a"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 45,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(997),
                            OperationId = 6,
                            RowGuid = new Guid("4314eca8-7a61-44cb-b34e-f7ae30d8e717"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 46,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1095),
                            OperationId = 21,
                            RowGuid = new Guid("5fc76d74-8ac4-4753-87c8-445ae7d18da2"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 47,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1106),
                            OperationId = 40,
                            RowGuid = new Guid("f62010cc-befc-40aa-adf2-b38725cdf3ee"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 48,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1112),
                            OperationId = 41,
                            RowGuid = new Guid("13e0a73a-7b9b-45f1-b636-26cb7cc03f58"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 49,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1121),
                            OperationId = 42,
                            RowGuid = new Guid("8cde52c5-8831-4185-b436-685f1eaadc98"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 50,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1127),
                            OperationId = 43,
                            RowGuid = new Guid("254b981c-afbc-4920-99d6-fd1856b5a04e"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 51,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1133),
                            OperationId = 44,
                            RowGuid = new Guid("66b6f603-2bfe-4e9f-9a7f-158564fdd174"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 52,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1139),
                            OperationId = 45,
                            RowGuid = new Guid("de43b556-1cf4-449a-a620-c61d03f2d605"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 53,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1192),
                            OperationId = 54,
                            RowGuid = new Guid("4430754e-f596-4cea-88e8-216591afbe83"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 54,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1199),
                            OperationId = 55,
                            RowGuid = new Guid("4c8ddc4e-f7bd-41bb-a0a4-e879ed10a662"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 55,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1205),
                            OperationId = 56,
                            RowGuid = new Guid("fc1eb2a0-9249-4014-8ec8-f36dea10d4ca"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 56,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1211),
                            OperationId = 58,
                            RowGuid = new Guid("99da0d77-82bd-4921-afee-fc3132c9e2bc"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 57,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1220),
                            OperationId = 1,
                            RowGuid = new Guid("a4d8dc8a-04f0-4ba8-b367-9c3ed2ebabc9"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 58,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1228),
                            OperationId = 2,
                            RowGuid = new Guid("b1890507-97cb-42ef-ad5b-3e7d59dc034c"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 59,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1234),
                            OperationId = 3,
                            RowGuid = new Guid("9f758d79-6bc0-41b7-a88b-5dc603018a93"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 60,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1240),
                            OperationId = 4,
                            RowGuid = new Guid("b070a7a3-9f4d-451c-be3d-23c81407ff37"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 61,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1246),
                            OperationId = 5,
                            RowGuid = new Guid("0ae9e8ff-3742-4aa1-98f3-fd37fc5c49ba"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 62,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1253),
                            OperationId = 6,
                            RowGuid = new Guid("9f65c186-95e4-4597-84fb-d74f61d5d179"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 63,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1259),
                            OperationId = 21,
                            RowGuid = new Guid("86920905-af98-4e6a-83c5-44e916d1263c"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 64,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1265),
                            OperationId = 54,
                            RowGuid = new Guid("83318f0b-8095-454f-a217-3d80f8f6f956"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 65,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1273),
                            OperationId = 58,
                            RowGuid = new Guid("bbe825d5-5a94-481f-a300-c7eb1c9e56c6"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 66,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1281),
                            OperationId = 1,
                            RowGuid = new Guid("fc6c6433-432a-4997-971f-9787284b3d3a"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 67,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1290),
                            OperationId = 2,
                            RowGuid = new Guid("39cefe00-ff41-4000-8db8-d28e09b17a93"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 68,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1296),
                            OperationId = 3,
                            RowGuid = new Guid("45f74081-8a19-4921-ab21-8cdd20f74419"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 69,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1302),
                            OperationId = 4,
                            RowGuid = new Guid("f51a9a63-4c58-44a8-b83f-10ea3b6a54e0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 70,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1308),
                            OperationId = 5,
                            RowGuid = new Guid("538784fe-51b9-4347-b9f9-e0cd47d16aa1"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 71,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1315),
                            OperationId = 6,
                            RowGuid = new Guid("aca88126-735d-4763-89e6-1ace3d84175f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 72,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1322),
                            OperationId = 21,
                            RowGuid = new Guid("b4292de0-29b2-471e-bda1-48ddb51addae"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 73,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1331),
                            OperationId = 35,
                            RowGuid = new Guid("15b94d1e-ace6-4e5a-8407-77b135281efd"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 74,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1337),
                            OperationId = 54,
                            RowGuid = new Guid("c18d930d-8565-4784-b519-6fa166d7e8b7"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 75,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1345),
                            OperationId = 58,
                            RowGuid = new Guid("5066e2a3-efc5-4779-8e35-cb47ecdd48b6"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 76,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1351),
                            OperationId = 1,
                            RowGuid = new Guid("e72b2c42-4a34-4fd1-8542-b27731684f97"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 77,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1357),
                            OperationId = 4,
                            RowGuid = new Guid("20498cd9-e807-4743-a316-4bf42ab38f59"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 78,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1364),
                            OperationId = 5,
                            RowGuid = new Guid("15c0012b-dbdd-4081-8514-92661de21f5e"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 79,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1371),
                            OperationId = 6,
                            RowGuid = new Guid("6ee154c5-5d9e-407a-a28b-1b207c0ab409"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 80,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1377),
                            OperationId = 8,
                            RowGuid = new Guid("14360e23-e837-44cd-9857-d782cc9d2729"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 81,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1385),
                            OperationId = 30,
                            RowGuid = new Guid("b521135f-2a06-4979-ab03-fd1f311c7d25"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 82,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1391),
                            OperationId = 54,
                            RowGuid = new Guid("d42d62d1-9f1c-4c60-88f0-4d315826e884"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 83,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1439),
                            OperationId = 58,
                            RowGuid = new Guid("3a972020-e868-481b-af7f-ff513d88c6af"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 84,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1446),
                            OperationId = 1,
                            RowGuid = new Guid("a124b05b-88d6-4da1-92a9-f9d9cc7a0578"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 85,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1452),
                            OperationId = 2,
                            RowGuid = new Guid("2516083a-ee43-42e9-ba3c-89740674ce4d"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 86,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1459),
                            OperationId = 3,
                            RowGuid = new Guid("362c9beb-f22d-4649-b5d2-3407b5187454"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 87,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1469),
                            OperationId = 4,
                            RowGuid = new Guid("6ae8101e-e9c5-40b8-8aaa-1feadc814530"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 88,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1475),
                            OperationId = 5,
                            RowGuid = new Guid("3c484882-3e2c-451d-a62c-0a903fc0c298"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 89,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1486),
                            OperationId = 6,
                            RowGuid = new Guid("e32729a4-4896-4220-b0f3-57ce60ff9b4a"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 90,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1493),
                            OperationId = 21,
                            RowGuid = new Guid("edeb1c66-eb5a-4c80-b87d-ebb23e935249"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 91,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1500),
                            OperationId = 54,
                            RowGuid = new Guid("d5f9f4b2-074a-4e96-94ec-f9bfb7116dc2"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 92,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1506),
                            OperationId = 58,
                            RowGuid = new Guid("1d9790e7-eb01-46b7-bc41-37a87743da18"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 93,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1512),
                            OperationId = 1,
                            RowGuid = new Guid("eb52edaf-9cf7-4f2f-afeb-04fbed12a989"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 94,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1518),
                            OperationId = 7,
                            RowGuid = new Guid("771a3286-dd08-49fe-8ceb-d923a59bf65d"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 95,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1524),
                            OperationId = 31,
                            RowGuid = new Guid("2cfc3461-76f2-423e-b332-49eab7715623"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 96,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1531),
                            OperationId = 1,
                            RowGuid = new Guid("9cf7950e-0707-4149-ba98-d0ad07d90286"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 97,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1539),
                            OperationId = 2,
                            RowGuid = new Guid("8db7338f-b451-45d8-a7dc-c48a401f1a90"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 98,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1545),
                            OperationId = 3,
                            RowGuid = new Guid("f8317699-dd58-48bd-a5db-b04126a0100d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 99,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1551),
                            OperationId = 4,
                            RowGuid = new Guid("140caf8e-00a8-4734-a2d4-6c66ceb00cbc"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1557),
                            OperationId = 6,
                            RowGuid = new Guid("41dd6e67-a9ee-44c9-a4c2-0acd89cbeec1"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 101,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1564),
                            OperationId = 11,
                            RowGuid = new Guid("77cb2593-7560-4d58-a254-e12a0cc0371d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 102,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1571),
                            OperationId = 12,
                            RowGuid = new Guid("ce5a7fde-1444-40bd-bc63-7864988e6125"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 103,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1579),
                            OperationId = 13,
                            RowGuid = new Guid("d539563c-a9c3-4228-b9fa-2b5e4abf98e4"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 104,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1585),
                            OperationId = 14,
                            RowGuid = new Guid("5c6f1846-1ddc-4290-ab0c-8409b7789a88"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 105,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1595),
                            OperationId = 15,
                            RowGuid = new Guid("50a207af-ea08-4914-9cb1-2f60708c4b5f"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 106,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1602),
                            OperationId = 16,
                            RowGuid = new Guid("e4dd4c10-52bb-4ac5-a604-b281cd788472"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 107,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1608),
                            OperationId = 17,
                            RowGuid = new Guid("feb520c9-e922-496a-8ece-9ec3c1f83964"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 108,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1614),
                            OperationId = 18,
                            RowGuid = new Guid("2b45d6a8-ee9b-4482-bc42-17d030c5ef73"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 109,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1620),
                            OperationId = 21,
                            RowGuid = new Guid("c9ca9bab-bffe-417e-92bf-cf9aa28cdae5"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 110,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1626),
                            OperationId = 36,
                            RowGuid = new Guid("b5bc7d75-cbd2-4d24-baff-77f5285f943b"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 111,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1633),
                            OperationId = 37,
                            RowGuid = new Guid("4c681b00-ea69-436d-b973-a7b5ccca92b4"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 112,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1639),
                            OperationId = 38,
                            RowGuid = new Guid("5643d1a8-542b-4322-9415-176570a8b1da"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 113,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1648),
                            OperationId = 39,
                            RowGuid = new Guid("595397c7-ea14-4ab0-9dd0-7ee1e5d8f550"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 114,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1654),
                            OperationId = 46,
                            RowGuid = new Guid("d1bbec83-ce61-45e4-ab83-f9a79c39b912"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 115,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1660),
                            OperationId = 47,
                            RowGuid = new Guid("4b0d062b-6feb-4bb0-b08e-9bfe297afcb4"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 116,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1666),
                            OperationId = 48,
                            RowGuid = new Guid("9c07fae3-aea0-4c3f-b4ce-0a042cf515f0"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 117,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1672),
                            OperationId = 49,
                            RowGuid = new Guid("cb8b5010-ceda-4b48-96a7-20348305a990"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 118,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1678),
                            OperationId = 50,
                            RowGuid = new Guid("f9f6c058-99d3-436c-b8bc-ef61801be118"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 119,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1726),
                            OperationId = 51,
                            RowGuid = new Guid("fb67de5b-4ea1-4ce5-9bad-b667729ee756"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 120,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1733),
                            OperationId = 58,
                            RowGuid = new Guid("3d088288-bf79-43e4-84fa-58ef71a97042"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 121,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1742),
                            OperationId = 1,
                            RowGuid = new Guid("511d32d6-3758-4ddb-bec7-788eed1e2ffa"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 122,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1748),
                            OperationId = 2,
                            RowGuid = new Guid("034f1649-fcab-4a57-9c22-8d0210e36ae7"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 123,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1756),
                            OperationId = 3,
                            RowGuid = new Guid("854402c4-7b76-467b-a2f4-4c0b316835a5"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 124,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1762),
                            OperationId = 4,
                            RowGuid = new Guid("baf84348-c56b-4be9-86b2-3ac5df33c4b0"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 125,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1769),
                            OperationId = 6,
                            RowGuid = new Guid("bea6ceb5-387b-402f-a4d8-57c64e173f91"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 126,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1775),
                            OperationId = 11,
                            RowGuid = new Guid("e0767424-a80b-4137-848e-526f9aa12475"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 127,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1783),
                            OperationId = 12,
                            RowGuid = new Guid("9da2104f-40c0-4de1-9b5b-0e8b6a20a321"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 128,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1789),
                            OperationId = 21,
                            RowGuid = new Guid("e54c428d-4418-49b3-985b-3e3a8b0ae1e6"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 129,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1797),
                            OperationId = 36,
                            RowGuid = new Guid("58651bca-62d3-4856-83ff-7a6bb75af513"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 130,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1806),
                            OperationId = 37,
                            RowGuid = new Guid("0699b51c-30ed-4dd9-a917-5ca9174d077a"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 131,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1812),
                            OperationId = 38,
                            RowGuid = new Guid("c94a8d41-9118-45c2-bb42-9f81bea08150"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 132,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1818),
                            OperationId = 39,
                            RowGuid = new Guid("efc54e86-1fca-40b7-b606-2c53c89ea157"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 133,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1825),
                            OperationId = 46,
                            RowGuid = new Guid("795d455b-9a7f-4241-b8a7-3495dc9307f6"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 134,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1831),
                            OperationId = 47,
                            RowGuid = new Guid("b15ad149-10d3-4577-b702-c3a26d4245ce"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 135,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1838),
                            OperationId = 52,
                            RowGuid = new Guid("999d9486-0c03-4f3c-b632-1494892ed40a"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 136,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1845),
                            OperationId = 53,
                            RowGuid = new Guid("1b60e6ae-0637-4af1-a54c-cc4616484e20"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 137,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1854),
                            OperationId = 58,
                            RowGuid = new Guid("4be88b09-ba5f-4cf4-ade7-762ffc4ba556"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 138,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1860),
                            OperationId = 2,
                            RowGuid = new Guid("7ede52be-4365-45d1-a57f-dbf319a0558f"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 139,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1867),
                            OperationId = 3,
                            RowGuid = new Guid("d212fccc-769a-4403-bf63-5c372fcef9d4"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 140,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1873),
                            OperationId = 4,
                            RowGuid = new Guid("743988e2-dec8-4c2c-ad56-a2c6dfef8421"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 141,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1879),
                            OperationId = 6,
                            RowGuid = new Guid("b43fbb2b-d441-4329-8b79-eda404802544"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 142,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1885),
                            OperationId = 54,
                            RowGuid = new Guid("74ebb7c9-7938-4949-b587-47a8ce4cc19f"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 143,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1891),
                            OperationId = 1,
                            RowGuid = new Guid("9062e0c7-a579-4124-a26a-cad5f35acc9b"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 144,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1898),
                            OperationId = 2,
                            RowGuid = new Guid("ffe19553-14b8-46ff-8b5a-b58ad25d93ff"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 145,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1950),
                            OperationId = 3,
                            RowGuid = new Guid("4cb4106f-8085-417f-ad01-b885c5101dda"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 146,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1957),
                            OperationId = 4,
                            RowGuid = new Guid("a7a9df70-6029-4f56-a174-f6c4149c33ec"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 147,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1963),
                            OperationId = 5,
                            RowGuid = new Guid("ebd5ed09-b1da-4893-84d9-b9ea4e9609bc"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 148,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1970),
                            OperationId = 6,
                            RowGuid = new Guid("e07e01b3-1221-419a-9a0f-07fef9195b57"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 149,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1975),
                            OperationId = 54,
                            RowGuid = new Guid("f7bfab5a-2ede-4531-ad19-115c27bafabf"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 150,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1982),
                            OperationId = 58,
                            RowGuid = new Guid("5897c7d8-cce0-4b6c-84cc-4ce2b0ffe8a8"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 151,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1990),
                            OperationId = 1,
                            RowGuid = new Guid("c01babf2-5fc9-4b06-8dcc-b9f259adf781"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 152,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(1997),
                            OperationId = 5,
                            RowGuid = new Guid("ce6ce019-7d7f-4001-826e-89923f965924"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 153,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2005),
                            OperationId = 6,
                            RowGuid = new Guid("3d856601-6961-4a05-9277-140a513f2332"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 154,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2012),
                            OperationId = 54,
                            RowGuid = new Guid("d9c9857f-5576-4220-b473-82b5ca2c47cf"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 155,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2020),
                            OperationId = 58,
                            RowGuid = new Guid("9f75cfa4-70c2-44ac-8f34-053c2cbae21d"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 156,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2026),
                            OperationId = 1,
                            RowGuid = new Guid("f55904cd-3617-4331-8e50-55c8c638004d"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 157,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2032),
                            OperationId = 5,
                            RowGuid = new Guid("eb20c63c-bd26-41f2-a451-4ffbd567319b"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 158,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2038),
                            OperationId = 6,
                            RowGuid = new Guid("26029df9-48fb-4775-ab55-2fa800e8b22f"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 159,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2045),
                            OperationId = 54,
                            RowGuid = new Guid("e11e2b5f-e205-41f7-8177-a6ef835088ca"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 160,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2051),
                            OperationId = 58,
                            RowGuid = new Guid("eba0a093-dc15-4782-afeb-81a513e13561"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 161,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2061),
                            OperationId = 1,
                            RowGuid = new Guid("f3a092c3-1aec-40b7-9c65-f8ca0057cac0"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 162,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2067),
                            OperationId = 5,
                            RowGuid = new Guid("d2318e81-9c01-4309-b7f1-46c34ae92afe"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 163,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2073),
                            OperationId = 6,
                            RowGuid = new Guid("0c23b7d4-d545-46d0-81f9-855d3c2f32f6"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 164,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2080),
                            OperationId = 54,
                            RowGuid = new Guid("7dbd0409-b262-4a29-8c5e-020e5b632072"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 165,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2086),
                            OperationId = 58,
                            RowGuid = new Guid("9f47eb1e-088e-4878-ba15-d61ceabe5f59"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 166,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2093),
                            OperationId = 1,
                            RowGuid = new Guid("11890a31-66c8-4f89-b1b4-2a800148ccba"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 167,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2099),
                            OperationId = 5,
                            RowGuid = new Guid("a7af0e63-7cc4-4ebd-8b06-422c6f5a34ff"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 168,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2105),
                            OperationId = 6,
                            RowGuid = new Guid("c89748d4-ab6b-4586-9d45-18cc79423585"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 169,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2114),
                            OperationId = 54,
                            RowGuid = new Guid("bb0ec759-2e66-4c94-87d1-e99eb8286e9b"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 170,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2121),
                            OperationId = 58,
                            RowGuid = new Guid("e97264b1-e9a7-4d96-a7e2-adb999c2ec66"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 171,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2127),
                            OperationId = 1,
                            RowGuid = new Guid("3dc3fd7e-9063-4d2a-bef6-549277469b4d"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 172,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2133),
                            OperationId = 5,
                            RowGuid = new Guid("c27df9ae-d5e3-4a36-8910-502125f63f2a"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 173,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2140),
                            OperationId = 6,
                            RowGuid = new Guid("78995fb8-c478-4afd-96a9-fea058a7107f"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 174,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2146),
                            OperationId = 54,
                            RowGuid = new Guid("8bd99714-85ab-4742-ac6b-5dc4661851a5"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 175,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2152),
                            OperationId = 58,
                            RowGuid = new Guid("2bad84a2-f19c-4dd6-8a1d-9a1c94c42500"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 176,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2159),
                            OperationId = 1,
                            RowGuid = new Guid("f87187db-0f87-4a03-992b-46df927590f6"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 177,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2167),
                            OperationId = 5,
                            RowGuid = new Guid("e2a76a93-0600-4096-8374-6ec14b160c60"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 178,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2174),
                            OperationId = 6,
                            RowGuid = new Guid("2f0cdcf7-7ea7-4aaa-96ad-856a4e3df17d"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 179,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2180),
                            OperationId = 54,
                            RowGuid = new Guid("1563099d-73a9-431b-9662-30cf0c722f01"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 180,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2227),
                            OperationId = 58,
                            RowGuid = new Guid("3dd24033-e566-474d-be2c-75fac23ce9c4"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 181,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2234),
                            OperationId = 32,
                            RowGuid = new Guid("72d32aae-8d64-4d74-adc7-cc040e08b855"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 182,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2240),
                            OperationId = 33,
                            RowGuid = new Guid("ca9037ef-0d65-4614-8da2-c17390f5af7a"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 183,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2245),
                            OperationId = 34,
                            RowGuid = new Guid("a63da05e-e31b-4d1c-a6a3-86207967945e"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 184,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2252),
                            OperationId = 1,
                            RowGuid = new Guid("8de40f33-fa01-460a-a2a5-3f211b327abe"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 185,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2261),
                            OperationId = 5,
                            RowGuid = new Guid("da8d2830-cd96-43ae-8d6f-0ee9c92a760e"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 186,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2267),
                            OperationId = 6,
                            RowGuid = new Guid("961fa592-c45d-41cb-a021-9ed112f410e9"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 187,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2274),
                            OperationId = 54,
                            RowGuid = new Guid("7e8525c7-0fa7-4d0e-b01f-50faddaeb6c4"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 188,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2280),
                            OperationId = 58,
                            RowGuid = new Guid("fce12ea5-1c63-42f8-8998-63a3b76ac3ba"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 189,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2286),
                            OperationId = 1,
                            RowGuid = new Guid("675277b4-e23c-41f2-8fa5-12dcb18081c3"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 190,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2292),
                            OperationId = 7,
                            RowGuid = new Guid("0098b62a-3281-47a3-b976-a8f7aee624b8"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 191,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2299),
                            OperationId = 1,
                            RowGuid = new Guid("4eb326b0-6528-4007-bb55-a42ef814e295"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 192,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2304),
                            OperationId = 5,
                            RowGuid = new Guid("98d27045-0d94-4c66-bac3-7d13eb8728bf"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 193,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2313),
                            OperationId = 6,
                            RowGuid = new Guid("5b99ce45-5000-4ee2-b257-b23eec69c5fe"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 194,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2319),
                            OperationId = 54,
                            RowGuid = new Guid("2f558533-b11b-4a34-b446-859edce0d722"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 195,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2327),
                            OperationId = 58,
                            RowGuid = new Guid("ef2e3c19-e87e-44c9-bcad-782e7d57b495"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 196,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2333),
                            OperationId = 1,
                            RowGuid = new Guid("8f01c65f-b85a-49d3-9e47-418e1d2983c3"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 197,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2338),
                            OperationId = 5,
                            RowGuid = new Guid("e98faa1e-a816-456c-80f5-936c8dff96c6"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 198,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2345),
                            OperationId = 6,
                            RowGuid = new Guid("ad8dec53-e126-4c21-ad1d-9790952a7988"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 199,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2352),
                            OperationId = 54,
                            RowGuid = new Guid("55cc55f1-66df-4e1c-bec9-c50f3ade05a7"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 200,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2358),
                            OperationId = 58,
                            RowGuid = new Guid("45b43347-8ca8-43bf-a21d-56d031d75c00"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 201,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2366),
                            OperationId = 1,
                            RowGuid = new Guid("c47cdb9f-18d4-4d3d-a4e5-d769db96e934"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 202,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2372),
                            OperationId = 2,
                            RowGuid = new Guid("d4ac39a9-1bb6-4921-a071-a1475ad20fbb"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 203,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2378),
                            OperationId = 3,
                            RowGuid = new Guid("0f1a1677-5646-4b29-94a7-a58b7de904c8"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 204,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2384),
                            OperationId = 4,
                            RowGuid = new Guid("1a95b676-48fc-4e45-a181-e4450d0eedfe"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 205,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2390),
                            OperationId = 5,
                            RowGuid = new Guid("1ed8d5f3-0785-4905-83ea-8b35d904d29c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 206,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2396),
                            OperationId = 6,
                            RowGuid = new Guid("054acb5f-f65d-4327-a697-87cd51e10bcc"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 207,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2402),
                            OperationId = 58,
                            RowGuid = new Guid("e375ccdd-7b2d-4093-907b-b7f773e503d7"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 208,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2408),
                            OperationId = 60,
                            RowGuid = new Guid("228af998-1c64-4971-a765-d41bbdcfd28d"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 209,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2418),
                            OperationId = 61,
                            RowGuid = new Guid("689f921a-aafb-44f1-9637-94b108378583"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 210,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2423),
                            OperationId = 62,
                            RowGuid = new Guid("19ab3922-0240-4206-8913-eedb95ee382e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 211,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2430),
                            OperationId = 63,
                            RowGuid = new Guid("d42a30c4-e165-4c73-8fce-64c1ce2b66f5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 212,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2436),
                            OperationId = 64,
                            RowGuid = new Guid("d14a5e26-b44a-4bb3-a655-7b15bf52f5fb"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 213,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2441),
                            OperationId = 65,
                            RowGuid = new Guid("12b83935-1418-4255-94b0-f786ce63f79e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 214,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2447),
                            OperationId = 1,
                            RowGuid = new Guid("c9e76165-7454-47a1-99b6-8989f0f86f5b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 215,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2495),
                            OperationId = 2,
                            RowGuid = new Guid("c50572de-6df0-4b88-ab71-b19302e33a5c"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 216,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2502),
                            OperationId = 3,
                            RowGuid = new Guid("31df8095-e20a-4c97-9983-ea819e0d8c66"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 217,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2511),
                            OperationId = 4,
                            RowGuid = new Guid("e3e38ba1-7d39-4ebe-b421-55ebe09cb8da"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 218,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2517),
                            OperationId = 5,
                            RowGuid = new Guid("fa6272a0-5399-40cf-adc1-397956435512"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 219,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2524),
                            OperationId = 6,
                            RowGuid = new Guid("8f5c6699-eef6-47cd-bd11-89b27d894335"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 220,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2530),
                            OperationId = 21,
                            RowGuid = new Guid("eb1fd22b-98f4-4e55-a69d-1abea18f5064"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 221,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2536),
                            OperationId = 54,
                            RowGuid = new Guid("4a9c21ad-bb6c-407d-8cae-9b55f4afe192"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 222,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2542),
                            OperationId = 58,
                            RowGuid = new Guid("2d606da5-a168-4109-8461-c44d7e1c6e32"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 223,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2548),
                            OperationId = 66,
                            RowGuid = new Guid("4c2697e7-ba84-4029-84d1-6d686bcd3f99"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 224,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2554),
                            OperationId = 1,
                            RowGuid = new Guid("6c3d0566-6eb7-4fa5-ace0-11c95bc809a8"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 225,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2563),
                            OperationId = 5,
                            RowGuid = new Guid("7403224e-aaea-4d73-863b-632c105a0dac"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 226,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2568),
                            OperationId = 6,
                            RowGuid = new Guid("ae5399b5-b01d-49c0-b7de-282f6ec1c595"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 227,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2575),
                            OperationId = 8,
                            RowGuid = new Guid("0e8a1e8b-d222-4db6-a25f-37345696452b"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 228,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2581),
                            OperationId = 54,
                            RowGuid = new Guid("5b8cd2de-6fc2-46a3-9c58-89952a81336d"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 229,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2587),
                            OperationId = 58,
                            RowGuid = new Guid("f471f8f5-0786-4e44-a305-b944134b815e"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 230,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2594),
                            OperationId = 67,
                            RowGuid = new Guid("dab771c5-4ec5-4234-bcba-402ad265f80e"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 231,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2599),
                            OperationId = 1,
                            RowGuid = new Guid("bc57fa56-5103-41c0-852b-59d12c048794"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 232,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2605),
                            OperationId = 2,
                            RowGuid = new Guid("15e852ff-fd91-4e68-9749-900468fae65a"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 233,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2614),
                            OperationId = 3,
                            RowGuid = new Guid("dcb95a62-377f-4570-95de-bb0461d8ebd6"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 234,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2620),
                            OperationId = 4,
                            RowGuid = new Guid("453b79c5-8a1c-423e-8192-d405bfbe44d5"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 235,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2626),
                            OperationId = 5,
                            RowGuid = new Guid("5910c17b-8294-4197-a0cb-78a002f21e27"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 236,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2632),
                            OperationId = 6,
                            RowGuid = new Guid("cdac6b4c-e275-492f-892b-749179fb879b"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 237,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2638),
                            OperationId = 21,
                            RowGuid = new Guid("7adfdbe5-8dda-4f34-8e65-c17d2ee08959"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 238,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2644),
                            OperationId = 54,
                            RowGuid = new Guid("143b61c4-559b-4f2c-8e51-4ccdda18844b"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 239,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2650),
                            OperationId = 58,
                            RowGuid = new Guid("f47fa919-a4c5-4c05-8b8b-b1db6d859901"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 240,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2656),
                            OperationId = 1,
                            RowGuid = new Guid("3032207a-03c6-41e9-adf5-dc0dbe0639bb"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 241,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2666),
                            OperationId = 2,
                            RowGuid = new Guid("ef4668a8-0c3f-4676-bef0-7b507195b4c7"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 242,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2672),
                            OperationId = 3,
                            RowGuid = new Guid("58f6f090-9ed8-4c31-a181-1a4ba263ada6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 243,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2677),
                            OperationId = 4,
                            RowGuid = new Guid("521fc986-bf24-489f-954a-ef3326f45565"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 244,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2683),
                            OperationId = 6,
                            RowGuid = new Guid("bf4816e4-d5dc-4270-adf9-df1ce437f3dc"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 245,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2689),
                            OperationId = 13,
                            RowGuid = new Guid("cfaf8fad-5c6f-4d5a-8ccc-1acb3983b4e9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 246,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2695),
                            OperationId = 14,
                            RowGuid = new Guid("c96abfc4-b9e7-4839-bebe-7244f07095ef"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 247,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2701),
                            OperationId = 15,
                            RowGuid = new Guid("43c1770b-7071-42e6-a7e2-983b1edf0cec"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 248,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2707),
                            OperationId = 16,
                            RowGuid = new Guid("7e22e84d-f233-4f2d-8753-354110fc26a9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 249,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2716),
                            OperationId = 58,
                            RowGuid = new Guid("2a6675c2-0e66-4be9-9a44-5b5a07ab2320"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 250,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2722),
                            OperationId = 68,
                            RowGuid = new Guid("dd7d5371-1863-4d15-8727-de243143777e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 251,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2772),
                            OperationId = 1,
                            RowGuid = new Guid("43e44f6e-0ded-4c78-86c0-c8a37ac9b612"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 252,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2780),
                            OperationId = 2,
                            RowGuid = new Guid("c4fcd373-1fdc-4632-9a01-98c23e7311e6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 253,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2786),
                            OperationId = 3,
                            RowGuid = new Guid("e6030cb9-d769-46f3-b05c-8c8e0ec66ad0"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 254,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2792),
                            OperationId = 4,
                            RowGuid = new Guid("0d7bde12-3f26-4538-aaeb-dc88a9084b16"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 255,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2797),
                            OperationId = 6,
                            RowGuid = new Guid("52ec4ca8-b4c9-4578-a7a5-2dbb8a31567c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 256,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2803),
                            OperationId = 13,
                            RowGuid = new Guid("ad95d83f-e2f2-40ae-9caf-bc6d1b2d7052"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 257,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2812),
                            OperationId = 14,
                            RowGuid = new Guid("c2ebdde7-1405-424b-8676-01cc2f0a95f9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 258,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2822),
                            OperationId = 15,
                            RowGuid = new Guid("61804909-c166-44c0-bf27-e4ce38d322c6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 259,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2828),
                            OperationId = 16,
                            RowGuid = new Guid("616801f0-9de0-459e-9766-d618e5a5b1f7"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 260,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2834),
                            OperationId = 58,
                            RowGuid = new Guid("8a43690d-2e95-4f0f-8dcc-e5cd82764488"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 261,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2840),
                            OperationId = 68,
                            RowGuid = new Guid("353ce7ce-dd57-49ba-afe3-92fcf1681935"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 262,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2847),
                            OperationId = 69,
                            RowGuid = new Guid("4f56c68f-333d-43d0-8fff-1db326afd781"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 263,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2853),
                            OperationId = 70,
                            RowGuid = new Guid("8d747dd1-5d96-48b7-99f6-f8fbe0e9feb3"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 264,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2859),
                            OperationId = 71,
                            RowGuid = new Guid("575e0819-ddc6-41b5-98d7-50e1c172bbc9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 265,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2868),
                            OperationId = 72,
                            RowGuid = new Guid("643db55f-cc7d-4431-a6d3-9efe870b379d"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 266,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2874),
                            OperationId = 73,
                            RowGuid = new Guid("9ae5aad0-8bc4-4c9b-b3e7-a13560018fdf"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 267,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2880),
                            OperationId = 74,
                            RowGuid = new Guid("05cb3a24-5a8b-4dcb-a7ec-239cd459bc0e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 268,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2952),
                            OperationId = 69,
                            RowGuid = new Guid("a9c26269-e2fb-45ed-86b8-5a29acafdb4a"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 269,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2959),
                            OperationId = 70,
                            RowGuid = new Guid("6962ffa7-d1b4-49ac-bbd2-67138556d3c5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 270,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2966),
                            OperationId = 71,
                            RowGuid = new Guid("5620e656-3514-46cb-bee4-32564b571fb5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 271,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2971),
                            OperationId = 72,
                            RowGuid = new Guid("7e8bd121-5d84-4d02-b102-3e74bc0aa05e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 272,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2978),
                            OperationId = 73,
                            RowGuid = new Guid("8a5653d7-d2e0-4ae3-bb5f-2548e65cac09"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 273,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2988),
                            OperationId = 74,
                            RowGuid = new Guid("3c480dd3-1157-44ed-9d94-917adf66e5c9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 274,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(2994),
                            OperationId = 75,
                            RowGuid = new Guid("ec6068e8-c45a-479a-a47d-5c7f6af5a8ef"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 275,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3000),
                            OperationId = 76,
                            RowGuid = new Guid("9c6c8955-fcee-4cda-b3e8-cb6b9b843ca1"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 276,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3006),
                            OperationId = 77,
                            RowGuid = new Guid("96d13a92-3e2d-487d-acbd-bc393d1dbd82"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 277,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3012),
                            OperationId = 78,
                            RowGuid = new Guid("e076b893-d5a5-4ec1-8606-1b6bd396edb5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 278,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3018),
                            OperationId = 75,
                            RowGuid = new Guid("b0dd37f3-a127-41ba-a26e-ecd6fc134361"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 279,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3024),
                            OperationId = 76,
                            RowGuid = new Guid("e3b696aa-eea5-45bb-b008-0cc64ce3b3af"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 280,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3030),
                            OperationId = 77,
                            RowGuid = new Guid("64c66e97-32fd-434d-89cf-9a6d1b1d4d42"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 281,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3038),
                            OperationId = 78,
                            RowGuid = new Guid("e9a0a83d-e6c9-41b3-a4b3-7acbb4eddd62"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 282,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3045),
                            OperationId = 79,
                            RowGuid = new Guid("a664a64d-dfd7-43ed-b1e2-092642dee970"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 283,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3050),
                            OperationId = 80,
                            RowGuid = new Guid("6547029f-873e-497f-9cdd-5740cc5f3970"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 284,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3058),
                            OperationId = 81,
                            RowGuid = new Guid("0fc6dc29-da9d-446d-bffb-0762d5fd2c0b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 285,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3064),
                            OperationId = 82,
                            RowGuid = new Guid("bb71605e-3ef2-4f46-8bff-acfa839cc388"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 286,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3070),
                            OperationId = 83,
                            RowGuid = new Guid("f94c8842-f23f-4160-9b5f-e27d53165d37"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 287,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3076),
                            OperationId = 84,
                            RowGuid = new Guid("e741c519-8b30-4022-8cb2-eacc5c05c438"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 288,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3082),
                            OperationId = 85,
                            RowGuid = new Guid("0f4ca45a-a7d7-4346-85dd-806631eb7492"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 289,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3090),
                            OperationId = 86,
                            RowGuid = new Guid("47c25927-a23c-4d6e-951a-073b86de2807"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 290,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3097),
                            OperationId = 79,
                            RowGuid = new Guid("dbe7c673-7da3-4dbb-beab-65da8357f754"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 291,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3103),
                            OperationId = 80,
                            RowGuid = new Guid("ebca3260-7e31-481c-abbe-a25707953e52"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 292,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3109),
                            OperationId = 81,
                            RowGuid = new Guid("722d0151-110e-42e9-9e15-3a8a1f07e1f9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 293,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3114),
                            OperationId = 82,
                            RowGuid = new Guid("71997ffa-35b3-4186-8c11-082678f1aee1"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 294,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3120),
                            OperationId = 83,
                            RowGuid = new Guid("c73b5e3a-f0fc-4173-ad7d-8d23316081a7"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 295,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3128),
                            OperationId = 84,
                            RowGuid = new Guid("2def8115-3292-4dca-9f0a-a1f8450d2eb5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 296,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3134),
                            OperationId = 85,
                            RowGuid = new Guid("f9c6ac0a-1416-4ac9-b135-90d08ee2c1ef"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 297,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3142),
                            OperationId = 86,
                            RowGuid = new Guid("65afabd6-1d58-43ac-a94a-17d7bf475a39"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 298,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3149),
                            OperationId = 87,
                            RowGuid = new Guid("bcdf9210-b137-49f7-b050-bad45eee1ca6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 299,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3155),
                            OperationId = 88,
                            RowGuid = new Guid("9f534959-52d7-4f86-8350-1e00313ff7b6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 300,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3164),
                            OperationId = 87,
                            RowGuid = new Guid("823a9075-0e66-4fee-bebe-62c19371012a"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 301,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3170),
                            OperationId = 88,
                            RowGuid = new Guid("611374ce-e724-4c69-80ef-f273fd9c727f"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 302,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3176),
                            OperationId = 89,
                            RowGuid = new Guid("d437f491-3504-4795-b106-4b9e52ca06c7"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 303,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3224),
                            OperationId = 90,
                            RowGuid = new Guid("ced9d676-07f6-490c-9689-947824688516"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 304,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3233),
                            OperationId = 89,
                            RowGuid = new Guid("e4ac5a6d-cc44-4101-8a1d-c7b0994ab810"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 305,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3242),
                            OperationId = 90,
                            RowGuid = new Guid("227a8de5-8ebb-4624-a3b2-8374b914c855"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 306,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3248),
                            OperationId = 89,
                            RowGuid = new Guid("28ee7a1f-b6b7-4a2f-9dce-833b79466332"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 307,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3254),
                            OperationId = 90,
                            RowGuid = new Guid("79694a9e-20f3-4123-89dc-a5ab7725f776"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 308,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3259),
                            OperationId = 89,
                            RowGuid = new Guid("f1aad505-fcc2-4811-a852-084c75d7e243"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 309,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3265),
                            OperationId = 90,
                            RowGuid = new Guid("6092259a-ed94-458c-89ea-db0f72aaba11"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 310,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3271),
                            OperationId = 89,
                            RowGuid = new Guid("ae5aa3ba-fa07-4e93-a249-3e1648f3e657"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 311,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3278),
                            OperationId = 90,
                            RowGuid = new Guid("478b3ef5-ef34-4a1d-a47c-8cf7a0e1aad8"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 312,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3284),
                            OperationId = 89,
                            RowGuid = new Guid("f379f8a7-5898-499e-80ce-ef90a543385e"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 313,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3292),
                            OperationId = 90,
                            RowGuid = new Guid("06539272-2d47-40d4-8032-d123aafec9bb"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 314,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3298),
                            OperationId = 89,
                            RowGuid = new Guid("10e7d576-e8b3-4d53-b488-3678a04cdc71"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 315,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3304),
                            OperationId = 90,
                            RowGuid = new Guid("ef8d288a-b82f-4634-8c9a-3f37f8fce34f"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 316,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3311),
                            OperationId = 5,
                            RowGuid = new Guid("c21ced3b-ec91-4e06-bcb9-a70408849e88"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 317,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3318),
                            OperationId = 54,
                            RowGuid = new Guid("3426ce6d-1e07-4104-9336-d7f92d30779c"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 318,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3324),
                            OperationId = 91,
                            RowGuid = new Guid("8c6684ad-71c9-4473-91ec-dc533144297e"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 319,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3329),
                            OperationId = 92,
                            RowGuid = new Guid("dd6f4fd1-c275-4178-aae9-57ac4664c619"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 320,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3336),
                            OperationId = 5,
                            RowGuid = new Guid("bba63a1d-5969-47ba-82ea-5cb73538675d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 321,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3344),
                            OperationId = 54,
                            RowGuid = new Guid("17c27f97-5643-45e5-a04c-5bafa440a212"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 322,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3350),
                            OperationId = 91,
                            RowGuid = new Guid("88764bcd-46b7-4556-bdea-4c0bede1e267"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 323,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3356),
                            OperationId = 92,
                            RowGuid = new Guid("03fe804a-14e6-43ac-9702-df116463a5ab"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 324,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3363),
                            OperationId = 93,
                            RowGuid = new Guid("683c54e9-4353-48d1-8a67-a8e65533f9e5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 325,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3369),
                            OperationId = 93,
                            RowGuid = new Guid("0758f018-69e1-45b4-8128-1e0b962755ab"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 326,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3376),
                            OperationId = 21,
                            RowGuid = new Guid("26c5f6e6-4280-4a1c-b7c0-2c497aee8697"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100000,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3381),
                            OperationId = 1,
                            RowGuid = new Guid("50ee0db2-e7ce-43fc-95b4-30f5341e241e"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100001,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3388),
                            OperationId = 2,
                            RowGuid = new Guid("bd6797d8-9c1a-4532-a2f2-35311e3fc756"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100002,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3396),
                            OperationId = 3,
                            RowGuid = new Guid("f6c7e682-0bf6-4d77-a431-fe3cec227091"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100003,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3402),
                            OperationId = 4,
                            RowGuid = new Guid("d754672e-08e0-49d0-8ce2-a62776d990df"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100004,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3408),
                            OperationId = 5,
                            RowGuid = new Guid("6453e16b-fca6-489f-bf22-0dbbd2cfd9c1"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100005,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3414),
                            OperationId = 6,
                            RowGuid = new Guid("4078eb78-ff4e-438b-a57a-cf3094d3157a"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100006,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3420),
                            OperationId = 21,
                            RowGuid = new Guid("045ebafd-1289-4148-abce-defdac21df7e"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100007,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3426),
                            OperationId = 54,
                            RowGuid = new Guid("a33f5f2d-1a22-4fca-963d-04a7b289485d"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100008,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 490, DateTimeKind.Local).AddTicks(3432),
                            OperationId = 58,
                            RowGuid = new Guid("56f95457-3cee-43b8-8df2-74e9236cceec"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("DescriptionKey")
                        .HasMaxLength(1028)
                        .HasColumnType("nvarchar(1028)");

                    b.Property<bool>("IsStandalone")
                        .HasColumnType("bit");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("ScopeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsystem")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Setting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("Values");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("UserSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ValueID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("UserValue", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NameKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("UserValueCategory", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.ViewSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViewSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ViewSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentStatus", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentType", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FilterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Filter", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InactiveEntityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("InactiveEntity", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLog", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogArchiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLogArchive", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Branch", "Corporate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Level = 0,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 401, DateTimeKind.Local).AddTicks(6753),
                            Name = "دفتر مرکزی",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Level = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 401, DateTimeKind.Local).AddTicks(7662),
                            Name = "نمایشگاه شمال تهران",
                            ParentId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrencyAdjustable")
                        .HasColumnType("bit");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TurnoverMode")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Account", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CollectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("MultiSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TypeLevel")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("AccountCollection", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCollectionAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("AccountCollectionAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountCollectionCategory", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "CostCenterId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("AccountCostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("AccountCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountDetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "DetailAccountId");

                    b.HasIndex("DetailAccountId");

                    b.ToTable("AccountDetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountGroup", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountHolderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasSignature")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountOwnerId");

                    b.ToTable("AccountHolder", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountOwnerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<string>("BankBranchName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BranchIndex")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ShabaNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("AccountOwner", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AccountProject", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("CostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("DecimalCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefaultCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("MinorUnit")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("TaxCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("Currency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyRateID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Multiplier")
                        .HasColumnType("float");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CurrencyRate", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerTaxInfoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("BuyerType")
                        .HasColumnType("int");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CustomerFirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EconomicCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PerCityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("CustomerTaxInfo", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("DetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FiscalPeriod", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("Project", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.TaxCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaxCurrencyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("TaxCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedByID");

                    b.Property<string>("ApproverName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Association")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int")
                        .HasColumnName("ConfirmedByID");

                    b.Property<string>("ConfirmerName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("IssuedByID");

                    b.Property<int>("DailyNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBalanced")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("ModifiedByID");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifierName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SaveCount")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<short>("SubjectType")
                        .HasColumnType("smallint");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OriginId");

                    b.HasIndex("StatusId");

                    b.ToTable("Voucher", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyValue")
                        .HasColumnType("money");

                    b.Property<decimal>("Debit")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FollowupNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Mark")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.Property<short>("TypeId")
                        .HasColumnType("smallint");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherLine", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OriginID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("VoucherOrigin", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.CustomForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomFormID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("CustomForm", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("EntityType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8353),
                            Name = "Account",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8551),
                            Name = "AccountCollectionAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8561),
                            Name = "AccountGroup",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8566),
                            Name = "Branch",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8572),
                            Name = "CostCenter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8581),
                            Name = "Currency",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8587),
                            Name = "DetailAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8593),
                            Name = "FiscalPeriod",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8599),
                            Name = "OperationLog",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8607),
                            Name = "Project",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8613),
                            Name = "Setting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8618),
                            Name = "Voucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8623),
                            Name = "DraftVoucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8628),
                            Name = "DashboardTab",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8635),
                            Name = "Widget",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8640),
                            Name = "CheckBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8646),
                            Name = "CashRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8653),
                            Name = "SourceApp",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 24,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8659),
                            Name = "Receipt",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8664),
                            Name = "Payment",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100001,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8669),
                            Name = "Brand",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100002,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8675),
                            Name = "Unit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100003,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8680),
                            Name = "Property",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100004,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 219, DateTimeKind.Local).AddTicks(8685),
                            Name = "Attribute",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Operation", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2363),
                            Name = "View",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2751),
                            Name = "Create",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2760),
                            Name = "Edit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2764),
                            Name = "Delete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2768),
                            Name = "Filter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2781),
                            Name = "Print",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2785),
                            Name = "Save",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2789),
                            Name = "Archive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2792),
                            Name = "SetDefault",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2798),
                            Name = "Design",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2802),
                            Name = "Check",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2806),
                            Name = "UndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2810),
                            Name = "Confirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2813),
                            Name = "UndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2817),
                            Name = "Approve",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2821),
                            Name = "UndoApprove",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2824),
                            Name = "Finalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2830),
                            Name = "UndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2834),
                            Name = "Mark",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2838),
                            Name = "QuickReportDesign",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2841),
                            Name = "GroupDelete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2846),
                            Name = "ViewArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2849),
                            Name = "CalendarChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2853),
                            Name = "CurrencyChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2856),
                            Name = "DecimalCountChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2861),
                            Name = "DefaultCodingChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2865),
                            Name = "RoleAccess",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2868),
                            Name = "CreateLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2872),
                            Name = "EditLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2875),
                            Name = "DeleteLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2879),
                            Name = "GroupDeleteLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2965),
                            Name = "CreateRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2970),
                            Name = "EditRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2975),
                            Name = "DeleteRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2979),
                            Name = "PrintRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2982),
                            Name = "GroupDeleteRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 45,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2986),
                            Name = "ViewRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2989),
                            Name = "GroupCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2992),
                            Name = "GroupUndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 48,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(2996),
                            Name = "GroupFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 49,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3000),
                            Name = "GroupUndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 50,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3003),
                            Name = "GroupConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 51,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3009),
                            Name = "GroupUndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 52,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3012),
                            Name = "Normalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 53,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3016),
                            Name = "GroupNormalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 54,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3019),
                            Name = "Export",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 55,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3023),
                            Name = "ExportRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 56,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3026),
                            Name = "FilterRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 58,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3030),
                            Name = "PrintPreview",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 60,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3034),
                            Name = "CreatePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 61,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3037),
                            Name = "DeletePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 62,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3041),
                            Name = "CancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 63,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3045),
                            Name = "UndoCancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 64,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3048),
                            Name = "ConnectToCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 65,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3052),
                            Name = "DisconnectFromCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 66,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3055),
                            Name = "AssignCashRegisterUser",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 67,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3059),
                            Name = "UndoArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 68,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3062),
                            Name = "Register",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 69,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3066),
                            Name = "RemoveInvalidAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 70,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3071),
                            Name = "AggregateAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 71,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3074),
                            Name = "CreateAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 72,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3077),
                            Name = "EditAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 73,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3099),
                            Name = "DeleteAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 74,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3104),
                            Name = "GroupDeleteAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 75,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3108),
                            Name = "PrintAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 76,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3114),
                            Name = "PrintPreviewAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 77,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3118),
                            Name = "FilterAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 78,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3121),
                            Name = "ExportAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 79,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3173),
                            Name = "CreateCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 80,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3177),
                            Name = "EditCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 81,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3180),
                            Name = "DeleteCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 82,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3184),
                            Name = "GroupDeleteCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 83,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3187),
                            Name = "PrintCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 84,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3191),
                            Name = "PrintPreviewCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 85,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3194),
                            Name = "FilterCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 86,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3198),
                            Name = "ExportCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 87,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3201),
                            Name = "RemoveInvalidCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 88,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3205),
                            Name = "AggregateCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 89,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3208),
                            Name = "Deactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 90,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3212),
                            Name = "Reactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 91,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3215),
                            Name = "PrintForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 92,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3219),
                            Name = "PrintPreviewForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 93,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 228, DateTimeKind.Local).AddTicks(3222),
                            Name = "UndoRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSource", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(1884),
                            Name = "Journal",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2153),
                            Name = "AccountBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2165),
                            Name = "CurrencyBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2172),
                            Name = "TestBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2177),
                            Name = "ItemBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2191),
                            Name = "BalanceByAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2197),
                            Name = "EnvironmentParams",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2202),
                            Name = "ProfitLoss",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2208),
                            Name = "AccountRelations",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2215),
                            Name = "BalanceSheet",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2220),
                            Name = "SystemIssue",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 216, DateTimeKind.Local).AddTicks(2225),
                            Name = "CheckBookReport",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceListID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceList", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 213, DateTimeKind.Local).AddTicks(4019),
                            Name = "BaseData",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 213, DateTimeKind.Local).AddTicks(4260),
                            Name = "OperationalForms",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 213, DateTimeKind.Local).AddTicks(4275),
                            Name = "Reports",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProvinceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Province", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Subsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Subsystem", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 207, DateTimeKind.Local).AddTicks(1532),
                            Name = "Administration",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 209, DateTimeKind.Local).AddTicks(6159),
                            Name = "Accounting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 209, DateTimeKind.Local).AddTicks(6267),
                            Name = "Treasury",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100000,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 44, 34, 209, DateTimeKind.Local).AddTicks(6274),
                            Name = "ProductScope",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttributeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Attribute", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("SocialLink")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Website")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Brand", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FileID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UniqeName")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("File", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PropertyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Suffix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Property", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnitID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Symbol")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Unit", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VersionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.HasKey("Id");

                    b.ToTable("Version", "Core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2022, 8, 27, 13, 56, 52, 150, DateTimeKind.Unspecified),
                            Number = "2.2.0",
                            RowGuid = new Guid("26452115-8352-42fe-a7b8-4bd3d32f50f6")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dashboard", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardTabID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("DashboardId");

                    b.ToTable("DashboardTab", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.FunctionParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FunctionParameterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("FunctionParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TabWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TabId");

                    b.HasIndex("WidgetId");

                    b.ToTable("TabWidget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsedParameterId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ParameterId");

                    b.ToTable("UsedParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Widget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WidgetId");

                    b.ToTable("WidgetAccount", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetFunctionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetFunction", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetType", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany("RoleBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany("RoleFiscalPeriods")
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("RoleWidgets")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Auth_RoleWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("Accounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("CashAccounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_SourceApp");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("PayReceiveVoucherLines")
                        .HasForeignKey("PayReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherLine", "VoucherLine")
                        .WithOne()
                        .HasForeignKey("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", "VoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayReceive");

                    b.Navigation("VoucherLine");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.CashRegister", "CashRegister")
                        .WithMany()
                        .HasForeignKey("CashRegisterId")
                        .HasConstraintName("FK_CashFlow_UserCashRegister_CashFlow_CashRegister")
                        .IsRequired();

                    b.Navigation("CashRegister");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Check_CheckBook_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Check.CheckBook", "CheckBook")
                        .WithMany("Pages")
                        .HasForeignKey("CheckBookId")
                        .HasConstraintName("FK_Check_CheckBookPage_Check_CheckBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckBook");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.CustomForm", "CustomForm")
                        .WithMany()
                        .HasForeignKey("CustomFormID")
                        .HasConstraintName("FK_Config_LabelSetting_Metadata_CustomForm");

                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingID")
                        .HasConstraintName("FK_Config_LabelSetting_Config_Setting");

                    b.Navigation("CustomForm");

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceType", "SourceType")
                        .WithMany()
                        .HasForeignKey("SourceTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_SourceType")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Subsystem", "Subsystem")
                        .WithMany()
                        .HasForeignKey("SubsystemId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Subsystem")
                        .IsRequired();

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceType");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .HasConstraintName("FK_Config_Setting_Config_Parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .HasConstraintName("FK_Config_UserSetting_Config_Setting")
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.UserValueCategory", "Category")
                        .WithMany("Values")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Config_UserValue_Config_Category")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_InactiveEntity_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_InactiveEntity_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLog_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLog_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Account_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Account_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Finance_Account_Finance_Group");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Account_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Group");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", "Category")
                        .WithMany("AccountCollections")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_Finance_AccountCollection_Finance_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Collection")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Collection");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCurrencies")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("DetailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("DetailAccount");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountOwner")
                        .WithMany("AccountHolders")
                        .HasForeignKey("AccountOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountOwner");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("AccountOwner")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountID")
                        .HasConstraintName("FK_Finance_AccountOwner_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountProjects")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany("AccountProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CostCenter_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Currency_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CurrencyRate_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany("Rates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("CustomerTaxInfo")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", "AccountID")
                        .HasConstraintName("FK_Finance_CustomerTaxInfo_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_DetailAccount_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Project_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Project_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Project_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Voucher_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherOrigin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_VoucherOrigin")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Core.DocumentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Finance_Voucher_Core_Status")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Origin");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_VoucherLine_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_Finance_VoucherLine_CashFlow_SourceApp");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Voucher", "Voucher")
                        .WithMany("Lines")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Voucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("Currency");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Metadata_City_Metadata_Province")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Dashboard", "Dashboard")
                        .WithMany("Tabs")
                        .HasForeignKey("DashboardId")
                        .HasConstraintName("FK_Reporting_DashboardTab_Reporting_Dashboard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dashboard");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.DashboardTab", "Tab")
                        .WithMany("Widgets")
                        .HasForeignKey("TabId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_DashboardTab")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany("Parameters")
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.FunctionParameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Parameter")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Type")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("Accounts")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("Project");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CashAccounts");

                    b.Navigation("PayReceiveVoucherLines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("RoleBranches");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("AccountCurrencies");

                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("AccountOwner");

                    b.Navigation("AccountProjects");

                    b.Navigation("Children");

                    b.Navigation("CustomerTaxInfo");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Navigation("AccountCollections");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Navigation("AccountHolders");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Navigation("RoleFiscalPeriods");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Navigation("AccountProjects");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Navigation("Tabs");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("RoleWidgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
