// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPPC.Tadbir.Persistence;

namespace SPPC.Tadbir.Web.Api.Migrations
{
    [DbContext(typeof(TadbirContext))]
    [Migration("20231021095800_test3")]
    partial class test3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleBranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "BranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("RoleBranch", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleFiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "FiscalPeriodId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("RoleFiscalPeriod", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WidgetId");

                    b.ToTable("RoleWidget", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("IssuedById")
                        .HasColumnType("int");

                    b.Property<string>("IssuedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("PayReceive", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PayReceiveAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveCashAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankOrderNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBank")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.ToTable("PayReceiveCashAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveVoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("VoucherLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PayReceiveId", "VoucherLineId");

                    b.HasIndex("VoucherLineId")
                        .IsUnique();

                    b.ToTable("PayReceiveVoucherLine", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SourceAppID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("SourceApp", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserCashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashRegisterId");

                    b.ToTable("UserCashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<string>("EndNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadStartNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("SeriesNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StartNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.ToTable("CheckBook", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookPageID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckBookId")
                        .HasColumnType("int");

                    b.Property<int?>("CheckId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CheckBookId");

                    b.ToTable("CheckBookPage", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LabelSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomFormID")
                        .HasColumnType("int");

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SettingID")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomFormID");

                    b.HasIndex("SettingID");

                    b.ToTable("LabelSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int")
                        .HasColumnName("OperationID");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("SourceID");

                    b.Property<int>("SourceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SourceTypeID");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceTypeId");

                    b.HasIndex("SubsystemId");

                    b.ToTable("LogSetting", "Config");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 635, DateTimeKind.Local).AddTicks(9061),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 2,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4573),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 3,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4615),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 4,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4629),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 5,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4642),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 6,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4666),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 7,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4680),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 8,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4688),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 9,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4695),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 10,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4703),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 11,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4715),
                            OperationId = 7,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 12,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4725),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 13,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4731),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 14,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4743),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 15,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4756),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 16,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4770),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 17,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4782),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 18,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4799),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 19,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4809),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 20,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4815),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 21,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4821),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 22,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4827),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 23,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4838),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 24,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4851),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 25,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4861),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 26,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4870),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 27,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4875),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 28,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4881),
                            OperationId = 35,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 29,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4888),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 30,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(4894),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 31,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5062),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 32,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5076),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 33,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5081),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 34,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5090),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 35,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5096),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 36,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5102),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 37,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5109),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 38,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5114),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 39,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5120),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 40,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5126),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 41,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5133),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 42,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5141),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 43,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5148),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 44,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5156),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 45,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5163),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 46,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5171),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 47,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5178),
                            OperationId = 40,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 48,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5185),
                            OperationId = 41,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 49,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5192),
                            OperationId = 42,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 50,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5200),
                            OperationId = 43,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 51,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5207),
                            OperationId = 44,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 52,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5213),
                            OperationId = 45,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 53,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5219),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 54,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5225),
                            OperationId = 55,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 55,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5231),
                            OperationId = 56,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 56,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5238),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 57,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5245),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 58,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5252),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 59,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5260),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 60,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5267),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 61,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5274),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 62,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5281),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 63,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5452),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 64,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5465),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 65,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5471),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 66,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5481),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 67,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5488),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 68,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5495),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 69,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5503),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 70,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5509),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 71,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5516),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 72,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5522),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 73,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5529),
                            OperationId = 35,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 74,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5535),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 75,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5542),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 76,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5548),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 77,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5554),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 78,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5561),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 79,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5567),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 80,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5574),
                            OperationId = 8,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 81,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5581),
                            OperationId = 30,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 82,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5588),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 83,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5594),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 84,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5601),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 85,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5608),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 86,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5615),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 87,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5621),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 88,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5628),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 89,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5634),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 90,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5640),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 91,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5648),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 92,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5655),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 93,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5661),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 94,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5796),
                            OperationId = 7,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 95,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5806),
                            OperationId = 31,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 96,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5812),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 97,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5819),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 98,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5825),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 99,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5831),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5838),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 101,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5844),
                            OperationId = 11,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 102,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5853),
                            OperationId = 12,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 103,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5860),
                            OperationId = 13,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 104,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5866),
                            OperationId = 14,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 105,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5872),
                            OperationId = 15,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 106,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5879),
                            OperationId = 16,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 107,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5884),
                            OperationId = 17,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 108,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5890),
                            OperationId = 18,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 109,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5896),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 110,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5902),
                            OperationId = 36,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 111,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5908),
                            OperationId = 37,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 112,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5916),
                            OperationId = 38,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 113,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5923),
                            OperationId = 39,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 114,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5928),
                            OperationId = 46,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 115,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5936),
                            OperationId = 47,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 116,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5942),
                            OperationId = 48,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 117,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5949),
                            OperationId = 49,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 118,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5954),
                            OperationId = 50,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 119,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5960),
                            OperationId = 51,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 120,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5966),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 121,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5972),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 122,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5978),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 123,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5985),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 124,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5992),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 125,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(5998),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 126,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6004),
                            OperationId = 11,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 127,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6010),
                            OperationId = 12,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 128,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6017),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 129,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6115),
                            OperationId = 36,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 130,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6129),
                            OperationId = 37,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 131,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6136),
                            OperationId = 38,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 132,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6142),
                            OperationId = 39,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 133,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6148),
                            OperationId = 46,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 134,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6154),
                            OperationId = 47,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 135,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6160),
                            OperationId = 52,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 136,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6167),
                            OperationId = 53,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 137,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6173),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 138,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6180),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 139,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6186),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 140,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6192),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 141,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6198),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 142,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6204),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 143,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6210),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 144,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6216),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 145,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6224),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 146,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6229),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 147,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6235),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 148,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6240),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 149,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6247),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 150,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6252),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 151,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6258),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 152,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6264),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 153,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6271),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 154,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6277),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 155,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6283),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 156,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6372),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 157,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6381),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 158,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6387),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 159,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6394),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 160,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6400),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 161,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6406),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 162,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6412),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 163,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6419),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 164,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6424),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 165,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6431),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 166,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6438),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 167,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6445),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 168,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6451),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 169,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6458),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 170,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6465),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 171,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6471),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 172,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6477),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 173,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6483),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 174,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6489),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 175,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6496),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 176,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6502),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 177,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6509),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 178,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6515),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 179,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6521),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 180,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6527),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 181,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6533),
                            OperationId = 32,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 182,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6539),
                            OperationId = 33,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 183,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6545),
                            OperationId = 34,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 184,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6551),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 185,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6558),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 186,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6564),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 187,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6570),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 188,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6577),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 189,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6584),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 190,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6591),
                            OperationId = 7,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 191,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6682),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 192,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6692),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 193,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6698),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 194,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6705),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 195,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6711),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 196,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6718),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 197,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6725),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 198,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6733),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 199,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6740),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 200,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6748),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 201,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6755),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 202,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6761),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 203,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6767),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 204,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6773),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 205,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6780),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 206,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6786),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 207,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6793),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 208,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6800),
                            OperationId = 60,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 209,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6807),
                            OperationId = 61,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 210,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6813),
                            OperationId = 62,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 211,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6820),
                            OperationId = 63,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 212,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6826),
                            OperationId = 64,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 213,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6832),
                            OperationId = 65,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 214,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6838),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 215,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6845),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 216,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6851),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 217,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6857),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 218,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6864),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 219,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6870),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 220,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6878),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 221,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6884),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 222,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6890),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 223,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6896),
                            OperationId = 66,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 224,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6902),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 225,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6909),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 226,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(6996),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 227,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7004),
                            OperationId = 8,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 228,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7010),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 229,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7016),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 230,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7022),
                            OperationId = 67,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 231,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7029),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 232,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7034),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 233,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7040),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 234,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7048),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 235,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7053),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 236,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7059),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 237,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7065),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 238,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7070),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 239,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7075),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 240,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7081),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 241,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7092),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 242,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7097),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 243,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7102),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 244,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7108),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 245,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7113),
                            OperationId = 13,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 246,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7119),
                            OperationId = 14,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 247,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7125),
                            OperationId = 15,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 248,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7130),
                            OperationId = 16,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 249,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7137),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 250,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7143),
                            OperationId = 68,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 251,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7148),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 252,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7161),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 253,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7172),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 254,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7185),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 255,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7194),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 256,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7199),
                            OperationId = 13,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 257,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7205),
                            OperationId = 14,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 258,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7299),
                            OperationId = 15,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 259,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7310),
                            OperationId = 16,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 260,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7318),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 261,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7324),
                            OperationId = 68,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 262,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7331),
                            OperationId = 69,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 263,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7339),
                            OperationId = 70,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 264,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7345),
                            OperationId = 71,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 265,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7351),
                            OperationId = 72,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 266,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7357),
                            OperationId = 73,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 267,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7364),
                            OperationId = 74,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 268,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7370),
                            OperationId = 69,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 269,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7377),
                            OperationId = 70,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 270,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7383),
                            OperationId = 71,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 271,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7390),
                            OperationId = 72,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 272,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7396),
                            OperationId = 73,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 273,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7403),
                            OperationId = 74,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 274,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7410),
                            OperationId = 75,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 275,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7417),
                            OperationId = 76,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 276,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7424),
                            OperationId = 77,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 277,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7430),
                            OperationId = 78,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 278,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7437),
                            OperationId = 75,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 279,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7501),
                            OperationId = 76,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 280,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7510),
                            OperationId = 77,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 281,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7516),
                            OperationId = 78,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 282,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7523),
                            OperationId = 79,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 283,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7530),
                            OperationId = 80,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 284,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7536),
                            OperationId = 81,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 285,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7544),
                            OperationId = 82,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 286,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7551),
                            OperationId = 83,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 287,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7557),
                            OperationId = 84,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 288,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7564),
                            OperationId = 85,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 289,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7570),
                            OperationId = 86,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 290,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7577),
                            OperationId = 79,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 291,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7583),
                            OperationId = 80,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 292,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7589),
                            OperationId = 81,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 293,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7596),
                            OperationId = 82,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 294,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7603),
                            OperationId = 83,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 295,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7610),
                            OperationId = 84,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 296,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7617),
                            OperationId = 85,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 297,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7623),
                            OperationId = 86,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 298,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7630),
                            OperationId = 87,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 299,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7636),
                            OperationId = 88,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 300,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7643),
                            OperationId = 87,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 301,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7649),
                            OperationId = 88,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 302,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7656),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 303,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7662),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 304,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7669),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 305,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7675),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 306,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7683),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 307,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7690),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 308,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7697),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 309,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7703),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 310,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7712),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 311,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7718),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 312,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7725),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 313,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7731),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 314,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7833),
                            OperationId = 89,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 315,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7843),
                            OperationId = 90,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 316,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7849),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 317,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7856),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 318,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7862),
                            OperationId = 91,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 319,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7868),
                            OperationId = 92,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 320,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7874),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 321,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7880),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 322,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7886),
                            OperationId = 91,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 323,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7892),
                            OperationId = 92,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 324,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7898),
                            OperationId = 93,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 325,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7905),
                            OperationId = 93,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 326,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7911),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100000,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7917),
                            OperationId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100001,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7923),
                            OperationId = 2,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100002,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7929),
                            OperationId = 3,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100003,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7935),
                            OperationId = 4,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100004,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7940),
                            OperationId = 5,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100005,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7946),
                            OperationId = 6,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100006,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7952),
                            OperationId = 21,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100007,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7958),
                            OperationId = 54,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100008,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 636, DateTimeKind.Local).AddTicks(7964),
                            OperationId = 58,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("DescriptionKey")
                        .HasMaxLength(1028)
                        .HasColumnType("nvarchar(1028)");

                    b.Property<bool>("IsStandalone")
                        .HasColumnType("bit");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("ScopeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsystem")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Setting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("Values");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("UserSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ValueID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("UserValue", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NameKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("UserValueCategory", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.ViewSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViewSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ViewSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentStatus", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentType", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FilterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Filter", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InactiveEntityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("InactiveEntity", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLog", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogArchiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLogArchive", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Branch", "Corporate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Level = 0,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 522, DateTimeKind.Local).AddTicks(4139),
                            Name = "دفتر مرکزی",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Level = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 522, DateTimeKind.Local).AddTicks(5207),
                            Name = "نمایشگاه شمال تهران",
                            ParentId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrencyAdjustable")
                        .HasColumnType("bit");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TurnoverMode")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Account", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CollectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("MultiSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TypeLevel")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("AccountCollection", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCollectionAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("AccountCollectionAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountCollectionCategory", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "CostCenterId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("AccountCostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("AccountCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountDetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "DetailAccountId");

                    b.HasIndex("DetailAccountId");

                    b.ToTable("AccountDetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountGroup", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountHolderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasSignature")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountOwnerId");

                    b.ToTable("AccountHolder", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountOwnerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<string>("BankBranchName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BranchIndex")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ShabaNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("AccountOwner", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AccountProject", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("CostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("DecimalCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefaultCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("MinorUnit")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("TaxCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("Currency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyRateID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Multiplier")
                        .HasColumnType("float");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CurrencyRate", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerTaxInfoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("BuyerType")
                        .HasColumnType("int");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CustomerFirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EconomicCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PerCityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("CustomerTaxInfo", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("DetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FiscalPeriod", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("Project", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.TaxCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaxCurrencyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("TaxCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedByID");

                    b.Property<string>("ApproverName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Association")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int")
                        .HasColumnName("ConfirmedByID");

                    b.Property<string>("ConfirmerName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("IssuedByID");

                    b.Property<int>("DailyNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBalanced")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("ModifiedByID");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifierName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SaveCount")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<short>("SubjectType")
                        .HasColumnType("smallint");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OriginId");

                    b.HasIndex("StatusId");

                    b.ToTable("Voucher", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyValue")
                        .HasColumnType("money");

                    b.Property<decimal>("Debit")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FollowupNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Mark")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.Property<short>("TypeId")
                        .HasColumnType("smallint");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherLine", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OriginID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("VoucherOrigin", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.CustomForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomFormID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("CustomForm", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("EntityType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1666),
                            Name = "Account",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1933),
                            Name = "AccountCollectionAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1940),
                            Name = "AccountGroup",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1944),
                            Name = "Branch",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1947),
                            Name = "CostCenter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1955),
                            Name = "Currency",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1959),
                            Name = "DetailAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1962),
                            Name = "FiscalPeriod",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1966),
                            Name = "OperationLog",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1970),
                            Name = "Project",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1973),
                            Name = "Setting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1976),
                            Name = "Voucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1980),
                            Name = "DraftVoucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1983),
                            Name = "DashboardTab",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1986),
                            Name = "Widget",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1989),
                            Name = "CheckBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1992),
                            Name = "CashRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(1996),
                            Name = "SourceApp",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 24,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(2000),
                            Name = "Receipt",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(2003),
                            Name = "Payment",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100001,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(2006),
                            Name = "Brand",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100002,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(2009),
                            Name = "Unit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100003,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(2012),
                            Name = "Property",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100004,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 328, DateTimeKind.Local).AddTicks(2016),
                            Name = "Attribute",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Operation", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(3676),
                            Name = "View",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4016),
                            Name = "Create",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4026),
                            Name = "Edit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4029),
                            Name = "Delete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4032),
                            Name = "Filter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4043),
                            Name = "Print",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4046),
                            Name = "Save",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4049),
                            Name = "Archive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4052),
                            Name = "SetDefault",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4056),
                            Name = "Design",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4059),
                            Name = "Check",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4062),
                            Name = "UndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4065),
                            Name = "Confirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4068),
                            Name = "UndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4071),
                            Name = "Approve",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4074),
                            Name = "UndoApprove",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4077),
                            Name = "Finalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4081),
                            Name = "UndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4083),
                            Name = "Mark",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4086),
                            Name = "QuickReportDesign",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4089),
                            Name = "GroupDelete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4092),
                            Name = "ViewArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4097),
                            Name = "CalendarChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4099),
                            Name = "CurrencyChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4102),
                            Name = "DecimalCountChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4105),
                            Name = "DefaultCodingChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4108),
                            Name = "RoleAccess",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4110),
                            Name = "CreateLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4113),
                            Name = "EditLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4116),
                            Name = "DeleteLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4119),
                            Name = "GroupDeleteLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4122),
                            Name = "CreateRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4125),
                            Name = "EditRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4128),
                            Name = "DeleteRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4131),
                            Name = "PrintRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4134),
                            Name = "GroupDeleteRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 45,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4137),
                            Name = "ViewRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4139),
                            Name = "GroupCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4199),
                            Name = "GroupUndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 48,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4204),
                            Name = "GroupFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 49,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4207),
                            Name = "GroupUndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 50,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4210),
                            Name = "GroupConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 51,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4213),
                            Name = "GroupUndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 52,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4215),
                            Name = "Normalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 53,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4218),
                            Name = "GroupNormalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 54,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4221),
                            Name = "Export",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 55,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4223),
                            Name = "ExportRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 56,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4226),
                            Name = "FilterRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 58,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4229),
                            Name = "PrintPreview",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 60,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4232),
                            Name = "CreatePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 61,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4235),
                            Name = "DeletePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 62,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4237),
                            Name = "CancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 63,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4240),
                            Name = "UndoCancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 64,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4243),
                            Name = "ConnectToCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 65,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4246),
                            Name = "DisconnectFromCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 66,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4249),
                            Name = "AssignCashRegisterUser",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 67,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4252),
                            Name = "UndoArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 68,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4254),
                            Name = "Register",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 69,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4257),
                            Name = "RemoveInvalidAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 70,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4260),
                            Name = "AggregateAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 71,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4263),
                            Name = "CreateAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 72,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4266),
                            Name = "EditAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 73,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4283),
                            Name = "DeleteAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 74,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4286),
                            Name = "GroupDeleteAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 75,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4289),
                            Name = "PrintAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 76,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4293),
                            Name = "PrintPreviewAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 77,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4295),
                            Name = "FilterAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 78,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4298),
                            Name = "ExportAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 79,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4301),
                            Name = "CreateCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 80,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4304),
                            Name = "EditCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 81,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4307),
                            Name = "DeleteCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 82,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4309),
                            Name = "GroupDeleteCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 83,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4312),
                            Name = "PrintCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 84,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4315),
                            Name = "PrintPreviewCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 85,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4318),
                            Name = "FilterCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 86,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4321),
                            Name = "ExportCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 87,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4324),
                            Name = "RemoveInvalidCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 88,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4327),
                            Name = "AggregateCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 89,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4329),
                            Name = "Deactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 90,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4371),
                            Name = "Reactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 91,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4375),
                            Name = "PrintForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 92,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4378),
                            Name = "PrintPreviewForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 93,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 333, DateTimeKind.Local).AddTicks(4380),
                            Name = "UndoRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSource", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(1986),
                            Name = "Journal",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2135),
                            Name = "AccountBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2141),
                            Name = "CurrencyBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2144),
                            Name = "TestBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2147),
                            Name = "ItemBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2153),
                            Name = "BalanceByAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2213),
                            Name = "EnvironmentParams",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2217),
                            Name = "ProfitLoss",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2220),
                            Name = "AccountRelations",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2225),
                            Name = "BalanceSheet",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2229),
                            Name = "SystemIssue",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 326, DateTimeKind.Local).AddTicks(2232),
                            Name = "CheckBookReport",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceListID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceList", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 324, DateTimeKind.Local).AddTicks(4405),
                            Name = "BaseData",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 324, DateTimeKind.Local).AddTicks(4658),
                            Name = "OperationalForms",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 324, DateTimeKind.Local).AddTicks(4673),
                            Name = "Reports",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProvinceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Province", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Subsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Subsystem", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 318, DateTimeKind.Local).AddTicks(1007),
                            Name = "Administration",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 321, DateTimeKind.Local).AddTicks(351),
                            Name = "Accounting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 321, DateTimeKind.Local).AddTicks(495),
                            Name = "Treasury",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100000,
                            ModifiedDate = new DateTime(2023, 10, 21, 13, 27, 58, 321, DateTimeKind.Local).AddTicks(501),
                            Name = "ProductScope",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttributeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Attribute", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("SocialLink")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Website")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Brand", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FileID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UniqeName")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("File", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PropertyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Suffix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Property", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnitID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Symbol")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Unit", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VersionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.HasKey("Id");

                    b.ToTable("Version", "Core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2022, 8, 27, 13, 56, 52, 150, DateTimeKind.Unspecified),
                            Number = "2.2.0",
                            RowGuid = new Guid("26452115-8352-42fe-a7b8-4bd3d32f50f6")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dashboard", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardTabID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("DashboardId");

                    b.ToTable("DashboardTab", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.FunctionParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FunctionParameterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("FunctionParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TabWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TabId");

                    b.HasIndex("WidgetId");

                    b.ToTable("TabWidget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsedParameterId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ParameterId");

                    b.ToTable("UsedParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Widget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WidgetId");

                    b.ToTable("WidgetAccount", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetFunctionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetFunction", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetType", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany("RoleBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany("RoleFiscalPeriods")
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("RoleWidgets")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Auth_RoleWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("Accounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("CashAccounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_SourceApp");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("PayReceiveVoucherLines")
                        .HasForeignKey("PayReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherLine", "VoucherLine")
                        .WithOne()
                        .HasForeignKey("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", "VoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayReceive");

                    b.Navigation("VoucherLine");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.CashRegister", "CashRegister")
                        .WithMany()
                        .HasForeignKey("CashRegisterId")
                        .HasConstraintName("FK_CashFlow_UserCashRegister_CashFlow_CashRegister")
                        .IsRequired();

                    b.Navigation("CashRegister");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Check_CheckBook_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Check.CheckBook", "CheckBook")
                        .WithMany("Pages")
                        .HasForeignKey("CheckBookId")
                        .HasConstraintName("FK_Check_CheckBookPage_Check_CheckBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckBook");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.CustomForm", "CustomForm")
                        .WithMany()
                        .HasForeignKey("CustomFormID")
                        .HasConstraintName("FK_Config_LabelSetting_Metadata_CustomForm");

                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingID")
                        .HasConstraintName("FK_Config_LabelSetting_Config_Setting");

                    b.Navigation("CustomForm");

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceType", "SourceType")
                        .WithMany()
                        .HasForeignKey("SourceTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_SourceType")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Subsystem", "Subsystem")
                        .WithMany()
                        .HasForeignKey("SubsystemId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Subsystem")
                        .IsRequired();

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceType");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .HasConstraintName("FK_Config_Setting_Config_Parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .HasConstraintName("FK_Config_UserSetting_Config_Setting")
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.UserValueCategory", "Category")
                        .WithMany("Values")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Config_UserValue_Config_Category")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_InactiveEntity_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_InactiveEntity_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLog_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLog_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Account_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Account_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Finance_Account_Finance_Group");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Account_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Group");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", "Category")
                        .WithMany("AccountCollections")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_Finance_AccountCollection_Finance_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Collection")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Collection");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCurrencies")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("DetailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("DetailAccount");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountOwner")
                        .WithMany("AccountHolders")
                        .HasForeignKey("AccountOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountOwner");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("AccountOwner")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountID")
                        .HasConstraintName("FK_Finance_AccountOwner_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountProjects")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany("AccountProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CostCenter_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Currency_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CurrencyRate_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany("Rates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("CustomerTaxInfo")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", "AccountID")
                        .HasConstraintName("FK_Finance_CustomerTaxInfo_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_DetailAccount_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Project_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Project_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Project_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Voucher_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherOrigin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_VoucherOrigin")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Core.DocumentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Finance_Voucher_Core_Status")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Origin");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_VoucherLine_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_Finance_VoucherLine_CashFlow_SourceApp");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Voucher", "Voucher")
                        .WithMany("Lines")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Voucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("Currency");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Metadata_City_Metadata_Province")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Dashboard", "Dashboard")
                        .WithMany("Tabs")
                        .HasForeignKey("DashboardId")
                        .HasConstraintName("FK_Reporting_DashboardTab_Reporting_Dashboard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dashboard");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.DashboardTab", "Tab")
                        .WithMany("Widgets")
                        .HasForeignKey("TabId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_DashboardTab")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany("Parameters")
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.FunctionParameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Parameter")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Type")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("Accounts")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("Project");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CashAccounts");

                    b.Navigation("PayReceiveVoucherLines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("RoleBranches");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("AccountCurrencies");

                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("AccountOwner");

                    b.Navigation("AccountProjects");

                    b.Navigation("Children");

                    b.Navigation("CustomerTaxInfo");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Navigation("AccountCollections");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Navigation("AccountHolders");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Navigation("RoleFiscalPeriods");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Navigation("AccountProjects");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Navigation("Tabs");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("RoleWidgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
