// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPPC.Tadbir.Persistence;

namespace SPPC.Tadbir.Web.Api.Migrations.System
{
    [DbContext(typeof(SystemContext))]
    [Migration("20230930103203_sys-initial-migration")]
    partial class sysinitialmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PermissionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Flag")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Permission", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.PermissionGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PermissionGroupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("EntityName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SourceTypeId")
                        .HasColumnType("int");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SourceTypeId");

                    b.HasIndex("SubsystemId");

                    b.ToTable("PermissionGroup", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Role", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleCompanyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleCompany", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RolePermissionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PermissionId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "PermissionId");

                    b.HasIndex("PermissionId");

                    b.ToTable("RolePermission", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SessionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Browser")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Device")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Fingerprint")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("IPAddress")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("LastActivityUtc")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("SinceUtc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TimeZone")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Session", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLoginDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(256)
                        .IsUnicode(false)
                        .HasColumnType("varchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("User", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserRoleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.ViewRowPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RowPermissionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessMode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Items")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TextValue")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<double>("Value2")
                        .HasColumnType("float");

                    b.Property<int>("ViewID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("ViewID");

                    b.ToTable("ViewRowPermission", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.CompanyDb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DbName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Password")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Server")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("UserName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.ToTable("CompanyDb", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("DescriptionKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("IsStandalone")
                        .HasColumnType("bit");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("ScopeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsystem")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Setting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.SysLogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SysLogSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.ToTable("SysLogSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("Values");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("SettingId");

                    b.HasIndex("UserId");

                    b.HasIndex("ViewId");

                    b.ToTable("UserSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Contact.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PersonID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserID")
                        .IsUnique()
                        .HasFilter("[UserID] IS NOT NULL");

                    b.ToTable("Person", "Contact");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.SysOperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SysOperationLogID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.HasIndex("UserId");

                    b.ToTable("SysOperationLog", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.SysOperationLogArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SysOperationLogArchiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.HasIndex("UserId");

                    b.ToTable("SysOperationLogArchive", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.SystemError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SystemErrorID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("FaultType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FaultingMethod")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StackTrace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimestampUtc")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("SystemError", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Column", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ColumnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AllowFiltering")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowSorting")
                        .HasColumnType("bit");

                    b.Property<short>("DisplayIndex")
                        .HasColumnType("smallint");

                    b.Property<string>("DotNetType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Expression")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("GroupName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsDynamic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFixedLength")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNullable")
                        .HasColumnType("bit");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<int>("MinLength")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ScriptType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StorageType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Type")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("ViewID")
                        .HasColumnType("int");

                    b.Property<string>("Visibility")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("ViewID");

                    b.ToTable("Column", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CommandID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotKey")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("IconName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<string>("RouteUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PermissionId");

                    b.ToTable("Command", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("EntityType", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Locale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocaleID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("LocalName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Locale", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Operation", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSource", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceType", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.ReportView", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViewID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("ReportView", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.ShortcutCommand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ShortcutCommandID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HotKey")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Method")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("PermissionId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Scope")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("ShortcutCommand", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Subsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Subsystem", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.ValidRowPermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ValidRowPermissionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessMode")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("ViewID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViewID");

                    b.ToTable("ValidRowPermission", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.View", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViewID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityType")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("FetchUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<bool>("IsCartableIntegrated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsHierarchy")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SearchUrl")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.ToTable("View", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.LocalReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LocalReportID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Template")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LocaleId");

                    b.HasIndex("ReportId");

                    b.ToTable("LocalReport", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Parameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ParamID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaptionKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("ControlType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DefaultValue")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DescriptionKey")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("MaxValue")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("MinValue")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Operator")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("ReportId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Source")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("ReportId");

                    b.ToTable("Parameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReportID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDynamic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGroup")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSystem")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceKeys")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ServiceUrl")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ParentId");

                    b.HasIndex("ViewId");

                    b.ToTable("Report", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.SystemIssue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SystemIssueID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApiUrl")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<bool>("BranchScope")
                        .HasColumnType("bit");

                    b.Property<string>("DeleteApiUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int?>("PermissionID")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.HasIndex("PermissionID");

                    b.HasIndex("ViewId");

                    b.ToTable("SystemIssue", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Permission", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.PermissionGroup", "Group")
                        .WithMany("Permissions")
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Auth_Permission_Auth_PermissionGroup")
                        .IsRequired();

                    b.Navigation("Group");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.PermissionGroup", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceType", "SourceType")
                        .WithMany()
                        .HasForeignKey("SourceTypeId")
                        .HasConstraintName("FK_Auth_PermissionGroup_Metadata_SourceType")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Subsystem", "Subsystem")
                        .WithMany()
                        .HasForeignKey("SubsystemId")
                        .HasConstraintName("FK_Auth_PermissionGroup_Metadata_Subsystem")
                        .IsRequired();

                    b.Navigation("SourceType");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleCompany", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.CompanyDb", "Company")
                        .WithMany("RoleCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Auth.Role", "Role")
                        .WithMany("RoleCompanies")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RolePermission", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.Permission", "Permission")
                        .WithMany("RolePermissions")
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Auth.Role", "Role")
                        .WithMany("RolePermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Permission");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Session", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Auth_Session_Auth_User")
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.UserRole", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.ViewRowPermission", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Auth_ViewRowPermission_Auth_Role")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "View")
                        .WithMany()
                        .HasForeignKey("ViewID")
                        .HasConstraintName("FK_Auth_ViewRowPermission_Metadata_View")
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("View");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .HasConstraintName("FK_Config_Setting_Config_Parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.SysLogSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Source");

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_Config_UserSetting_Auth_Role");

                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .HasConstraintName("FK_Config_UserSetting_Config_Setting")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Config_UserSetting_Auth_User");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "View")
                        .WithMany()
                        .HasForeignKey("ViewId")
                        .HasConstraintName("FK_Config_UserSetting_Metadata_EntityView");

                    b.Navigation("Role");

                    b.Navigation("Setting");

                    b.Navigation("User");

                    b.Navigation("View");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Contact.Person", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "User")
                        .WithOne("Person")
                        .HasForeignKey("SPPC.Tadbir.Model.Contact.Person", "UserID")
                        .HasConstraintName("FK_Contact_Person_Auth_User");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.SysOperationLog", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.CompanyDb", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Core_SysOperationLog_Config_Company");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_SysOperationLog_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_SysOperationLog_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_SysOperationLog_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_SysOperationLog_Metadata_SourceList");

                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Core_SysOperationLog_Auth_User");

                    b.Navigation("Company");

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.SysOperationLogArchive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.CompanyDb", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Core_SysOperationLogArchive_Config_Company");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_SysOperationLogArchive_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_SysOperationLogArchive_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_SysOperationLogArchive_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_SysOperationLogArchive_Metadata_SourceList");

                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_Core_SysOperationLogArchive_Auth_User");

                    b.Navigation("Company");

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.SystemError", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.CompanyDb", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_Core_SystemError_Config_Company");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Column", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "View")
                        .WithMany("Columns")
                        .HasForeignKey("ViewID")
                        .HasConstraintName("FK_Metadata_Column_Metadata_View");

                    b.Navigation("View");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Command", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.Command", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Metadata_Command_Metadata_Parent");

                    b.HasOne("SPPC.Tadbir.Model.Auth.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_Metadata_Command_Auth_Permission");

                    b.Navigation("Parent");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.ShortcutCommand", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .HasConstraintName("FK_Config_ShortcutCommand_Auth_Permission");

                    b.Navigation("Permission");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.ValidRowPermission", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "View")
                        .WithMany()
                        .HasForeignKey("ViewID")
                        .HasConstraintName("FK_Metadata_ValidRowPermission_Metadata_View");

                    b.Navigation("View");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.LocalReport", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.Locale", "Locale")
                        .WithMany()
                        .HasForeignKey("LocaleId")
                        .HasConstraintName("FK_Reporting_LocalReport_Reporting_Locale")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Report", "Report")
                        .WithMany("LocalReports")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("FK_Reporting_LocalReport_Reporting_Report")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Locale");

                    b.Navigation("Report");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Parameter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Report", "Report")
                        .WithMany("Parameters")
                        .HasForeignKey("ReportId")
                        .HasConstraintName("FK_Reporting_Parameter_Reporting_Report")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Report");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Report", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Auth.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .HasConstraintName("FK_Reporting_Report_Auth_CreatedBy")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Report", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Reporting_Report_Reporting_Parent");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.ReportView", "View")
                        .WithMany("Reports")
                        .HasForeignKey("ViewId")
                        .HasConstraintName("FK_Reporting_Report_Metadata_ReportView");

                    b.Navigation("CreatedBy");

                    b.Navigation("Parent");

                    b.Navigation("View");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.SystemIssue", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.SystemIssue", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Reporting_SystemIssue_Reporting_Parent");

                    b.HasOne("SPPC.Tadbir.Model.Auth.Permission", "Permission")
                        .WithMany()
                        .HasForeignKey("PermissionID")
                        .HasConstraintName("FK_Reporting_SystemIssue_Auth_Permission");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.View", "View")
                        .WithMany()
                        .HasForeignKey("ViewId")
                        .HasConstraintName("FK_Reporting_SystemIssue_Metadata_View");

                    b.Navigation("Parent");

                    b.Navigation("Permission");

                    b.Navigation("View");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Permission", b =>
                {
                    b.Navigation("RolePermissions");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.PermissionGroup", b =>
                {
                    b.Navigation("Permissions");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.Role", b =>
                {
                    b.Navigation("RoleCompanies");

                    b.Navigation("RolePermissions");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.User", b =>
                {
                    b.Navigation("Person");

                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.CompanyDb", b =>
                {
                    b.Navigation("RoleCompanies");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Command", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.ReportView", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.View", b =>
                {
                    b.Navigation("Columns");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Report", b =>
                {
                    b.Navigation("LocalReports");

                    b.Navigation("Parameters");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.SystemIssue", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
