// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SPPC.Tadbir.Persistence;

namespace SPPC.Tadbir.Web.Api.Migrations
{
    [DbContext(typeof(TadbirContext))]
    [Migration("20231020112534_add-branch")]
    partial class addbranch
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleBranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "BranchId");

                    b.HasIndex("BranchId");

                    b.ToTable("RoleBranch", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleFiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("RoleId", "FiscalPeriodId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("RoleFiscalPeriod", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WidgetId");

                    b.ToTable("RoleWidget", "Auth");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int");

                    b.Property<string>("ApprovedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmedByName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("IssuedById")
                        .HasColumnType("int");

                    b.Property<string>("IssuedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("PayReceive", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PayReceiveAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveCashAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankOrderNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBank")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("PayReceiveId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.ToTable("PayReceiveCashAccount", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PayReceiveVoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("PayReceiveId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("VoucherLineId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasAlternateKey("PayReceiveId", "VoucherLineId");

                    b.HasIndex("VoucherLineId")
                        .IsUnique();

                    b.ToTable("PayReceiveVoucherLine", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SourceAppID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("SourceApp", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserCashRegisterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CashRegisterId");

                    b.ToTable("UserCashRegister", "CashFlow");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("BankName")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<string>("EndNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsArchived")
                        .HasColumnType("bit");

                    b.Property<DateTime>("IssueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadStartNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nchar(16)")
                        .IsFixedLength(true);

                    b.Property<string>("SeriesNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("StartNo")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TextNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.ToTable("CheckBook", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CheckBookPageID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CheckBookId")
                        .HasColumnType("int");

                    b.Property<int?>("CheckId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("SayyadNo")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("SerialNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CheckBookId");

                    b.ToTable("CheckBookPage", "Check");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LabelSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CustomFormID")
                        .HasColumnType("int");

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LocaleId")
                        .HasColumnType("int");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SettingID")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CustomFormID");

                    b.HasIndex("SettingID");

                    b.ToTable("LabelSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LogSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int")
                        .HasColumnName("OperationID");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int")
                        .HasColumnName("SourceID");

                    b.Property<int>("SourceTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SourceTypeID");

                    b.Property<int>("SubsystemId")
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID");

                    b.HasKey("Id");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceTypeId");

                    b.HasIndex("SubsystemId");

                    b.ToTable("LogSetting", "Config");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(1334),
                            OperationId = 1,
                            RowGuid = new Guid("99335137-b88e-44e3-a434-be0ff0bc4ca5"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 2,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3716),
                            OperationId = 2,
                            RowGuid = new Guid("bfbb6039-5a2a-4a27-bd41-1ab7077688e5"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 3,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3725),
                            OperationId = 3,
                            RowGuid = new Guid("818d410a-b30c-4b7d-aa27-58e52e648bef"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 4,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3731),
                            OperationId = 4,
                            RowGuid = new Guid("fa4565eb-c1cd-46d0-85f4-09f81dacba31"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 5,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3736),
                            OperationId = 5,
                            RowGuid = new Guid("8af304fd-4879-4973-ac06-2da646dfb557"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 6,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3751),
                            OperationId = 6,
                            RowGuid = new Guid("795d7308-7578-4ae1-ae2f-e600f64d3e59"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 7,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3817),
                            OperationId = 21,
                            RowGuid = new Guid("1f57fc17-9c58-48d9-8590-7b6369dcbfb0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 8,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3834),
                            OperationId = 54,
                            RowGuid = new Guid("8a892dce-1f69-4932-b036-ffd8f8c6a347"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 9,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3839),
                            OperationId = 58,
                            RowGuid = new Guid("32abf0de-a8d5-4058-906e-4004521c96cb"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 10,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3845),
                            OperationId = 1,
                            RowGuid = new Guid("614b4493-feec-4ef7-b414-20f0d97b565c"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 11,
                            EntityTypeId = 2,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3851),
                            OperationId = 7,
                            RowGuid = new Guid("c1bd1e2b-98e5-4997-b9c2-e0b2761a8279"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 12,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3856),
                            OperationId = 1,
                            RowGuid = new Guid("ade2c37a-c235-4446-88ed-1db6d09d1a57"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 13,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3861),
                            OperationId = 2,
                            RowGuid = new Guid("7371c06f-dd0e-47dc-98d9-69a365d7e808"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 14,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3866),
                            OperationId = 3,
                            RowGuid = new Guid("e62edf53-59ef-44cb-bea9-b1bbdb46e371"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 15,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3871),
                            OperationId = 4,
                            RowGuid = new Guid("6ea3aed4-0fd4-41d4-b561-eb2028e9fece"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 16,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3880),
                            OperationId = 5,
                            RowGuid = new Guid("797fbcdc-a030-4d88-bde0-fb3c020d6a40"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 17,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3885),
                            OperationId = 6,
                            RowGuid = new Guid("4b607b9e-063a-4943-a864-8c73669702d2"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 18,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3892),
                            OperationId = 21,
                            RowGuid = new Guid("08382da0-d9ae-422a-a43f-119fe48c0778"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 19,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3898),
                            OperationId = 54,
                            RowGuid = new Guid("4c294fd7-6c4d-4f58-9ca7-ac0375a26d5b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 20,
                            EntityTypeId = 4,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3902),
                            OperationId = 58,
                            RowGuid = new Guid("1de492d9-b5e3-4a66-8ea0-ea121a49bfe4"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 21,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3907),
                            OperationId = 1,
                            RowGuid = new Guid("7708e5ef-7c7e-43e9-99d2-30e6c4a19ece"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 22,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3913),
                            OperationId = 2,
                            RowGuid = new Guid("9f9a506d-4517-4df6-80c9-159b8438d716"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 23,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3918),
                            OperationId = 3,
                            RowGuid = new Guid("b40caac3-d724-473d-89c0-5c59c9ee06ba"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 24,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3926),
                            OperationId = 4,
                            RowGuid = new Guid("42cf6e34-5c24-497f-b011-d5a278e45c8a"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 25,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3931),
                            OperationId = 5,
                            RowGuid = new Guid("1d33f196-849c-4c1e-ae8b-a19c196d4cf6"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 26,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3935),
                            OperationId = 6,
                            RowGuid = new Guid("557e60f0-4324-42ee-a75c-2c3288348051"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 27,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3940),
                            OperationId = 21,
                            RowGuid = new Guid("1899ad5b-e558-4d84-932d-9b87bdf16464"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 28,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3945),
                            OperationId = 35,
                            RowGuid = new Guid("edf14e96-4f2c-4478-ae99-70497770ab58"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 29,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3949),
                            OperationId = 54,
                            RowGuid = new Guid("f0923f12-a283-4ae4-b0b2-2515500487f5"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 30,
                            EntityTypeId = 5,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3954),
                            OperationId = 58,
                            RowGuid = new Guid("920854a0-8550-42db-8857-6a900c37ac35"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 31,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3960),
                            OperationId = 1,
                            RowGuid = new Guid("4554e570-b24b-490a-b534-1e8aa15bfe9b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 32,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3967),
                            OperationId = 2,
                            RowGuid = new Guid("f2c555e4-1d13-4bd6-9a08-ee8160566a29"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 33,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3972),
                            OperationId = 3,
                            RowGuid = new Guid("aca06755-af1d-46f6-bece-4f4630798f92"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 34,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3978),
                            OperationId = 4,
                            RowGuid = new Guid("cd9d13e2-5841-4faf-8bc4-8199da04c91f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 35,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3983),
                            OperationId = 5,
                            RowGuid = new Guid("6665adc0-fd2c-4e14-92e6-5feda99388dc"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 36,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3988),
                            OperationId = 6,
                            RowGuid = new Guid("456f68cf-0b3e-42ed-8925-9616a364e9df"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 37,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(3992),
                            OperationId = 21,
                            RowGuid = new Guid("f283f917-0b6d-4ba8-8744-68c15cee60eb"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 38,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4034),
                            OperationId = 54,
                            RowGuid = new Guid("7cc30537-3acc-48a9-b2e9-0ed1b6dc2d61"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 39,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4041),
                            OperationId = 58,
                            RowGuid = new Guid("505dd444-02c5-4c6b-bb3f-968224fb31eb"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 40,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4049),
                            OperationId = 1,
                            RowGuid = new Guid("aa195753-5f03-44a5-a269-c2e2dc5459e8"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 41,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4054),
                            OperationId = 2,
                            RowGuid = new Guid("92ce0e71-f063-4d1f-b229-8aeee8a999fa"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 42,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4059),
                            OperationId = 3,
                            RowGuid = new Guid("080c8d51-55d5-4046-aab6-c206952dd819"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 43,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4063),
                            OperationId = 4,
                            RowGuid = new Guid("f94c3583-3999-443c-9435-b0fbb46bb170"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 44,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4068),
                            OperationId = 5,
                            RowGuid = new Guid("32c39141-4f28-4cdb-9cde-1a8d24f9160b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 45,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4073),
                            OperationId = 6,
                            RowGuid = new Guid("c21489c5-587f-49d7-a9c4-997e2a98b209"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 46,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4078),
                            OperationId = 21,
                            RowGuid = new Guid("11a65af3-16f8-4e01-aebe-5a37ceee0093"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 47,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4084),
                            OperationId = 40,
                            RowGuid = new Guid("7b349cd6-f72d-4963-bb07-1a291e47317f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 48,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4091),
                            OperationId = 41,
                            RowGuid = new Guid("7e39a60c-cbb3-4078-a9f2-c3f7f951299b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 49,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4096),
                            OperationId = 42,
                            RowGuid = new Guid("0eafa7ad-f2f8-4e9e-b777-bd66a8576c74"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 50,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4101),
                            OperationId = 43,
                            RowGuid = new Guid("dce9a5b4-4726-40f3-9a52-b33b9b392538"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 51,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4106),
                            OperationId = 44,
                            RowGuid = new Guid("30e45c52-edb3-4633-b8a0-a94835a0b984"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 52,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4111),
                            OperationId = 45,
                            RowGuid = new Guid("a707e536-17a4-4e47-8f99-4f50e8466d52"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 53,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4116),
                            OperationId = 54,
                            RowGuid = new Guid("1cd921a4-551c-4280-899e-38bd9a7637ff"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 54,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4121),
                            OperationId = 55,
                            RowGuid = new Guid("8e369246-26b4-422f-99c1-ca19cb9b6075"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 55,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4126),
                            OperationId = 56,
                            RowGuid = new Guid("acfa38db-1c06-405d-813b-eb5f8fd24ded"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 56,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4133),
                            OperationId = 58,
                            RowGuid = new Guid("99f2099a-d382-4e7d-8e5f-f440e17584d3"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 57,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4138),
                            OperationId = 1,
                            RowGuid = new Guid("5853b37f-1eff-4898-ad73-5e9a2fec6fc1"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 58,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4144),
                            OperationId = 2,
                            RowGuid = new Guid("da211346-f5c4-4c6a-87df-4148ec4bc747"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 59,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4148),
                            OperationId = 3,
                            RowGuid = new Guid("b30074df-1fe6-4f89-898e-b7d2e703b750"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 60,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4153),
                            OperationId = 4,
                            RowGuid = new Guid("68258e19-8121-40ad-9516-eaa01bd08000"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 61,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4159),
                            OperationId = 5,
                            RowGuid = new Guid("345f2017-a7a4-4421-b391-cfdfa486827d"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 62,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4164),
                            OperationId = 6,
                            RowGuid = new Guid("1d040889-dc4d-4ba5-812b-e6f9495342a1"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 63,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4170),
                            OperationId = 21,
                            RowGuid = new Guid("ab703b1b-c03f-46c3-8dc2-52d07033bd99"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 64,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4178),
                            OperationId = 54,
                            RowGuid = new Guid("2e93b518-6b6b-403b-b09a-e8e9a2aa1790"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 65,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4183),
                            OperationId = 58,
                            RowGuid = new Guid("36e984ee-e0e3-469e-978d-76bb27704271"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 66,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4189),
                            OperationId = 1,
                            RowGuid = new Guid("cf9c370f-41cc-4607-968a-dd63ba701e9e"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 67,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4194),
                            OperationId = 2,
                            RowGuid = new Guid("7ade049b-bac3-4b0f-8c48-efe02a085a33"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 68,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4241),
                            OperationId = 3,
                            RowGuid = new Guid("ce0368bb-f882-4fb8-ae2d-9fba3599b946"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 69,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4247),
                            OperationId = 4,
                            RowGuid = new Guid("96b8524c-5fad-4690-bd2e-367c0cd9f979"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 70,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4252),
                            OperationId = 5,
                            RowGuid = new Guid("83c178f5-b16d-44c8-b79b-c52f9da21749"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 71,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4257),
                            OperationId = 6,
                            RowGuid = new Guid("b674f24a-85b2-43f8-bf44-a3dbead87c7a"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 72,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4265),
                            OperationId = 21,
                            RowGuid = new Guid("0ca6da3a-fb15-4048-8cf3-de5ad97d6134"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 73,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4271),
                            OperationId = 35,
                            RowGuid = new Guid("a6e28869-ece5-4387-80dd-4b6e7a51225f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 74,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4275),
                            OperationId = 54,
                            RowGuid = new Guid("a7020ab3-7e02-4248-b6d8-d4c530be6041"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 75,
                            EntityTypeId = 10,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4280),
                            OperationId = 58,
                            RowGuid = new Guid("230742ca-6b4b-4a37-8b51-8e74e23bb28f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 76,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4285),
                            OperationId = 1,
                            RowGuid = new Guid("a6c5c0bd-f32a-4d97-9635-de6bb3da686e"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 77,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4290),
                            OperationId = 4,
                            RowGuid = new Guid("792e019d-b25a-4340-a9ba-3b3615182509"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 78,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4295),
                            OperationId = 5,
                            RowGuid = new Guid("ce3a5685-e371-4bcd-8cdc-5ca079cf311d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 79,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4299),
                            OperationId = 6,
                            RowGuid = new Guid("8d102fa2-3219-461a-a5bd-7e080cb0742f"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 80,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4307),
                            OperationId = 8,
                            RowGuid = new Guid("f40e2554-98f6-4897-a0f4-c749de106644"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 81,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4311),
                            OperationId = 30,
                            RowGuid = new Guid("c613136a-e003-4763-a562-5dce1ae6778e"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 82,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4316),
                            OperationId = 54,
                            RowGuid = new Guid("ccab9289-8ea7-422f-85a9-7791b8b1e943"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 83,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4321),
                            OperationId = 58,
                            RowGuid = new Guid("65112848-5a71-40f6-bab3-0c72d7ff0ed6"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 84,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4326),
                            OperationId = 1,
                            RowGuid = new Guid("62043231-3a6b-45e3-8df7-5eaadee34271"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 85,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4331),
                            OperationId = 2,
                            RowGuid = new Guid("63ba312b-93cf-4c74-9e56-be308c4d4aa1"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 86,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4336),
                            OperationId = 3,
                            RowGuid = new Guid("195fcf23-e7e3-4fcd-b197-1b3122a263ce"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 87,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4340),
                            OperationId = 4,
                            RowGuid = new Guid("77be6bc7-ae02-4108-b11a-0a11882a979b"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 88,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4348),
                            OperationId = 5,
                            RowGuid = new Guid("8f19c05d-c992-4916-a9e4-b88aec57dee0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 89,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4352),
                            OperationId = 6,
                            RowGuid = new Guid("2d8d4d34-d260-4375-9d07-bd229cad38ea"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 90,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4357),
                            OperationId = 21,
                            RowGuid = new Guid("2400d4f5-6556-46c8-b415-28e0dfbf4152"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 91,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4362),
                            OperationId = 54,
                            RowGuid = new Guid("0176cddc-8b34-402e-8585-0536cbc86e01"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 92,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4366),
                            OperationId = 58,
                            RowGuid = new Guid("374b1c27-fe99-481e-825a-ac4a98845bd0"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 93,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4371),
                            OperationId = 1,
                            RowGuid = new Guid("6b5ae194-0eb6-4b73-9af7-781ef9318059"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 94,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4376),
                            OperationId = 7,
                            RowGuid = new Guid("c438bacb-c2fa-47f4-a5e9-fb88eae0d196"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 95,
                            EntityTypeId = 15,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4381),
                            OperationId = 31,
                            RowGuid = new Guid("f1b5788d-69a8-453b-b639-644503cd61ff"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 96,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4388),
                            OperationId = 1,
                            RowGuid = new Guid("bbd5d2bd-7e25-48f8-bb90-450f902c1335"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 97,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4393),
                            OperationId = 2,
                            RowGuid = new Guid("6b9ad4bb-99bf-4537-ba69-75bd2cbb4ed2"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 98,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4398),
                            OperationId = 3,
                            RowGuid = new Guid("6bd613fe-5718-40fd-b41c-98ac4a37a383"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 99,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4403),
                            OperationId = 4,
                            RowGuid = new Guid("ac4f17d8-156c-4835-839a-c3fdf2e17c2c"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4408),
                            OperationId = 6,
                            RowGuid = new Guid("461a5ff3-4844-4c5a-abb3-2375124d98f9"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 101,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4413),
                            OperationId = 11,
                            RowGuid = new Guid("84333f35-07d6-45ba-9ce3-2db751431711"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 102,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4418),
                            OperationId = 12,
                            RowGuid = new Guid("aeea6023-80aa-48f1-8cc2-944303929184"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 103,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4423),
                            OperationId = 13,
                            RowGuid = new Guid("a9cb08d6-77f7-4368-8751-c931401874e9"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 104,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4468),
                            OperationId = 14,
                            RowGuid = new Guid("dd5ae92a-a933-4ea2-ae40-e18f8b1da41f"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 105,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4473),
                            OperationId = 15,
                            RowGuid = new Guid("411add6f-f337-40c5-8242-a9d16e90f68d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 106,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4478),
                            OperationId = 16,
                            RowGuid = new Guid("a01125a4-73ea-42da-821c-97ec89f40cad"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 107,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4483),
                            OperationId = 17,
                            RowGuid = new Guid("9a46cad5-152c-4a2c-9870-d024f11c16ae"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 108,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4488),
                            OperationId = 18,
                            RowGuid = new Guid("b6deb4c8-cb6b-4bc7-9e95-134db48f064c"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 109,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4492),
                            OperationId = 21,
                            RowGuid = new Guid("5d280208-ac97-46a3-b6e2-8d062069afd9"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 110,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4497),
                            OperationId = 36,
                            RowGuid = new Guid("b006ec0b-5eb1-462c-b256-ab07bd3b10f0"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 111,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4502),
                            OperationId = 37,
                            RowGuid = new Guid("a2437ae4-e108-4de2-af1d-685cd2c9f335"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 112,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4509),
                            OperationId = 38,
                            RowGuid = new Guid("7f2be45b-a83a-4290-8cfc-df80af36566d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 113,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4514),
                            OperationId = 39,
                            RowGuid = new Guid("cb6b8ea7-218a-4057-ac8d-bd72b88c20d7"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 114,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4519),
                            OperationId = 46,
                            RowGuid = new Guid("be69da93-7ecd-47b5-bb08-b2b41f48df4d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 115,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4524),
                            OperationId = 47,
                            RowGuid = new Guid("0d0375a2-180a-44d6-ac62-092ea4d48ebf"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 116,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4529),
                            OperationId = 48,
                            RowGuid = new Guid("087fc96d-da99-429f-a812-16696c48504c"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 117,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4535),
                            OperationId = 49,
                            RowGuid = new Guid("1859b424-6ef3-4b9a-b72c-ba7359d47e1e"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 118,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4539),
                            OperationId = 50,
                            RowGuid = new Guid("a6554520-db2e-4391-ab3c-338194754a7d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 119,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4544),
                            OperationId = 51,
                            RowGuid = new Guid("15d9b742-5f1b-449c-acb2-b7ce72faef60"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 120,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4551),
                            OperationId = 58,
                            RowGuid = new Guid("391152b6-0aa1-4f6b-bca9-fc4bfa4b64c6"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 121,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4556),
                            OperationId = 1,
                            RowGuid = new Guid("fc45e685-52d9-4235-9ea0-1b2c75572bb2"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 122,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4561),
                            OperationId = 2,
                            RowGuid = new Guid("c76b2c4a-6cfd-4066-8dbe-e0755b97f6c6"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 123,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4565),
                            OperationId = 3,
                            RowGuid = new Guid("cb91a6fb-3501-4cc5-9b81-48c54f801b47"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 124,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4570),
                            OperationId = 4,
                            RowGuid = new Guid("e79fc08c-f58a-4c77-bc6f-a06c3c074407"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 125,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4575),
                            OperationId = 6,
                            RowGuid = new Guid("8aa4023d-7e3d-422f-ba33-78a30848fe18"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 126,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4579),
                            OperationId = 11,
                            RowGuid = new Guid("ea3f136c-1ced-4beb-9061-100eb802b84c"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 127,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4585),
                            OperationId = 12,
                            RowGuid = new Guid("77108330-fb2a-4bf9-a8cc-aa057a42ad59"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 128,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4592),
                            OperationId = 21,
                            RowGuid = new Guid("c1326661-309a-49ba-88c4-0a36c7b9766a"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 129,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4597),
                            OperationId = 36,
                            RowGuid = new Guid("7a18b877-b8c8-4448-9df6-d98ba2d44f7a"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 130,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4674),
                            OperationId = 37,
                            RowGuid = new Guid("9533237e-0d59-4e42-bc6a-27a221fa5a2d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 131,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4681),
                            OperationId = 38,
                            RowGuid = new Guid("f15193ba-e109-444c-b2cc-84e7cbf5aba1"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 132,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4685),
                            OperationId = 39,
                            RowGuid = new Guid("88751ae1-cd94-4c6c-acc0-9c06176d148e"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 133,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4690),
                            OperationId = 46,
                            RowGuid = new Guid("f7f4b891-f570-4c74-9905-880143744bcc"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 134,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4695),
                            OperationId = 47,
                            RowGuid = new Guid("7d468e18-b186-45fc-9df1-5c9b4010018c"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 135,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4700),
                            OperationId = 52,
                            RowGuid = new Guid("a49c41e9-e0f7-4573-afbe-733b5cd57870"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 136,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4707),
                            OperationId = 53,
                            RowGuid = new Guid("a149876e-a11e-4e4a-95ec-5cab69eefa0a"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 137,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4712),
                            OperationId = 58,
                            RowGuid = new Guid("67e3a873-ce64-47da-b765-30c1d606cb22"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 138,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4718),
                            OperationId = 2,
                            RowGuid = new Guid("388e3ec0-92af-451b-aa69-8adcaf5074bc"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 139,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4723),
                            OperationId = 3,
                            RowGuid = new Guid("7bdf1e0a-a920-424b-827b-83eb60653fe1"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 140,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4728),
                            OperationId = 4,
                            RowGuid = new Guid("409972aa-1f65-4ccd-96ab-e12ee114f82d"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 141,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4733),
                            OperationId = 6,
                            RowGuid = new Guid("9e7c50ea-1259-457a-913a-877aa8d7952b"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 142,
                            EntityTypeId = 19,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4737),
                            OperationId = 54,
                            RowGuid = new Guid("2d8ccc1b-1472-48e2-bf21-5f1e9c9dca92"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 143,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4742),
                            OperationId = 1,
                            RowGuid = new Guid("f79e2a33-57f0-402b-adb6-8cf98e105f8f"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 144,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4749),
                            OperationId = 2,
                            RowGuid = new Guid("b2e74a3b-a1ae-4ed2-be24-9c1e405c2e22"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 145,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4754),
                            OperationId = 3,
                            RowGuid = new Guid("45941251-7072-4c97-9bf5-660f523a0949"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 146,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4759),
                            OperationId = 4,
                            RowGuid = new Guid("6a2738e1-1dfb-49fa-8e32-de79188e4a98"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 147,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4764),
                            OperationId = 5,
                            RowGuid = new Guid("d24d1f70-a57d-437d-974f-7d2b36f77323"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 148,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4769),
                            OperationId = 6,
                            RowGuid = new Guid("ab43c0c6-4e91-40c7-b5f6-601e094baa97"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 149,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4774),
                            OperationId = 54,
                            RowGuid = new Guid("18a077bf-27be-4818-867d-773cdb8b795f"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 150,
                            EntityTypeId = 20,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4779),
                            OperationId = 58,
                            RowGuid = new Guid("5818494f-e85c-44be-9746-80e72df36145"),
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 151,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4785),
                            OperationId = 1,
                            RowGuid = new Guid("9735d25b-6068-4da4-86cc-fc86f96bb146"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 152,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4793),
                            OperationId = 5,
                            RowGuid = new Guid("2933ef0a-1195-4d61-babc-0c46ddcd14f5"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 153,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4798),
                            OperationId = 6,
                            RowGuid = new Guid("0f770f60-dec5-40ff-963f-019f4ca82eac"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 154,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4803),
                            OperationId = 54,
                            RowGuid = new Guid("bba594ac-4234-45b3-9ea1-94a12e1f6696"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 155,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4808),
                            OperationId = 58,
                            RowGuid = new Guid("4a6e8f94-c4f4-46bf-bccd-1c6c83cabc33"),
                            SourceId = 1,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 156,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4814),
                            OperationId = 1,
                            RowGuid = new Guid("74e2c9a2-c9ba-42f5-a39f-ebc094359825"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 157,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4819),
                            OperationId = 5,
                            RowGuid = new Guid("bb094faf-eb42-4895-a2ff-095be2e42aae"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 158,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4824),
                            OperationId = 6,
                            RowGuid = new Guid("796d6ef8-fbc9-4e18-8ebf-29a48a730716"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 159,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4830),
                            OperationId = 54,
                            RowGuid = new Guid("efed4b0f-5177-4491-b20c-8a0f1a2f93c1"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 160,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4837),
                            OperationId = 58,
                            RowGuid = new Guid("a1b83502-418f-4b34-8579-e648dac226c9"),
                            SourceId = 2,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 161,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4842),
                            OperationId = 1,
                            RowGuid = new Guid("0fae879d-e0c9-4781-a980-86c9504b215f"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 162,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4847),
                            OperationId = 5,
                            RowGuid = new Guid("d079e7b1-9b0e-4769-815f-22fcc9bd8798"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 163,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4852),
                            OperationId = 6,
                            RowGuid = new Guid("165c92ed-46d2-4173-9f13-76388c123c3d"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 164,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4856),
                            OperationId = 54,
                            RowGuid = new Guid("931bc235-152b-4c93-a2c2-8d1189807589"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 165,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4897),
                            OperationId = 58,
                            RowGuid = new Guid("a6c7acbe-55dd-400f-b48c-5df5d4dadc27"),
                            SourceId = 3,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 166,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4903),
                            OperationId = 1,
                            RowGuid = new Guid("ca80d8a8-5250-435b-9e7e-0629e544e136"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 167,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4907),
                            OperationId = 5,
                            RowGuid = new Guid("d8d7f568-30d6-48b8-95c8-a84098a05dd5"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 168,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4915),
                            OperationId = 6,
                            RowGuid = new Guid("1ab1f559-3338-4629-bc5a-080dff13afea"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 169,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4919),
                            OperationId = 54,
                            RowGuid = new Guid("9d30c5a0-1186-4db4-9e6f-ebb4c8516adc"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 170,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4926),
                            OperationId = 58,
                            RowGuid = new Guid("592fca7f-a121-4238-b930-ce5b742dd09e"),
                            SourceId = 4,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 171,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4931),
                            OperationId = 1,
                            RowGuid = new Guid("c7268094-558a-496c-a631-5eadcd339642"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 172,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4936),
                            OperationId = 5,
                            RowGuid = new Guid("13728879-86d1-40b3-aadf-e718466745f8"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 173,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4943),
                            OperationId = 6,
                            RowGuid = new Guid("c72e087b-c6b1-4e29-9c72-8ae5a7cb790e"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 174,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4949),
                            OperationId = 54,
                            RowGuid = new Guid("6d83a785-4b23-4d46-ad27-de0ae34e406a"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 175,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4956),
                            OperationId = 58,
                            RowGuid = new Guid("2011081f-134a-4f64-88d3-ad97a4aeac25"),
                            SourceId = 5,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 176,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4963),
                            OperationId = 1,
                            RowGuid = new Guid("f32ef53e-d3ee-43be-b537-bc14ac526bab"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 177,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4968),
                            OperationId = 5,
                            RowGuid = new Guid("fad543b8-ecf1-4234-8634-2d3b108f89e4"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 178,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4973),
                            OperationId = 6,
                            RowGuid = new Guid("9e5b705f-e82a-430a-b367-b710eda56753"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 179,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4978),
                            OperationId = 54,
                            RowGuid = new Guid("f91ed056-29a5-42a8-aaa3-11964f2d81f7"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 180,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4983),
                            OperationId = 58,
                            RowGuid = new Guid("8aa1d91d-0e8c-459a-9b47-7b6036b76c12"),
                            SourceId = 6,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 181,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4988),
                            OperationId = 32,
                            RowGuid = new Guid("1aedb6cd-03e3-4755-93f8-34b84cb28abd"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 182,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4993),
                            OperationId = 33,
                            RowGuid = new Guid("e33bb8d8-98ce-4808-91cf-d9965b7d3387"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 183,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(4997),
                            OperationId = 34,
                            RowGuid = new Guid("9f1dcdce-6baa-43bf-986e-5d29f7030e93"),
                            SourceId = 9,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 184,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5006),
                            OperationId = 1,
                            RowGuid = new Guid("409849f9-3693-43a6-a1fc-f437ad0955b2"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 185,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5011),
                            OperationId = 5,
                            RowGuid = new Guid("6476dabc-6e31-4885-bbbd-31b0118cf27d"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 186,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5016),
                            OperationId = 6,
                            RowGuid = new Guid("ecf533b5-a239-4554-b623-4e4be88f5d49"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 187,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5021),
                            OperationId = 54,
                            RowGuid = new Guid("cf3d51da-8721-4837-a463-4e7ec5b53e41"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 188,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5025),
                            OperationId = 58,
                            RowGuid = new Guid("e7237754-4c9e-40dc-a440-9cba0a3aa89f"),
                            SourceId = 10,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 189,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5030),
                            OperationId = 1,
                            RowGuid = new Guid("7cefdadd-bce7-487e-b9dd-81c7eb38a5d4"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 190,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5035),
                            OperationId = 7,
                            RowGuid = new Guid("71c68620-3709-4134-aa63-2070afc8d5d7"),
                            SourceId = 11,
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 191,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5040),
                            OperationId = 1,
                            RowGuid = new Guid("fe21ed5d-3c6c-44e6-9a87-c66e66a90107"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 192,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5047),
                            OperationId = 5,
                            RowGuid = new Guid("f9a595aa-9a2a-453b-b448-c2648b0d0da7"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 193,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5052),
                            OperationId = 6,
                            RowGuid = new Guid("34ba4aeb-bda9-4d22-9dd2-3a31d8d2e357"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 194,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5057),
                            OperationId = 54,
                            RowGuid = new Guid("5271e9f4-ee2c-4057-87a3-3102f1fc0397"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 195,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5062),
                            OperationId = 58,
                            RowGuid = new Guid("af827768-1384-4dfa-b86b-a698227d6182"),
                            SourceId = 12,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 196,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5066),
                            OperationId = 1,
                            RowGuid = new Guid("a19146fe-90ef-414a-ba65-83ff01a7e7ac"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 197,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5071),
                            OperationId = 5,
                            RowGuid = new Guid("fc25294a-3f51-4379-8595-b3cbd6c60009"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 198,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5076),
                            OperationId = 6,
                            RowGuid = new Guid("e96380cc-1d57-434c-80ec-6d2f7b85a7ae"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 199,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5081),
                            OperationId = 54,
                            RowGuid = new Guid("403efe73-4865-4172-999a-67a6f8827e3b"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 200,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5124),
                            OperationId = 58,
                            RowGuid = new Guid("b33e69e3-9f7f-429e-9641-ecf3d301be2a"),
                            SourceId = 13,
                            SourceTypeId = 3,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 201,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5129),
                            OperationId = 1,
                            RowGuid = new Guid("f4cd16d1-cba2-4650-94ed-62afd0a36318"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 202,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5135),
                            OperationId = 2,
                            RowGuid = new Guid("6b1e0a6d-8421-40e9-a299-8c9645528fd0"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 203,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5139),
                            OperationId = 3,
                            RowGuid = new Guid("492f25ec-0d1a-4321-9d6d-e8c36bd59f02"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 204,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5144),
                            OperationId = 4,
                            RowGuid = new Guid("4c03e3e0-646f-4e46-9581-689391143451"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 205,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5149),
                            OperationId = 5,
                            RowGuid = new Guid("b4c388fc-5c09-4b0d-92fd-8ed895230d24"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 206,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5154),
                            OperationId = 6,
                            RowGuid = new Guid("5e60e8d2-9b80-434d-a1de-92bc1e646359"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 207,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5158),
                            OperationId = 58,
                            RowGuid = new Guid("356a41cd-4c90-481c-b20a-f6bd06c9f4d3"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 208,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5166),
                            OperationId = 60,
                            RowGuid = new Guid("3dc4bd15-db84-428c-8bce-c6f6762d2cdd"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 209,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5171),
                            OperationId = 61,
                            RowGuid = new Guid("7ae5c802-eb90-4712-ab1b-58a814a4429e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 210,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5176),
                            OperationId = 62,
                            RowGuid = new Guid("d3615bc1-c84c-4595-b030-91ce89fa3a29"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 211,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5180),
                            OperationId = 63,
                            RowGuid = new Guid("bd87a325-d02a-49d0-85f8-6ba7db3e10ed"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 212,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5185),
                            OperationId = 64,
                            RowGuid = new Guid("6093980f-2af1-4dd1-b34a-fde782af3828"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 213,
                            EntityTypeId = 21,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5191),
                            OperationId = 65,
                            RowGuid = new Guid("4d89fd77-ddd1-4422-8882-47ba00670aa4"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 214,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5196),
                            OperationId = 1,
                            RowGuid = new Guid("f78622b3-4b0f-4025-9c18-5660c2ccb8c5"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 215,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5200),
                            OperationId = 2,
                            RowGuid = new Guid("75edc47d-c5e6-408d-b3b1-ac84692e5970"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 216,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5208),
                            OperationId = 3,
                            RowGuid = new Guid("e05336ec-bd20-41b2-ae3d-97c9a08b8784"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 217,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5213),
                            OperationId = 4,
                            RowGuid = new Guid("2c53e9b1-eab3-4f12-b0b1-4ea68207de2c"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 218,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5217),
                            OperationId = 5,
                            RowGuid = new Guid("c6e5adf8-c233-43c1-a455-44dae20c1d4c"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 219,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5222),
                            OperationId = 6,
                            RowGuid = new Guid("1c443976-6cbf-4b53-b88f-7cf3e7d8e81e"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 220,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5227),
                            OperationId = 21,
                            RowGuid = new Guid("1a99d0b5-b7b6-46aa-8e09-9443f29beaec"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 221,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5231),
                            OperationId = 54,
                            RowGuid = new Guid("44ebe68d-8441-454f-9514-14fcaa38be50"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 222,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5236),
                            OperationId = 58,
                            RowGuid = new Guid("7c2d90bf-af7e-4a23-948e-1ca9dbfc1070"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 223,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5241),
                            OperationId = 66,
                            RowGuid = new Guid("f1201520-e91c-4565-8834-7aab78a40ff4"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 224,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5249),
                            OperationId = 1,
                            RowGuid = new Guid("3e120cce-3665-4e7b-93ac-f752984e163d"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 225,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5253),
                            OperationId = 5,
                            RowGuid = new Guid("77278183-625f-484c-add6-0e109d453a99"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 226,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5258),
                            OperationId = 6,
                            RowGuid = new Guid("ccec0e3e-56d1-4e0f-a766-ddcfb5734a2d"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 227,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5263),
                            OperationId = 8,
                            RowGuid = new Guid("8cbd21ed-c253-4b0e-87cd-ebbf07a92c85"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 228,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5267),
                            OperationId = 54,
                            RowGuid = new Guid("f8d0d6d7-f638-466c-addf-527ec8a3e0b9"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 229,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5272),
                            OperationId = 58,
                            RowGuid = new Guid("aebc62d5-d586-48a4-a4a5-1e3dd83d715e"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 230,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5277),
                            OperationId = 67,
                            RowGuid = new Guid("c0f1b903-1457-4d0b-80e5-21539a94039f"),
                            SourceId = 15,
                            SourceTypeId = 3,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 231,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5282),
                            OperationId = 1,
                            RowGuid = new Guid("03028a93-11cc-4f19-a0c6-1ddd1cd036be"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 232,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5289),
                            OperationId = 2,
                            RowGuid = new Guid("906a2edd-6480-4436-80b3-daf32ba95933"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 233,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5293),
                            OperationId = 3,
                            RowGuid = new Guid("8b49cd52-4913-49c3-84d3-bb4053e58937"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 234,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5299),
                            OperationId = 4,
                            RowGuid = new Guid("8bb54fe9-5388-4555-a45e-1bc878311ee8"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 235,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5304),
                            OperationId = 5,
                            RowGuid = new Guid("f61fab36-667c-43d2-a734-9773621ac7e5"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 236,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5344),
                            OperationId = 6,
                            RowGuid = new Guid("f48e53d1-1124-4300-bb8b-17aa812b48fc"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 237,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5351),
                            OperationId = 21,
                            RowGuid = new Guid("9c54b41a-4e1c-49f6-8a39-96197a4758a9"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 238,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5357),
                            OperationId = 54,
                            RowGuid = new Guid("a4a2c964-54ac-4c5e-9c02-34b0d4a97ec3"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 239,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5362),
                            OperationId = 58,
                            RowGuid = new Guid("3f4a095a-b343-4fdc-a8ab-07644f2fc943"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 240,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5370),
                            OperationId = 1,
                            RowGuid = new Guid("d33cbf05-1198-4db2-bec8-336a6d1258f2"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 241,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5375),
                            OperationId = 2,
                            RowGuid = new Guid("17374ecc-d4e1-45ae-ad12-7b0ffa3157b6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 242,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5380),
                            OperationId = 3,
                            RowGuid = new Guid("d8b20329-12b2-4a57-81c6-e757e4e9bdd9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 243,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5385),
                            OperationId = 4,
                            RowGuid = new Guid("b78b52c5-cbe6-4565-94db-b7807441861f"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 244,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5390),
                            OperationId = 6,
                            RowGuid = new Guid("6ebc8232-a0e6-4aeb-a58c-055f995a9950"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 245,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5395),
                            OperationId = 13,
                            RowGuid = new Guid("d0f696e0-3a70-4425-9379-064689eb83b2"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 246,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5400),
                            OperationId = 14,
                            RowGuid = new Guid("ef61fd80-d9e0-4d18-8a67-1835b64b7d8a"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 247,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5405),
                            OperationId = 15,
                            RowGuid = new Guid("9dbc021a-9cd4-4d53-96df-f46851daa99a"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 248,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5412),
                            OperationId = 16,
                            RowGuid = new Guid("7868197b-62fd-459d-8244-7a931282040b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 249,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5417),
                            OperationId = 58,
                            RowGuid = new Guid("74fd6ebe-addc-4184-b410-434db7de6a6e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 250,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5422),
                            OperationId = 68,
                            RowGuid = new Guid("1d918c81-c6e0-424c-b97a-24137b86d3e1"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 251,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5427),
                            OperationId = 1,
                            RowGuid = new Guid("e5b565f7-37d7-4619-ad69-e6d16166cca9"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 252,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5432),
                            OperationId = 2,
                            RowGuid = new Guid("c2a2ea31-958a-4a81-8c1d-16a28225066b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 253,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5437),
                            OperationId = 3,
                            RowGuid = new Guid("92ac9daf-5694-489a-8225-999dc0026c5c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 254,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5441),
                            OperationId = 4,
                            RowGuid = new Guid("c2068b04-30c7-4489-afe7-e45ee6a319de"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 255,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5446),
                            OperationId = 6,
                            RowGuid = new Guid("688a029e-de3a-4617-b379-aafed8476cdf"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 256,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5454),
                            OperationId = 13,
                            RowGuid = new Guid("7ff1d9ab-e0d8-4c8b-8539-e567d41d41f4"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 257,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5459),
                            OperationId = 14,
                            RowGuid = new Guid("72be49ec-46fc-4fa2-a278-0dbd673cd67b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 258,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5504),
                            OperationId = 15,
                            RowGuid = new Guid("dce75606-d3e7-4bb7-a899-f433e7004cba"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 259,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5510),
                            OperationId = 16,
                            RowGuid = new Guid("e4c2c67b-81fe-4546-8739-bbf03ca3dc7d"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 260,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5514),
                            OperationId = 58,
                            RowGuid = new Guid("1a2267ef-1236-481b-aa11-321ed6219323"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 261,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5519),
                            OperationId = 68,
                            RowGuid = new Guid("38d2f0e5-41d0-496c-a8ca-fc187712f59c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 262,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5524),
                            OperationId = 69,
                            RowGuid = new Guid("2eb9486c-f93b-4c3c-9126-f0d68d30de58"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 263,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5529),
                            OperationId = 70,
                            RowGuid = new Guid("b3179aea-d8a9-41a1-ae3a-fd3cf0c8d06e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 264,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5536),
                            OperationId = 71,
                            RowGuid = new Guid("82f1e003-9072-4b3c-a290-c7e64ec6d964"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 265,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5541),
                            OperationId = 72,
                            RowGuid = new Guid("6635db86-a212-4b2b-802d-cb08c0ab332b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 266,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5545),
                            OperationId = 73,
                            RowGuid = new Guid("eeea43e5-c6b8-4dd3-b990-2e5e1368b62b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 267,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5551),
                            OperationId = 74,
                            RowGuid = new Guid("5f600597-269d-4af9-98a8-d181e872990c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 268,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5556),
                            OperationId = 69,
                            RowGuid = new Guid("8813ca69-c99b-4011-9d78-9744535fbdf2"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 269,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5560),
                            OperationId = 70,
                            RowGuid = new Guid("0fa62338-3e32-4b66-97e8-040da77936dc"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 270,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5565),
                            OperationId = 71,
                            RowGuid = new Guid("6ab56955-cd3e-4bd7-bcc7-fa8bb579fda3"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 271,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5570),
                            OperationId = 72,
                            RowGuid = new Guid("584bd2d6-1441-480b-9afc-c57cbfb85742"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 272,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5577),
                            OperationId = 73,
                            RowGuid = new Guid("73482a3d-8659-4562-a478-56bb9b5bbbe7"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 273,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5582),
                            OperationId = 74,
                            RowGuid = new Guid("b2847486-d8f2-4658-acf4-5c8c68957e91"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 274,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5587),
                            OperationId = 75,
                            RowGuid = new Guid("ceb4cf09-8760-44c3-bd7c-a935b2b436db"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 275,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5592),
                            OperationId = 76,
                            RowGuid = new Guid("a6089b06-0be8-4e8d-a7ce-cfdbce01436f"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 276,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5596),
                            OperationId = 77,
                            RowGuid = new Guid("10661ad4-b2be-41a3-8ffd-585beb1157f4"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 277,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5601),
                            OperationId = 78,
                            RowGuid = new Guid("a9393138-da3b-483d-87a6-346708f7562c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 278,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5606),
                            OperationId = 75,
                            RowGuid = new Guid("f781b8ef-5c85-4ef8-9c43-c2f71d5b281f"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 279,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5611),
                            OperationId = 76,
                            RowGuid = new Guid("b55e6bf0-75a5-4f64-a583-fea4d22326c4"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 280,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5618),
                            OperationId = 77,
                            RowGuid = new Guid("8947546e-3ed6-4c38-80cb-71d7c4e43e5f"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 281,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5623),
                            OperationId = 78,
                            RowGuid = new Guid("59433a14-e022-4ea8-ab99-05b825320bb6"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 282,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5628),
                            OperationId = 79,
                            RowGuid = new Guid("861b10c4-4157-40a8-b167-fb63333d7d6a"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 283,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5633),
                            OperationId = 80,
                            RowGuid = new Guid("71f6d655-0cf2-44ee-94db-49c85a771a46"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 284,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5637),
                            OperationId = 81,
                            RowGuid = new Guid("6552a383-038a-4fba-bb09-7eb1d09b8b6b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 285,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5642),
                            OperationId = 82,
                            RowGuid = new Guid("0d4681ee-62ab-4670-8560-b4e563e17bca"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 286,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5647),
                            OperationId = 83,
                            RowGuid = new Guid("a6b532eb-88d4-4eff-9c23-cbe4329ff93c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 287,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5651),
                            OperationId = 84,
                            RowGuid = new Guid("247cb7c8-f6b5-4375-83ad-6ab30b94cb47"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 288,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5694),
                            OperationId = 85,
                            RowGuid = new Guid("71117aba-82b9-4205-9f3c-598bd8c0412c"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 289,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5700),
                            OperationId = 86,
                            RowGuid = new Guid("95b62364-c73d-44f9-876f-f5b4d259602b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 290,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5705),
                            OperationId = 79,
                            RowGuid = new Guid("bf455255-9a7e-4037-b949-81c6ae11be51"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 291,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5709),
                            OperationId = 80,
                            RowGuid = new Guid("e7208ffd-7951-4d02-93c4-d4c30bd01490"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 292,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5714),
                            OperationId = 81,
                            RowGuid = new Guid("531b7a2e-bad9-4245-b268-2152cd2fc94e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 293,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5719),
                            OperationId = 82,
                            RowGuid = new Guid("7f00d080-49df-4938-ba9c-142f5056f0ec"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 294,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5724),
                            OperationId = 83,
                            RowGuid = new Guid("aacb682a-e208-4383-bab4-7e170463a39d"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 295,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5729),
                            OperationId = 84,
                            RowGuid = new Guid("c71e3d31-c5ae-4732-8c19-5311f9fa4688"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 296,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5736),
                            OperationId = 85,
                            RowGuid = new Guid("8556026a-bdba-4d49-be4f-437f2ff607d5"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 297,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5741),
                            OperationId = 86,
                            RowGuid = new Guid("38f40f93-27fb-4446-b0e5-e0af8d29f7bd"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 298,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5746),
                            OperationId = 87,
                            RowGuid = new Guid("8cc5c411-f725-4d40-a49d-f567a0119c2d"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 299,
                            EntityTypeId = 24,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5751),
                            OperationId = 88,
                            RowGuid = new Guid("749164cd-565e-42ef-9eb3-6dff0f90fe5b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 300,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5756),
                            OperationId = 87,
                            RowGuid = new Guid("b35c518c-052e-4b39-b26b-53c275fac05e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 301,
                            EntityTypeId = 25,
                            IsEnabled = false,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5761),
                            OperationId = 88,
                            RowGuid = new Guid("a27af9be-64b0-434c-ae83-33a76312487e"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 302,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5766),
                            OperationId = 89,
                            RowGuid = new Guid("da013806-8be0-4ad8-b364-01e7828ba230"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 303,
                            EntityTypeId = 1,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5770),
                            OperationId = 90,
                            RowGuid = new Guid("797d97a8-fa5c-4c13-859a-40a8a12a95d7"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 304,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5778),
                            OperationId = 89,
                            RowGuid = new Guid("2a3ef128-d3cc-453e-8640-bb4beb70f88f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 305,
                            EntityTypeId = 6,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5783),
                            OperationId = 90,
                            RowGuid = new Guid("21d9d397-b7d3-4505-b412-a29c7a1618c3"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 306,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5788),
                            OperationId = 89,
                            RowGuid = new Guid("2fed896c-47a9-4066-8c55-2917d0fd28f1"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 307,
                            EntityTypeId = 7,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5793),
                            OperationId = 90,
                            RowGuid = new Guid("391b38c2-e6fd-44ff-ad8e-1805be12f3a3"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 308,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5797),
                            OperationId = 89,
                            RowGuid = new Guid("3406c6c4-b2c2-4d9e-8723-913fc53fda83"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 309,
                            EntityTypeId = 9,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5802),
                            OperationId = 90,
                            RowGuid = new Guid("c2e0bf3c-618d-4de2-9ed9-eb1bfdea7b2e"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 310,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5807),
                            OperationId = 89,
                            RowGuid = new Guid("f5aaea47-7094-4400-8112-d3be66d21e2f"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 311,
                            EntityTypeId = 12,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5812),
                            OperationId = 90,
                            RowGuid = new Guid("c2bec8b9-d3d4-4d9c-ac70-9ad6c3e98110"),
                            SourceTypeId = 1,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 312,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5819),
                            OperationId = 89,
                            RowGuid = new Guid("ef22fc5f-9559-4e2a-9bad-35f88cf351bf"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 313,
                            EntityTypeId = 22,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5824),
                            OperationId = 90,
                            RowGuid = new Guid("cf6bad88-e766-4f4b-bff8-77296ac9ecf9"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 314,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5829),
                            OperationId = 89,
                            RowGuid = new Guid("386d0c59-ac93-4427-81d0-5b6c30393ec4"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 315,
                            EntityTypeId = 23,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5834),
                            OperationId = 90,
                            RowGuid = new Guid("51a501f8-b1c1-46fc-976d-75b2024187a2"),
                            SourceTypeId = 1,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 316,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5839),
                            OperationId = 5,
                            RowGuid = new Guid("ae9a056f-237c-4dcf-8fb1-89a98d0466a2"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 317,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5843),
                            OperationId = 54,
                            RowGuid = new Guid("6c14b9df-d834-4fc9-a3e9-0957bb9f21a7"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 318,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5848),
                            OperationId = 91,
                            RowGuid = new Guid("eab5fc1f-923a-4c03-81c1-710410705f5a"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 319,
                            EntityTypeId = 17,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5853),
                            OperationId = 92,
                            RowGuid = new Guid("1b665c20-db43-4136-8c6f-0a3c0499f7b1"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 320,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5861),
                            OperationId = 5,
                            RowGuid = new Guid("ae786579-c0f6-4ea9-9206-812284369354"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 321,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5866),
                            OperationId = 54,
                            RowGuid = new Guid("62c2d3bc-c065-4f6b-b581-67656ddc5575"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 322,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5870),
                            OperationId = 91,
                            RowGuid = new Guid("3ebd6e98-2ec9-43a4-bd27-bb80ec2525aa"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 323,
                            EntityTypeId = 18,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5912),
                            OperationId = 92,
                            RowGuid = new Guid("29ae507c-7f27-4b87-a0ef-ede2bba3b86d"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 324,
                            EntityTypeId = 24,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5917),
                            OperationId = 93,
                            RowGuid = new Guid("8b4c63dc-64a8-45bc-9825-c441b747df5b"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 325,
                            EntityTypeId = 25,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5922),
                            OperationId = 93,
                            RowGuid = new Guid("4a8a851d-e9a3-44f6-8b60-7ccad6a9e4e7"),
                            SourceTypeId = 2,
                            SubsystemId = 3
                        },
                        new
                        {
                            Id = 326,
                            EntityTypeId = 11,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5926),
                            OperationId = 21,
                            RowGuid = new Guid("ae347085-e223-468d-8653-9c79044ee068"),
                            SourceTypeId = 2,
                            SubsystemId = 2
                        },
                        new
                        {
                            Id = 100000,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5931),
                            OperationId = 1,
                            RowGuid = new Guid("ab4d74cb-9281-43e9-9e8c-d18bdc596184"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100001,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5938),
                            OperationId = 2,
                            RowGuid = new Guid("0e17b39b-917b-4a87-b2df-8f3944816ac6"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100002,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5943),
                            OperationId = 3,
                            RowGuid = new Guid("6634ac2d-dc52-4d4e-925a-78b48bc108b4"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100003,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5948),
                            OperationId = 4,
                            RowGuid = new Guid("bf0b3225-1540-4cd0-90e2-a24241f821dd"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100004,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5953),
                            OperationId = 5,
                            RowGuid = new Guid("20513d28-2b40-4bce-bcbe-9e892209397e"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100005,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5957),
                            OperationId = 6,
                            RowGuid = new Guid("7d2ecb7c-7d81-4175-a290-b1759f75b7d6"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100006,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5962),
                            OperationId = 21,
                            RowGuid = new Guid("ce47bba0-bafe-48a2-bffc-3055e3b3027a"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100007,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5968),
                            OperationId = 54,
                            RowGuid = new Guid("304a3a98-633a-4af7-9fcc-4334f7c380fb"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        },
                        new
                        {
                            Id = 100008,
                            EntityTypeId = 100001,
                            IsEnabled = true,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 733, DateTimeKind.Local).AddTicks(5973),
                            OperationId = 58,
                            RowGuid = new Guid("5e8af0da-2745-4948-95d6-4f8d3cc8380c"),
                            SourceTypeId = 1,
                            SubsystemId = 100000
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<string>("DescriptionKey")
                        .HasMaxLength(1028)
                        .HasColumnType("nvarchar(1028)");

                    b.Property<bool>("IsStandalone")
                        .HasColumnType("bit");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ParentID")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("ScopeType")
                        .HasColumnType("smallint");

                    b.Property<string>("Subsystem")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("TitleKey")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.HasIndex("ParentID");

                    b.ToTable("Setting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)")
                        .HasColumnName("Values");

                    b.Property<int?>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SettingId");

                    b.ToTable("UserSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ValueID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("UserValue", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NameKey")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("UserValueCategory", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.ViewSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ViewSettingID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultValues")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SettingId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ViewSetting", "Config");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StatusID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentStatus", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.DocumentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("DocumentType", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.Filter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FilterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Values")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("ViewId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Filter", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("InactiveEntityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("InactiveEntity", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLog", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationLogArchiveID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityAssociation")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("EntityCode")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime?>("EntityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EntityDescription")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int?>("EntityId")
                        .HasColumnType("int");

                    b.Property<string>("EntityName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("EntityNo")
                        .HasColumnType("int");

                    b.Property<string>("EntityReference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int?>("EntityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("OperationId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int?>("SourceId")
                        .HasColumnType("int");

                    b.Property<int?>("SourceListId")
                        .HasColumnType("int");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("EntityTypeId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OperationId");

                    b.HasIndex("SourceId");

                    b.HasIndex("SourceListId");

                    b.ToTable("OperationLogArchive", "Core");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BranchID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("((0))");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Branch", "Corporate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            Level = 0,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 665, DateTimeKind.Local).AddTicks(7352),
                            Name = "دفتر مرکزی",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            Level = 1,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 665, DateTimeKind.Local).AddTicks(8483),
                            Name = "نمایشگاه شمال تهران",
                            ParentId = 1,
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCurrencyAdjustable")
                        .HasColumnType("bit");

                    b.Property<short>("Level")
                        .HasColumnType("smallint");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TurnoverMode")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("GroupId");

                    b.HasIndex("ParentId");

                    b.ToTable("Account", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CollectionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryID")
                        .HasColumnType("int");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<bool>("MultiSelect")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<short>("TypeLevel")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CategoryID");

                    b.ToTable("AccountCollection", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCollectionAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CollectionId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("AccountCollectionAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountCollectionCategory", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "CostCenterId");

                    b.HasIndex("CostCenterId");

                    b.ToTable("AccountCostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountCurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("AccountCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountDetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "DetailAccountId");

                    b.HasIndex("DetailAccountId");

                    b.ToTable("AccountDetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Description")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("InventoryMode")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("AccountGroup", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountHolderID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountOwnerId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("HasSignature")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountOwnerId");

                    b.ToTable("AccountHolder", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountOwnerID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("AccountType")
                        .HasColumnType("int");

                    b.Property<string>("BankBranchName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("BranchIndex")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CardNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("ShabaNumber")
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("AccountOwner", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasAlternateKey("AccountId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("AccountProject", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CostCenterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("CostCenter", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<short>("DecimalCount")
                        .HasColumnType("smallint");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDefaultCurrency")
                        .HasColumnType("bit");

                    b.Property<string>("MinorUnit")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("TaxCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("Currency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CurrencyRateID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("Multiplier")
                        .HasColumnType("float");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<TimeSpan>("Time")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.ToTable("CurrencyRate", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerTaxInfoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("BuyerType")
                        .HasColumnType("int");

                    b.Property<string>("CityCode")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("CustomerFirstName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EconomicCode")
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<string>("MobileNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NationalCode")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("PerCityCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("PersonType")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNo")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ProvinceCode")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("AccountID")
                        .IsUnique();

                    b.ToTable("CustomerTaxInfo", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DetailAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("DetailAccount", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FiscalPeriodID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("FiscalPeriod", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProjectID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FullCode")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<short>("Level")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasDefaultValueSql("((0))");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ParentId");

                    b.ToTable("Project", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.TaxCurrency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TaxCurrencyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("TaxCurrency", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedById")
                        .HasColumnType("int")
                        .HasColumnName("ApprovedByID");

                    b.Property<string>("ApproverName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Association")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("ConfirmedById")
                        .HasColumnType("int")
                        .HasColumnName("ConfirmedByID");

                    b.Property<string>("ConfirmerName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int")
                        .HasColumnName("IssuedByID");

                    b.Property<int>("DailyNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsBalanced")
                        .HasColumnType("bit");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int")
                        .HasColumnName("ModifiedByID");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("ModifierName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("No")
                        .HasColumnType("int");

                    b.Property<int>("OriginId")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("SaveCount")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int")
                        .HasColumnName("StatusID");

                    b.Property<short>("SubjectType")
                        .HasColumnType("smallint");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("OriginId");

                    b.HasIndex("StatusId");

                    b.ToTable("Voucher", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherLineID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<decimal>("Credit")
                        .HasColumnType("money");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<decimal?>("CurrencyValue")
                        .HasColumnType("money");

                    b.Property<decimal>("Debit")
                        .HasColumnType("money");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<string>("FollowupNo")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Mark")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("RowNo")
                        .HasColumnType("int");

                    b.Property<int?>("SourceAppId")
                        .HasColumnType("int");

                    b.Property<short>("TypeId")
                        .HasColumnType("smallint");

                    b.Property<int>("VoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("BranchId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("FiscalPeriodId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("SourceAppId");

                    b.HasIndex("VoucherId");

                    b.ToTable("VoucherLine", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherOrigin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OriginID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("VoucherOrigin", "Finance");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CityID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ProvinceId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("ProvinceId");

                    b.ToTable("City", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.CustomForm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomFormID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("CustomForm", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.EntityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("EntityTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("EntityType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1736),
                            Name = "Account",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1880),
                            Name = "AccountCollectionAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1887),
                            Name = "AccountGroup",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1890),
                            Name = "Branch",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1893),
                            Name = "CostCenter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1982),
                            Name = "Currency",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1986),
                            Name = "DetailAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1989),
                            Name = "FiscalPeriod",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1992),
                            Name = "OperationLog",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(1997),
                            Name = "Project",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2000),
                            Name = "Setting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2003),
                            Name = "Voucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2006),
                            Name = "DraftVoucher",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2009),
                            Name = "DashboardTab",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2012),
                            Name = "Widget",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2015),
                            Name = "CheckBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 22,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2018),
                            Name = "CashRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 23,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2022),
                            Name = "SourceApp",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 24,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2026),
                            Name = "Receipt",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 25,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2029),
                            Name = "Payment",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100001,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2031),
                            Name = "Brand",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100002,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2034),
                            Name = "Unit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100003,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2037),
                            Name = "Property",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100004,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 525, DateTimeKind.Local).AddTicks(2041),
                            Name = "Attribute",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Operation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Operation", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6070),
                            Name = "View",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6323),
                            Name = "Create",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6330),
                            Name = "Edit",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6334),
                            Name = "Delete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6337),
                            Name = "Filter",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6345),
                            Name = "Print",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 7,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6348),
                            Name = "Save",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 8,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6351),
                            Name = "Archive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6354),
                            Name = "SetDefault",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6423),
                            Name = "Design",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6427),
                            Name = "Check",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6430),
                            Name = "UndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6433),
                            Name = "Confirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 14,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6436),
                            Name = "UndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6439),
                            Name = "Approve",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 16,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6442),
                            Name = "UndoApprove",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 17,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6445),
                            Name = "Finalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 18,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6450),
                            Name = "UndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 19,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6453),
                            Name = "Mark",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 20,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6456),
                            Name = "QuickReportDesign",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 21,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6459),
                            Name = "GroupDelete",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 30,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6462),
                            Name = "ViewArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 31,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6467),
                            Name = "CalendarChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 32,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6470),
                            Name = "CurrencyChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 33,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6473),
                            Name = "DecimalCountChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 34,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6477),
                            Name = "DefaultCodingChange",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 35,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6480),
                            Name = "RoleAccess",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 36,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6484),
                            Name = "CreateLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 37,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6487),
                            Name = "EditLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 38,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6490),
                            Name = "DeleteLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 39,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6493),
                            Name = "GroupDeleteLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 40,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6496),
                            Name = "CreateRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 41,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6499),
                            Name = "EditRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 42,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6503),
                            Name = "DeleteRate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 43,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6506),
                            Name = "PrintRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 44,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6509),
                            Name = "GroupDeleteRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 45,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6513),
                            Name = "ViewRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 46,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6516),
                            Name = "GroupCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 47,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6519),
                            Name = "GroupUndoCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 48,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6522),
                            Name = "GroupFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 49,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6525),
                            Name = "GroupUndoFinalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 50,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6528),
                            Name = "GroupConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 51,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6532),
                            Name = "GroupUndoConfirm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 52,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6535),
                            Name = "Normalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 53,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6538),
                            Name = "GroupNormalize",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 54,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6541),
                            Name = "Export",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 55,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6545),
                            Name = "ExportRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 56,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6548),
                            Name = "FilterRates",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 58,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6551),
                            Name = "PrintPreview",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 60,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6554),
                            Name = "CreatePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 61,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6598),
                            Name = "DeletePages",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 62,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6602),
                            Name = "CancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 63,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6605),
                            Name = "UndoCancelPage",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 64,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6608),
                            Name = "ConnectToCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 65,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6611),
                            Name = "DisconnectFromCheck",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 66,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6614),
                            Name = "AssignCashRegisterUser",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 67,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6617),
                            Name = "UndoArchive",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 68,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6620),
                            Name = "Register",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 69,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6623),
                            Name = "RemoveInvalidAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 70,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6626),
                            Name = "AggregateAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 71,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6629),
                            Name = "CreateAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 72,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6632),
                            Name = "EditAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 73,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6652),
                            Name = "DeleteAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 74,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6656),
                            Name = "GroupDeleteAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 75,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6659),
                            Name = "PrintAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 76,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6664),
                            Name = "PrintPreviewAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 77,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6667),
                            Name = "FilterAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 78,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6670),
                            Name = "ExportAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 79,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6673),
                            Name = "CreateCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 80,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6676),
                            Name = "EditCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 81,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6679),
                            Name = "DeleteCashAccountLine",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 82,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6682),
                            Name = "GroupDeleteCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 83,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6686),
                            Name = "PrintCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 84,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6689),
                            Name = "PrintPreviewCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 85,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6692),
                            Name = "FilterCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 86,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6695),
                            Name = "ExportCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 87,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6698),
                            Name = "RemoveInvalidCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 88,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6701),
                            Name = "AggregateCashAccountLines",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 89,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6704),
                            Name = "Deactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 90,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6707),
                            Name = "Reactivate",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 91,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6710),
                            Name = "PrintForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 92,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6713),
                            Name = "PrintPreviewForm",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 93,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 529, DateTimeKind.Local).AddTicks(6716),
                            Name = "UndoRegister",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSource", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2156),
                            Name = "Journal",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2302),
                            Name = "AccountBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2308),
                            Name = "CurrencyBook",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 4,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2311),
                            Name = "TestBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 5,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2314),
                            Name = "ItemBalance",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 6,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2321),
                            Name = "BalanceByAccount",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 9,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2324),
                            Name = "EnvironmentParams",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 10,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2327),
                            Name = "ProfitLoss",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 11,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2330),
                            Name = "AccountRelations",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 12,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2334),
                            Name = "BalanceSheet",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 13,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2337),
                            Name = "SystemIssue",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 15,
                            Description = "",
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 523, DateTimeKind.Local).AddTicks(2340),
                            Name = "CheckBookReport",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceListID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceList", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.OperationSourceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OperationSourceTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("OperationSourceType", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 521, DateTimeKind.Local).AddTicks(6074),
                            Name = "BaseData",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 521, DateTimeKind.Local).AddTicks(6218),
                            Name = "OperationalForms",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 521, DateTimeKind.Local).AddTicks(6225),
                            Name = "Reports",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProvinceID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Province", "Metadata");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Subsystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SubsystemID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("Subsystem", "Metadata");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 516, DateTimeKind.Local).AddTicks(1194),
                            Name = "Administration",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 2,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 519, DateTimeKind.Local).AddTicks(1805),
                            Name = "Accounting",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 3,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 519, DateTimeKind.Local).AddTicks(1921),
                            Name = "Treasury",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = 100000,
                            ModifiedDate = new DateTime(2023, 10, 20, 14, 55, 32, 519, DateTimeKind.Local).AddTicks(1928),
                            Name = "ProductScope",
                            RowGuid = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttributeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Attribute", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MetaKeyword")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("SocialLink")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Website")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Brand", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.File", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FileID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Type")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UniqeName")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.HasKey("Id");

                    b.ToTable("File", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PropertyID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Prefix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<string>("Suffix")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<short?>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Property", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UnitID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BranchId")
                        .HasColumnType("int");

                    b.Property<short>("BranchScope")
                        .HasColumnType("smallint");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("CreatedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("EnName")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<int>("FiscalPeriodId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedByName")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.Property<short?>("Status")
                        .HasColumnType("smallint");

                    b.Property<string>("Symbol")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Unit", "ProductScope");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Version", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VersionId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<Guid>("RowGuid")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid");

                    b.HasKey("Id");

                    b.ToTable("Version", "Core");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ModifiedDate = new DateTime(2022, 8, 27, 13, 56, 52, 150, DateTimeKind.Unspecified),
                            Number = "2.2.0",
                            RowGuid = new Guid("26452115-8352-42fe-a7b8-4bd3d32f50f6")
                        });
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Dashboard", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DashboardTabID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DashboardId")
                        .HasColumnType("int");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("DashboardId");

                    b.ToTable("DashboardTab", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.FunctionParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("FunctionParameterID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("DefaultValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.HasKey("Id");

                    b.ToTable("FunctionParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TabWidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Settings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("TabId")
                        .HasColumnType("int");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TabId");

                    b.HasIndex("WidgetId");

                    b.ToTable("TabWidget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UsedParameterId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ParameterId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("ParameterId");

                    b.ToTable("UsedParameter", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("DefaultSettings")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("FunctionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FunctionId");

                    b.HasIndex("TypeId");

                    b.ToTable("Widget", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetAccountID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountId")
                        .HasColumnType("int");

                    b.Property<int?>("CostCenterId")
                        .HasColumnType("int");

                    b.Property<int?>("DetailAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.Property<int>("WidgetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CostCenterId");

                    b.HasIndex("DetailAccountId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WidgetId");

                    b.ToTable("WidgetAccount", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetFunctionID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetFunction", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("WidgetTypeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("ModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<Guid>("RowGuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("rowguid")
                        .HasDefaultValueSql("(newid())");

                    b.HasKey("Id");

                    b.ToTable("WidgetType", "Reporting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleBranch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany("RoleBranches")
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleFiscalPeriod", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany("RoleFiscalPeriods")
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Auth.RoleWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("RoleWidgets")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Auth_RoleWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.CashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_CashRegister_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_PayReceive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("Accounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveAccount_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveCashAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("CashAccounts")
                        .HasForeignKey("PayReceiveId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_PayReceive")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_CashFlow_PayReceiveCashAccount_CashFlow_SourceApp");

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("PayReceive");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.PayReceive", "PayReceive")
                        .WithMany("PayReceiveVoucherLines")
                        .HasForeignKey("PayReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherLine", "VoucherLine")
                        .WithOne()
                        .HasForeignKey("SPPC.Tadbir.Model.CashFlow.PayReceiveVoucherLine", "VoucherLineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PayReceive");

                    b.Navigation("VoucherLine");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.SourceApp", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_CashFlow_SourceApp_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.UserCashRegister", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.CashFlow.CashRegister", "CashRegister")
                        .WithMany()
                        .HasForeignKey("CashRegisterId")
                        .HasConstraintName("FK_CashFlow_UserCashRegister_CashFlow_CashRegister")
                        .IsRequired();

                    b.Navigation("CashRegister");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Check_CheckBook_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Check_CheckBook_Finance_Project");

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBookPage", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Check.CheckBook", "CheckBook")
                        .WithMany("Pages")
                        .HasForeignKey("CheckBookId")
                        .HasConstraintName("FK_Check_CheckBookPage_Check_CheckBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckBook");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LabelSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.CustomForm", "CustomForm")
                        .WithMany()
                        .HasForeignKey("CustomFormID")
                        .HasConstraintName("FK_Config_LabelSetting_Metadata_CustomForm");

                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingID")
                        .HasConstraintName("FK_Config_LabelSetting_Config_Setting");

                    b.Navigation("CustomForm");

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.LogSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceType", "SourceType")
                        .WithMany()
                        .HasForeignKey("SourceTypeId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_SourceType")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Subsystem", "Subsystem")
                        .WithMany()
                        .HasForeignKey("SubsystemId")
                        .HasConstraintName("FK_Config_LogSetting_Metadata_Subsystem")
                        .IsRequired();

                    b.Navigation("EntityType");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceType");

                    b.Navigation("Subsystem");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.Setting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Parent")
                        .WithMany()
                        .HasForeignKey("ParentID")
                        .HasConstraintName("FK_Config_Setting_Config_Parent");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserSetting", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.Setting", "Setting")
                        .WithMany()
                        .HasForeignKey("SettingId")
                        .HasConstraintName("FK_Config_UserSetting_Config_Setting")
                        .IsRequired();

                    b.Navigation("Setting");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValue", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Config.UserValueCategory", "Category")
                        .WithMany("Values")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Config_UserValue_Config_Category")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.InactiveEntity", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_InactiveEntity_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_InactiveEntity_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLog", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLog_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLog_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLog_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Core.OperationLogArchive", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.EntityType", "EntityType")
                        .WithMany()
                        .HasForeignKey("EntityTypeId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_EntityType");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.Operation", "Operation")
                        .WithMany()
                        .HasForeignKey("OperationId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Operation")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSource", "Source")
                        .WithMany()
                        .HasForeignKey("SourceId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_Source");

                    b.HasOne("SPPC.Tadbir.Model.Metadata.OperationSourceList", "SourceList")
                        .WithMany()
                        .HasForeignKey("SourceListId")
                        .HasConstraintName("FK_Core_OperationLogArchive_Metadata_SourceList");

                    b.Navigation("Branch");

                    b.Navigation("EntityType");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Operation");

                    b.Navigation("Source");

                    b.Navigation("SourceList");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Account_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Account_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountGroup", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .HasConstraintName("FK_Finance_Account_Finance_Group");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Account_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Group");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollection", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", "Category")
                        .WithMany("AccountCollections")
                        .HasForeignKey("CategoryID")
                        .HasConstraintName("FK_Finance_AccountCollection_Finance_Category");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountCollection", "Collection")
                        .WithMany()
                        .HasForeignKey("CollectionId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_Collection")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_AccountCollectionAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Collection");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany("AccountCostCenters")
                        .HasForeignKey("CostCenterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCurrency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountCurrencies")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountDetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany("AccountDetailAccounts")
                        .HasForeignKey("DetailAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("DetailAccount");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountHolder", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountOwner")
                        .WithMany("AccountHolders")
                        .HasForeignKey("AccountOwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccountOwner");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("AccountOwner")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.AccountOwner", "AccountID")
                        .HasConstraintName("FK_Finance_AccountOwner_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountProject", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany("AccountProjects")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany("AccountProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CostCenter_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_CostCenter_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Currency_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CurrencyRate", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_CurrencyRate_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany("Rates")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithOne("CustomerTaxInfo")
                        .HasForeignKey("SPPC.Tadbir.Model.Finance.CustomerTaxInfo", "AccountID")
                        .HasConstraintName("FK_Finance_CustomerTaxInfo_Finance_Account")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_DetailAccount_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_DetailAccount_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("Currency");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Project_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Project_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_Finance_Project_Finance_Parent");

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_Voucher_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.VoucherOrigin", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .HasConstraintName("FK_Finance_Voucher_Finance_VoucherOrigin")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Core.DocumentStatus", "Status")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .HasConstraintName("FK_Finance_Voucher_Core_Status")
                        .IsRequired();

                    b.Navigation("Branch");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Origin");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.VoucherLine", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Account")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_Finance_VoucherLine_Corporate_Branch")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Currency");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.FiscalPeriod", "FiscalPeriod")
                        .WithMany()
                        .HasForeignKey("FiscalPeriodId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_FiscalPeriod")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.CashFlow.SourceApp", "SourceApp")
                        .WithMany()
                        .HasForeignKey("SourceAppId")
                        .HasConstraintName("FK_Finance_VoucherLine_CashFlow_SourceApp");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Voucher", "Voucher")
                        .WithMany("Lines")
                        .HasForeignKey("VoucherId")
                        .HasConstraintName("FK_Finance_VoucherLine_Finance_Voucher")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Branch");

                    b.Navigation("CostCenter");

                    b.Navigation("Currency");

                    b.Navigation("DetailAccount");

                    b.Navigation("FiscalPeriod");

                    b.Navigation("Project");

                    b.Navigation("SourceApp");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.City", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Metadata.Province", "Province")
                        .WithMany("Cities")
                        .HasForeignKey("ProvinceId")
                        .HasConstraintName("FK_Metadata_City_Metadata_Province")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Province");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Attribute", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Brand", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Property", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.ProductScope.Unit", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Corporate.Branch", "Branch")
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .IsRequired();

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.Dashboard", "Dashboard")
                        .WithMany("Tabs")
                        .HasForeignKey("DashboardId")
                        .HasConstraintName("FK_Reporting_DashboardTab_Reporting_Dashboard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dashboard");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.TabWidget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.DashboardTab", "Tab")
                        .WithMany("Widgets")
                        .HasForeignKey("TabId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_DashboardTab")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany()
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_TabWidget_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tab");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.UsedParameter", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany("Parameters")
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.FunctionParameter", "Parameter")
                        .WithMany()
                        .HasForeignKey("ParameterId")
                        .HasConstraintName("FK_Reporting_UsedParameter_Reporting_Parameter")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Parameter");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetFunction", "Function")
                        .WithMany()
                        .HasForeignKey("FunctionId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Function")
                        .IsRequired();

                    b.HasOne("SPPC.Tadbir.Model.Reporting.WidgetType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_Reporting_Widget_Reporting_Type")
                        .IsRequired();

                    b.Navigation("Function");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetAccount", b =>
                {
                    b.HasOne("SPPC.Tadbir.Model.Finance.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Account");

                    b.HasOne("SPPC.Tadbir.Model.Finance.CostCenter", "CostCenter")
                        .WithMany()
                        .HasForeignKey("CostCenterId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_CostCenter");

                    b.HasOne("SPPC.Tadbir.Model.Finance.DetailAccount", "DetailAccount")
                        .WithMany()
                        .HasForeignKey("DetailAccountId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_DetailAccount");

                    b.HasOne("SPPC.Tadbir.Model.Finance.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Finance_Project");

                    b.HasOne("SPPC.Tadbir.Model.Reporting.Widget", "Widget")
                        .WithMany("Accounts")
                        .HasForeignKey("WidgetId")
                        .HasConstraintName("FK_Reporting_WidgetAccount_Reporting_Widget")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("CostCenter");

                    b.Navigation("DetailAccount");

                    b.Navigation("Project");

                    b.Navigation("Widget");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.CashFlow.PayReceive", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CashAccounts");

                    b.Navigation("PayReceiveVoucherLines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Check.CheckBook", b =>
                {
                    b.Navigation("Pages");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Config.UserValueCategory", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Corporate.Branch", b =>
                {
                    b.Navigation("Children");

                    b.Navigation("RoleBranches");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Account", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("AccountCurrencies");

                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("AccountOwner");

                    b.Navigation("AccountProjects");

                    b.Navigation("Children");

                    b.Navigation("CustomerTaxInfo");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountCollectionCategory", b =>
                {
                    b.Navigation("AccountCollections");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.AccountOwner", b =>
                {
                    b.Navigation("AccountHolders");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.CostCenter", b =>
                {
                    b.Navigation("AccountCostCenters");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Currency", b =>
                {
                    b.Navigation("Rates");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.DetailAccount", b =>
                {
                    b.Navigation("AccountDetailAccounts");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.FiscalPeriod", b =>
                {
                    b.Navigation("RoleFiscalPeriods");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Project", b =>
                {
                    b.Navigation("AccountProjects");

                    b.Navigation("Children");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Finance.Voucher", b =>
                {
                    b.Navigation("Lines");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Metadata.Province", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Dashboard", b =>
                {
                    b.Navigation("Tabs");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.DashboardTab", b =>
                {
                    b.Navigation("Widgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.Widget", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("RoleWidgets");
                });

            modelBuilder.Entity("SPPC.Tadbir.Model.Reporting.WidgetFunction", b =>
                {
                    b.Navigation("Parameters");
                });
#pragma warning restore 612, 618
        }
    }
}
