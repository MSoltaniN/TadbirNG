<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>

// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: <#= _version #>
//     Template Version: 1.0
//     Generation Date: <#= DateTime.Now.ToString() #> 
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata.Builders;
using System;
using System.Collections.Generic;
using SPPC.Tadbir.Model;
using SPPC.Tadbir.Model.Metadata;
using SPPC.Tadbir.Model.Auth;
using SPPC.Tadbir.Model.Config;
using SPPC.Tadbir.Model.Reporting;

namespace SPPC.Tadbir.Persistence.Seeding
{

    internal class <#= _modelType.Name #>Configuration : IEntityTypeConfiguration<<#= _modelType.Name #>>
    {
        public void Configure(EntityTypeBuilder<<#= _modelType.Name #>> builder)
        {
        <#foreach (var seed in _seeds)
        {#>  
            builder.HasData(new <#= _modelType.Name #> {  <#foreach (var property in GetFilteredProperties()) {  #>  <#= property.Name #> =  <#= GetFormattedValue(property,seed) ?? string.Empty #> <#= property != _modelType.GetProperties().Last() ? "," : "" #>  <# } #> });
        <#}#>

        }
    }
}