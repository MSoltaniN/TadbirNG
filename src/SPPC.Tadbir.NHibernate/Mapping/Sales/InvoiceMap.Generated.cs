// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.0.0
//     Template Version: 1.0
//     Generation Date: 2017-08-02 8:07:49 PM
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using SPPC.Tadbir.Model.Sales;
using FluentNHibernate.Mapping;

namespace SPPC.Tadbir.NHibernate.Mapping
{
    /// <summary>
    /// Defines fluent mappings for the <see cref="Invoice"/> entity class.
    /// </summary>
    public partial class InvoiceMap : ClassMap<Invoice>
    {
        /// <summary>
        /// Initializes a new instance of the InvoiceMap class and specifies NHibernate mappings
        /// using Fluent NHibernate API.
        /// </summary>
        public InvoiceMap()
        {
            Schema("Sales");
            Table("Invoice");
            Id(x => x.Id)
                .Column("InvoiceID")
                .GeneratedBy.Identity();
            Map(x => x.No)
                .Length(64)
                .Not.Nullable();
            Map(x => x.DocumentNo)
                .Length(64)
                .Not.Nullable();
            Map(x => x.Status)
                .Length(64)
                .Not.Nullable();
            Map(x => x.OperationalStatus)
                .Length(64)
                .Not.Nullable();
            Map(x => x.IsActive)
                .Not.Nullable();
            Map(x => x.IsCancelled)
                .Not.Nullable();
            Map(x => x.Type)
                .Not.Nullable();
            Map(x => x.Reference)
                .Length(64)
                .Nullable();
            Map(x => x.Date)
                .Not.Nullable();
            Map(x => x.Discount)
                .Not.Nullable();
            Map(x => x.Expense)
                .Not.Nullable();
            Map(x => x.ContractNo)
                .Length(64)
                .Nullable();
            Map(x => x.ShipmentNo)
                .Length(64)
                .Nullable();
            Map(x => x.Description)
                .Length(256)
                .Nullable();
            Map(x => x.CreatedDate)
                .Not.Nullable();
            Map(x => x.ModifiedDate);
            Map(x => x.ConfirmedDate)
                .Nullable();
            Map(x => x.ApprovedDate)
                .Nullable();
            Map(x => x.Timestamp)
                .Not.Nullable();
            Map(x => x.RowGuid, "rowguid")
                .Generated.Insert();

            MapReferences();
        }

        private void MapReferences()
        {
            References(x => x.DocumentType)
                .Column("DocumentTypeID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.DocumentStatus)
                .Column("DocumentStatusID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.BusinessPartner)
                .Column("BusinessPartnerID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.Customer)
                .Column("CustomerID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.PartnerAccount)
                .Column("PartnerAccountID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.PartnerDetailAccount)
                .Column("PartnerDetailAccountID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.PartnerCostCenter)
                .Column("PartnerCostCenterID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.PartnerProject)
                .Column("PartnerProjectID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.Account)
                .Column("AccountID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.DetailAccount)
                .Column("DetailAccountID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.CostCenter)
                .Column("CostCenterID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.Project)
                .Column("ProjectID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.ReferenceInvoice)
                .Column("ReferenceInvoiceID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.IssueReceiptVoucher)
                .Column("IssueReceiptVoucherID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.FiscalPeriod)
                .Column("FiscalPeriodID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.Branch)
                .Column("BranchID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.CreatedBy)
                .Column("CreatedByID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.ModifiedBy)
                .Column("ModifiedByID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.ConfirmedBy)
                .Column("ConfirmedByID")
                .Cascade.None()
                .Not.LazyLoad();
            References(x => x.ApprovedBy)
                .Column("ApprovedByID")
                .Cascade.None()
                .Not.LazyLoad();
        }
    }
}
