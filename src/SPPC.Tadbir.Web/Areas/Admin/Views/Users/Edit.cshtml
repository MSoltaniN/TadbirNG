@using SPPC.Tadbir.Values
@model SPPC.Tadbir.ViewModel.Auth.UserViewModel

@{
    ViewBag.Title = Users.EditExisting;
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(Strings.HomePage, "index", "home", new { area = "" }, null)</li>
    <li>@Html.ActionLink(Users.IndexTitle, "index", "users", new { area = "admin" }, null)</li>
    <li class="active">@Users.EditExisting</li>
</ol>

<div class="col-sm-8 col-sm-offset-2 form-centered">
    <div class="page-header">
        <h2>@Users.EditExisting</h2>
    </div>
    <div class="form-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.PersonFirstName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PersonFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonFirstName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PersonLastName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.PersonLastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PersonLastName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                @Html.PasswordFor(model => model.Password, new { @class = "form-control", value = Users.DummyPassword })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.CheckBoxFor(model => model.IsEnabled)
                @Users.Enabled
            </div>

            <div class="form-group">
                <input type="submit" value="@Strings.Save" class="btn btn-primary" />
                @Html.ActionLink(Strings.Cancel, "index", "users", new { area = "admin" }, new { @class = "btn btn-primary" })
            </div>
        }
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
