@using Microsoft.Practices.Unity
@using PagedList.Mvc
@using SPPC.Framework.Values
@using SPPC.Tadbir.Security
@using SPPC.Tadbir.Service
@using SPPC.Tadbir.Values
@using SPPC.Tadbir.Web.AppStart


@model PagedList.IPagedList<SPPC.Tadbir.ViewModel.Inventory.ProductInventoryViewModel>

@{
    string title = String.Format(LocalStrings.IndexTitle, Entities.ProductInventories);
    string createTitle = String.Format(LocalStrings.CreateNewEntity, Entities.ProductInventoryAlt);
    ViewBag.Title = title;
    string pageInfo = String.Format(LocalStrings.NoRecords, Entities.AProductInventory);
    if (Model.Count > 0)
    {
        pageInfo = String.Format(
            LocalStrings.CurrentPageInfo,
            Model.TotalItemCount, Entities.ProductInventory, Model.PageNumber, Model.PageCount);
    }

    var contextManager = UnityConfig
        .GetConfiguredContainer()
        .Resolve<ISecurityContextManager>();
    var currentContext = contextManager.CurrentContext;
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(LocalStrings.HomePage, "index", "home", new { area = "" }, null)</li>
    <li class="active">@title</li>
</ol>

<div class="page-header">
    <h3>@title</h3>
</div>

@if (currentContext.HasPermissions(Permissions.ProductInventory.Create))
{
    <p>
        @Html.ActionLink(createTitle, "create", "inventories", new { }, new { @class = "btn btn-sm btn-primary" })
    </p>
}
<span class="pull-left">@pageInfo</span>

<table class="table table-bordered table-striped table-responsive table-hover">
    <thead>
        <tr>
            <th>@FieldNames.WarehouseField</th>
            <th>@FieldNames.ProductCodeField</th>
            <th>@FieldNames.ProductNameField</th>
            <th>@FieldNames.InitialInventory</th>
            <th>@FieldNames.UomField</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.WarehouseName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductCode)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UomName)
                </td>
                <td>
                </td>
            </tr>
        }
    </tbody>
</table>

@Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), PagedListRenderOptions.ClassicPlusFirstAndLast)

@if (currentContext.HasPermissions(Permissions.ProductInventory.Create))
{
    <p>
        @Html.ActionLink(createTitle, "create", "inventories", new { }, new { @class = "btn btn-sm btn-primary" })
    </p>
}
