@using SPPC.Framework.Values
@using SPPC.Tadbir.Values
@model SPPC.Tadbir.ViewModel.Finance.AccountViewModel

@{
    ViewBag.Title = Accounts.EditExisting;
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(LocalStrings.HomePage, "index", "home", new { area = "" }, null)</li>
    <li>@Html.ActionLink(Accounts.IndexTitle, "index", "accounts", new { area = "Accounting" }, null)</li>
    <li class="active">@Accounts.EditExisting</li>
</ol>

<div class="col-sm-8 col-sm-offset-2 form-centered">
    <div class="page-header">
        <h2>@Accounts.EditExisting</h2>
    </div>
    <div class="form-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.BranchId)
            @Html.HiddenFor(model => model.FiscalPeriodId)

            <div class="form-group">
                @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                <input type="submit" value="@LocalStrings.Save" class="btn btn-primary" />
                @Html.ActionLink(LocalStrings.Cancel, "index", "accounts", new { area = "Accounting" }, new { @class = "btn btn-primary" })
            </div>
        }
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
