@using SPPC.Framework.Extensions
@using SPPC.Framework.Values
@using SPPC.Tadbir.Values
@using SPPC.Tadbir.ViewModel.Finance
@using PagedList.Mvc

@model PagedList.IPagedList<AccountViewModel>

@{
    ViewBag.Title = Accounts.IndexTitle;
    string pageInfo = Accounts.NoRecords;
    if (Model.Count > 0)
    {
        pageInfo = String.Format(
            Accounts.CurrentPageInfo,
            Model.TotalItemCount, Model.PageNumber, Model.PageCount);
    }
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(LocalStrings.HomePage, "index", "home", new { area = "" }, null)</li>
    <li class="active">@Accounts.IndexTitle</li>
</ol>

<div class="page-header">
    <h3>@Accounts.IndexTitle</h3>
</div>

<p>
    @Html.ActionLink(Accounts.CreateNew, "create", "accounts", new { }, new { @class = "btn btn-sm btn-primary" })
    <span class="pull-left">@pageInfo</span>
</p>

<table class="table table-bordered table-striped table-responsive table-hover">
    <thead>
        <tr>
            <th>@FieldNames.CodeField</th>
            <th>@FieldNames.NameField</th>
            <th>@FieldNames.DescriptionField</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Code)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td title="@item.Description">
                @item.Description.AutoEllipsis()
            </td>
            <td>
                @Html.ActionLink(LocalStrings.Edit, "edit", new { id = item.Id }) |
                @Html.ActionLink(LocalStrings.Details, "details", new { id = item.Id }) |
                @Html.ActionLink(LocalStrings.Delete, "delete", new { id = item.Id })
            </td>
        </tr>
    }
    </tbody>
</table>

@Html.PagedListPager(Model, page => Url.Action("index", new { page = page }), PagedListRenderOptions.ClassicPlusFirstAndLast)

<p>
    @Html.ActionLink(Accounts.CreateNew, "create", "accounts", new { }, new { @class = "btn btn-sm btn-primary" })
</p>

@section scripts {
    @Scripts.Render("~/bundles/site")
}
