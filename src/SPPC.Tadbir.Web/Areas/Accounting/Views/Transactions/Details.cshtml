@using System.Globalization
@using Microsoft.Practices.Unity
@using SPPC.Tadbir.Security
@using SPPC.Tadbir.Service
@using SPPC.Tadbir.Web.AppStart
@using SPPC.Framework.Extensions
@using SPPC.Framework.Values
@using SPPC.Tadbir.Values
@model SPPC.Tadbir.ViewModel.Finance.TransactionFullViewModel

@{
    string title = String.Format(LocalStrings.EntityDetails, Entities.Transaction);
    string indexTitle = String.Format(LocalStrings.IndexTitle, Entities.Transactions);
    string editTitle = String.Format(LocalStrings.EditExistingEntity, Entities.Transaction);
    ViewBag.Title = title;
    var persianCulture = new CultureInfo("fa-IR");
    persianCulture.NumberFormat.CurrencySymbol = String.Empty;

    var contextManager = UnityConfig
        .GetConfiguredContainer()
        .Resolve<ISecurityContextManager>();
    var currentContext = contextManager.CurrentContext;
    int row = 1;
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(LocalStrings.HomePage, "index", "home", new { area = "" }, null)</li>
    <li>@Html.ActionLink(indexTitle, "index", "transactions", new { area = "accounting" }, null)</li>
    <li class="active">@title</li>
</ol>

<div class="col-sm-8 col-sm-offset-2 form-centered">
    <div class="page-header">
        <h2>@title</h2>
    </div>
    <dl>
        <dt>
            @Html.DisplayNameFor(model => model.Transaction.No)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Transaction.No)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Transaction.Date)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Transaction.Date)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Transaction.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Transaction.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Transaction.Status)
        </dt>
        <dd>
            @TransactionStatus.ToLocalValue(Model.Transaction.Status)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Transaction.OperationalStatus)
        </dt>
        <dd>
            @DocumentStatus.ToLocalValue(Model.Transaction.OperationalStatus)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FiscalPeriodName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.FiscalPeriodName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BranchName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BranchName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.BranchCompanyName)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.BranchCompanyName)
        </dd>
    </dl>

    <div class="page-header">
        <h4>@Entities.TransactionLines</h4>
    </div>
    <table class="table table-bordered table-striped table-responsive table-hover">
        <thead>
            <tr>
                <th>@FieldNames.AccountCodeField</th>
                <th>@FieldNames.CurrencyTypeField</th>
                <th>@FieldNames.DescriptionField</th>
                <th>@FieldNames.DebitField</th>
                <th>@FieldNames.CreditField</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Lines)
            {
            <tr>
                <td>
                    @item.AccountCode
                </td>
                <td>
                    @item.CurrencyName
                </td>
                <td title="@item.Description">
                    @item.Description.AutoEllipsis(50)
                </td>
                <td>
                    @item.Debit.ToString("C0", persianCulture)
                </td>
                <td>
                    @item.Credit.ToString("C0", persianCulture)
                </td>
                <td>
                    @Html.ActionLink(LocalStrings.Details, "details", "articles", new { id = item.Id }, null)
                </td>
            </tr>
            }
            <tr>
                <td colspan="3">
                    @Strings.Total
                </td>
                <td>
                    @Model.Lines.Select(line => line.Debit).Sum().ToString("C0", persianCulture)
                </td>
                <td>
                    @Model.Lines.Select(line => line.Credit).Sum().ToString("C0", persianCulture)
                </td>
            </tr>
        </tbody>
    </table>

    <div class="page-header">
        <h4>@Strings.ActionsChain</h4>
    </div>
    @if (Model.Actions.Count > 0)
    {
    <table class="table table-bordered table-striped table-responsive table-hover">
        <thead>
            <tr>
                <th>@Strings.Row</th>
                <th>@FieldNames.DateField</th>
                <th>@FieldNames.Time</th>
                <th>@FieldNames.UserFullName</th>
                <th>@FieldNames.ActionType</th>
                <th>@FieldNames.StatusField</th>
                <th>@FieldNames.OperationalStatusField</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.Actions)
        {
            <tr>
                <td>
                    @row
                </td>
                <td>
                    @item.Date
                </td>
                <td>
                    @String.Format("{0}:{1}:{2}", item.Time.Hours, item.Time.Minutes.ToString("D2"), item.Time.Seconds.ToString("D2"))
                </td>
                <td>
                    @item.UserFullName
                </td>
                <td>
                    @DocumentAction.ToLocalValue(item.Action)
                </td>
                <td>
                    @item.Status
                </td>
                <td>
                    @item.OperationalStatus
                </td>
            </tr>
            row++;
        }
        </tbody>
    </table>
    }
    else
    {
        <p>@String.Format(Strings.NoDocumentActions, Entities.Transaction)</p>
    }
    <br /><br />
    <p>
        @if (currentContext.HasPermissions(Permissions.Transaction.Edit))
        {
            @Html.ActionLink(editTitle, "edit", new { id = Model.Transaction.Id })<span> | </span>
        }
        @Html.ActionLink(indexTitle, "index")
        @if (Request.QueryString.AllKeys.Contains("returnUrl"))
        {
            string caption = String.Format(LocalStrings.ReturnToPage, Strings.Cartable);
            <span> | </span>@Html.ActionLink(caption, "index", "cartable", new { area = String.Empty }, new { @class = "btn btn-primary" })
        }
    </p>
</div>
