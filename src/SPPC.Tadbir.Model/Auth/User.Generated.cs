// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 1.0.0.0
//     Template Version: 1.0
//     Generation Date: 2017-02-15 2:57:55 PM
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using SPPC.Tadbir.Model.Contact;
using SPPC.Tadbir.Model.Finance;
using SwForAll.Platform.Domain;

namespace SPPC.Tadbir.Model.Auth
{
    /// <summary>
    /// Represents an application user recognized by the security subsystem
    /// </summary>
    public partial class User : IEntity
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="User"/> class.
        /// </summary>
        public User()
        {
            this.ModifiedDate = DateTime.Now;
            InitReferences();
        }

        /// <summary>
        /// Gets or sets the unique identifier for this entity. This property is auto-generated.
        /// </summary>
        public virtual int Id { get; set; }

        /// <summary>
        /// Gets or sets the unique identifier for the database row for this entity. This property is auto-generated.
        /// </summary>
        public virtual Guid RowGuid { get; set; }

        /// <summary>
        /// Gets or sets the date when database row for this entity was last modified. This property is auto-generated.
        /// </summary>
        public virtual DateTime ModifiedDate { get; set; }

        /// <summary>
        /// Gets or sets the collection of all financial transactions created by this user
        /// </summary>
        public virtual IList<Transaction> CreatedTransactions { get; protected set; }

        /// <summary>
        /// Gets or sets the collection of all financial transactions modified by this user
        /// </summary>
        public virtual IList<Transaction> ModifiedTransactions { get; protected set; }

        /// <summary>
        /// Gets or sets the collection of all financial transactions verified by this user
        /// </summary>
        public virtual IList<Transaction> VerifiedTransactions { get; protected set; }

        /// <summary>
        /// Gets or sets the collection of all financial transactions approved by this user
        /// </summary>
        public virtual IList<Transaction> ApprovedTransactions { get; protected set; }

        /// <summary>
        /// Gets or sets the business person that this user represents
        /// </summary>
        public virtual Person Person { get; set; }

        private void InitReferences()
        {
            this.CreatedTransactions = new List<Transaction>();
            this.ModifiedTransactions = new List<Transaction>();
            this.VerifiedTransactions = new List<Transaction>();
            this.ApprovedTransactions = new List<Transaction>();

            //// IMPORTANT NOTE: DO NOT add initialization statements for one-to-one and many-to-one relationships.
            //// 1. Initializing one-to-one associations causes StackOverflowException (A initializes B and B initializes A)
            //// 2. Initializing many-to-one associations causes most mapping tests to fail, because they will trigger many
            //// unnecessary operations (INSERT and UPDATE) by in-memory SQLite database.
        }
    }
}
